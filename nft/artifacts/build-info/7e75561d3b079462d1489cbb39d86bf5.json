{
	"id": "7e75561d3b079462d1489cbb39d86bf5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/ERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\ncontract BeeItems is  ERC1155 , Ownable{\r\n\r\n    uint256 public tokenSupply;\r\n\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n    }\r\n\r\n    function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r\n            ids[i - tokenSupply] = i;\r\n            amounts[i - tokenSupply] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n        tokenSupply = tokenSupply + idsNumber;\r\n    }\r\n\r\n    function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i - start] = i;\r\n            amounts[i - start] = 1;\r\n        }\r\n        safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\");\r\n    }\r\n\r\n\r\n    function setURI(string memory newuri) public onlyOwner{\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n        tokenSupply = tokenSupply + ids.length;\r\n    }\r\n\r\n    function getTokenSupply() public view returns (uint256) {\r\n        return tokenSupply;\r\n    }\r\n\r\n    function brun(\r\n        address account,\r\n        uint256 id,\r\n        uint256 value) public {\r\n\r\n        require(\r\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        _burn(account, id, value);\r\n        --tokenSupply;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./extensions/IERC1155MetadataURI.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/Context.sol\";\r\nimport \"../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/ERC1155.sol": {
				"BeeItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "brun",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "mintBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"nft/ERC1155.sol\":269:342  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:967  _transferOwnership */\n  tag_12\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{... */\n  jump(tag_31)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  dup1\n  mload\n  tag_16\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  swap2\n  and\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  dup3\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n  0x00\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{... */\ntag_17:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_23\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_26)\ntag_23:\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\n    /* \"#utility.yul\":14:394   */\ntag_21:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_33:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  sub\n    /* \"#utility.yul\":227:388   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_34:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ac14e6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xad974f4c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x71ac14e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7824407f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9416308e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x0e89341c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x092f2dbf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(... */\n    tag_6:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_8:\n      tag_36\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_10:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_36\n      tag_65\n      jump\t// in\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n    tag_12:\n      tag_36\n      tag_67\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"nft/ERC1155.sol\":232:258  uint256 public tokenSupply */\n    tag_13:\n      tag_24\n      sload(0x04)\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      sload(0x03)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8770:8821   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8758:8760   */\n      0x20\n        /* \"#utility.yul\":8743:8761   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":8624:8827   */\n      jump\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {... */\n    tag_15:\n      tag_36\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      tag_36\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {... */\n    tag_17:\n        /* \"nft/ERC1155.sol\":1668:1679  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {... */\n      jump(tag_24)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_30\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_19:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_36\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10780:10782   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10762:10783   */\n      mstore\n        /* \"#utility.yul\":10819:10821   */\n      0x2b\n        /* \"#utility.yul\":10799:10817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10792:10822   */\n      mstore\n        /* \"#utility.yul\":10858:10892   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10838:10856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10831:10893   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10909:10927   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10902:10943   */\n      mstore\n        /* \"#utility.yul\":10960:10979   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_33:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_105\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_107\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1381:1564  return... */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_113:\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      tag_117\n        /* \"nft/ERC1155.sol\":1323:1329  newuri */\n      dup2\n        /* \"nft/ERC1155.sol\":1315:1322  _setURI */\n      tag_118\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      jump\t// in\n    tag_117:\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      eq\n      dup1\n        /* \"nft/ERC1155.sol\":1823:1889  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_122\n      jumpi\n      pop\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n      tag_122\n        /* \"nft/ERC1155.sol\":1867:1874  account */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n    tag_122:\n        /* \"nft/ERC1155.sol\":1801:1958  require(... */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      tag_127\n        /* \"nft/ERC1155.sol\":1977:1984  account */\n      dup4\n        /* \"nft/ERC1155.sol\":1986:1988  id */\n      dup4\n        /* \"nft/ERC1155.sol\":1990:1995  value */\n      dup4\n        /* \"nft/ERC1155.sol\":1971:1976  _burn */\n      tag_128\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      jump\t// in\n    tag_127:\n        /* \"nft/ERC1155.sol\":2009:2020  tokenSupply */\n      0x04\n      0x00\n        /* \"nft/ERC1155.sol\":2007:2020  --tokenSupply */\n      dup2\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_53:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_141:\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      tag_144\n        /* \"nft/ERC1155.sol\":1506:1508  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1510:1513  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1515:1522  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1524:1528  data */\n      dup5\n        /* \"nft/ERC1155.sol\":1495:1505  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"nft/ERC1155.sol\":1568:1571  ids */\n      dup3\n        /* \"nft/ERC1155.sol\":1568:1578  ids.length */\n      mload\n        /* \"nft/ERC1155.sol\":1554:1565  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1554:1578  tokenSupply + ids.length */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"nft/ERC1155.sol\":1540:1551  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":1540:1578  tokenSupply = tokenSupply + ids.length */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_151\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_151\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12754:12756   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12736:12757   */\n      mstore\n        /* \"#utility.yul\":12793:12795   */\n      0x32\n        /* \"#utility.yul\":12773:12791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12766:12796   */\n      mstore\n        /* \"#utility.yul\":12832:12866   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":12812:12830   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12805:12867   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12883:12901   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12876:12924   */\n      mstore\n        /* \"#utility.yul\":12941:12960   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_102\n        /* \"#utility.yul\":12552:12966   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n    tag_153:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13173:13175   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13155:13176   */\n      mstore\n        /* \"#utility.yul\":13212:13214   */\n      0x29\n        /* \"#utility.yul\":13192:13210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13185:13215   */\n      mstore\n        /* \"#utility.yul\":13251:13285   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13231:13249   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13224:13286   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13302:13320   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13295:13334   */\n      mstore\n        /* \"#utility.yul\":13351:13370   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_102\n        /* \"#utility.yul\":12971:13376   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_159:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_166:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_169\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_174\n      tag_172\n      jump\t// in\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_27\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_169:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_172\n      jump\t// in\n    tag_176:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_177\n      dup2\n      tag_178\n      jump\t// in\n    tag_177:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      tag_185\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1813:1814  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1804  _transferOwnership */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_185:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"nft/ERC1155.sol\":425:445  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":462:471  idsNumber */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":448:472  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_194\n      tag_164\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_195\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_195:\n      pop\n        /* \"nft/ERC1155.sol\":425:472  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":483:507  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":524:533  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":510:534  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      tag_197\n      tag_164\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"nft/ERC1155.sol\":562:573  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":483:534  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      swap2\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n    tag_199:\n        /* \"nft/ERC1155.sol\":592:603  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_202\n      swap1\n        /* \"nft/ERC1155.sol\":580:589  idsNumber */\n      dup6\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"nft/ERC1155.sol\":575:576  i */\n      dup2\n        /* \"nft/ERC1155.sol\":575:604  i < (idsNumber + tokenSupply) */\n      lt\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"nft/ERC1155.sol\":649:650  i */\n      dup1\n        /* \"nft/ERC1155.sol\":626:629  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":634:645  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":630:631  i */\n      dup4\n        /* \"nft/ERC1155.sol\":630:645  i - tokenSupply */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"nft/ERC1155.sol\":626:646  ids[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_172\n      jump\t// in\n    tag_206:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft/ERC1155.sol\":626:650  ids[i - tokenSupply] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":692:693  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":665:672  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":677:688  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":673:674  i */\n      dup4\n        /* \"nft/ERC1155.sol\":673:688  i - tokenSupply */\n      tag_207\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_207:\n        /* \"nft/ERC1155.sol\":665:689  amounts[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_209\n      jumpi\n      tag_209\n      tag_172\n      jump\t// in\n    tag_209:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":665:693  amounts[i - tokenSupply] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":606:609  i++ */\n      dup1\n      tag_210\n      dup2\n      tag_178\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n      jump(tag_199)\n    tag_200:\n      pop\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_211\n        /* \"nft/ERC1155.sol\":726:736  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":738:741  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":743:750  amounts */\n      dup4\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":715:725  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_211:\n        /* \"nft/ERC1155.sol\":794:803  idsNumber */\n      dup3\n        /* \"nft/ERC1155.sol\":780:791  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":780:803  tokenSupply + idsNumber */\n      tag_212\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"nft/ERC1155.sol\":766:777  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":766:803  tokenSupply = tokenSupply + idsNumber */\n      sstore\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {... */\n    tag_79:\n        /* \"nft/ERC1155.sol\":911:931  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":948:957  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":934:958  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_216\n      tag_164\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_217:\n      pop\n        /* \"nft/ERC1155.sol\":911:958  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":969:993  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":1010:1019  idsNumber */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":996:1020  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_164\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_220:\n      pop\n        /* \"nft/ERC1155.sol\":969:1020  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":1048:1053  start */\n      dup5\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n    tag_221:\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_224\n        /* \"nft/ERC1155.sol\":1072:1077  start */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1069  idsNumber */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_147\n      jump\t// in\n    tag_224:\n        /* \"nft/ERC1155.sol\":1055:1056  i */\n      dup2\n        /* \"nft/ERC1155.sol\":1055:1078  i < (idsNumber + start) */\n      lt\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup1\n        /* \"nft/ERC1155.sol\":1100:1103  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_225\n        /* \"nft/ERC1155.sol\":1108:1113  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_204\n      jump\t// in\n    tag_225:\n        /* \"nft/ERC1155.sol\":1100:1114  ids[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_172\n      jump\t// in\n    tag_227:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1100:1118  ids[i - start] = i */\n      mstore\n        /* \"nft/ERC1155.sol\":1154:1155  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":1133:1140  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_228\n        /* \"nft/ERC1155.sol\":1145:1150  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1141:1142  i */\n      dup5\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_204\n      jump\t// in\n    tag_228:\n        /* \"nft/ERC1155.sol\":1133:1151  amounts[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_230\n      tag_172\n      jump\t// in\n    tag_230:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1133:1155  amounts[i - start] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":1080:1083  i++ */\n      dup1\n      tag_231\n      dup2\n      tag_178\n      jump\t// in\n    tag_231:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      tag_156\n        /* \"nft/ERC1155.sol\":1199:1209  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":1211:1213  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1215:1218  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1220:1227  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":1177:1198  safeBatchTransferFrom */\n      tag_57\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_83:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_234\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_236\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_242\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_242\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_242:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_244:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_247\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2090  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13985:13987   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13967:13988   */\n      mstore\n        /* \"#utility.yul\":14024:14026   */\n      0x26\n        /* \"#utility.yul\":14004:14022   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13997:14027   */\n      mstore\n        /* \"#utility.yul\":14063:14097   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14043:14061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14036:14098   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":14114:14132   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14107:14143   */\n      mstore\n        /* \"#utility.yul\":14160:14179   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_102\n        /* \"#utility.yul\":13783:14185   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_254:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2163:2171  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2162  _transferOwnership */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      dup1\n      mload\n      tag_234\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n      0x02\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_262\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10691:10709  from != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14392:14394   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14374:14395   */\n      mstore\n        /* \"#utility.yul\":14431:14433   */\n      0x23\n        /* \"#utility.yul\":14411:14429   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14404:14434   */\n      mstore\n        /* \"#utility.yul\":14470:14504   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":14450:14468   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14443:14505   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":14521:14539   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14514:14547   */\n      mstore\n        /* \"#utility.yul\":14564:14583   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":14190:14589   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n    tag_264:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_268\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10841  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10762:10778  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      tag_269\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10873:10875  id */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10872  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      jump\t// in\n    tag_269:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      tag_271\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10896:10902  amount */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10895  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      jump\t// in\n    tag_271:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      swap1\n      mstore\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10921:10940  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10956  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10962  _balances[id][from] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10981:11002  fromBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14796:14798   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14778:14799   */\n      mstore\n        /* \"#utility.yul\":14835:14837   */\n      0x24\n        /* \"#utility.yul\":14815:14833   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14808:14838   */\n      mstore\n        /* \"#utility.yul\":14874:14908   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":14854:14872   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14847:14909   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":14925:14943   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14918:14952   */\n      mstore\n        /* \"#utility.yul\":14969:14988   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":14594:14994   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n    tag_273:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11088  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11092  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      dup10\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11101:11121  fromBalance - amount */\n      dup9\n      dup8\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11121  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":15173:15198   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":15214:15232   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":15207:15241   */\n      dup9\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15146:15164   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10672:11212  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9579:10314  function _mintBatch(... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9757:9773  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15454:15456   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15436:15457   */\n      mstore\n        /* \"#utility.yul\":15493:15495   */\n      0x21\n        /* \"#utility.yul\":15473:15491   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15466:15496   */\n      mstore\n        /* \"#utility.yul\":15532:15566   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":15512:15530   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15505:15567   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":15583:15601   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15576:15607   */\n      mstore\n        /* \"#utility.yul\":15624:15643   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":15252:15649   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9851  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9858  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9833  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9840  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9858  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9822:9903  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9916:9932  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10066  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10073  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10060  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10073  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10127  amounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10128:10129  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10130  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_172\n      jump\t// in\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10104  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10108  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10109:10110  i */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10111  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_172\n      jump\t// in\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10113:10115  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10130  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_294:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10075:10078  i++ */\n      dup2\n      swap1\n      pop\n      tag_295\n      dup2\n      tag_178\n      jump\t// in\n    tag_295:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10195:10197  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10191:10192  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10173:10181  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10199:10202  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10204:10211  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_296\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10261:10269  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10279:10280  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10283:10285  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10287:10290  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10292:10299  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10301:10305  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10260  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_303:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_308:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_172\n      jump\t// in\n    tag_312:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_172\n      jump\t// in\n    tag_314:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_318\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_319\n      swap1\n      tag_178\n      jump\t// in\n    tag_319:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_321\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_321:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      swap2\n      and\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      dup3\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n      0x00\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n    tag_236:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17552:17554   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17534:17555   */\n      mstore\n        /* \"#utility.yul\":17591:17593   */\n      0x29\n        /* \"#utility.yul\":17571:17589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17564:17594   */\n      mstore\n        /* \"#utility.yul\":17630:17664   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":17610:17628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17603:17665   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":17681:17699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17674:17713   */\n      mstore\n        /* \"#utility.yul\":17730:17749   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_102\n        /* \"#utility.yul\":17350:17755   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_329:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_332\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_333\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_333:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_332:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_335:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_337\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_337:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15173:15198   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":15229:15231   */\n      0x20\n        /* \"#utility.yul\":15214:15232   */\n      dup2\n      add\n        /* \"#utility.yul\":15207:15241   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15146:15164   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_339\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_340\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_339:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_270:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_172\n      jump\t// in\n    tag_346:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_352\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_353\n      jump\t// in\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_355\n      swap2\n      dup2\n      add\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      0x01\n    tag_354:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_357\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_361:\n      dup1\n      0x08c379a0\n      sub\n      tag_360\n      jumpi\n      pop\n      tag_363\n      tag_364\n      jump\t// in\n    tag_363:\n      dup1\n      tag_365\n      jumpi\n      pop\n      jump(tag_359)\n    tag_365:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_360:\n      pop\n    tag_359:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19908:19910   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19890:19911   */\n      mstore\n        /* \"#utility.yul\":19947:19949   */\n      0x34\n        /* \"#utility.yul\":19927:19945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19920:19950   */\n      mstore\n        /* \"#utility.yul\":19986:20020   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":19966:19984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19959:20021   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":20037:20055   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20030:20080   */\n      mstore\n        /* \"#utility.yul\":20097:20116   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_102\n        /* \"#utility.yul\":19706:20122   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_357:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_372\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(... */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_376\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_377\n      jump\t// in\n    tag_376:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_378\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_379\n      swap2\n      dup2\n      add\n      swap1\n      tag_356\n      jump\t// in\n    tag_379:\n      0x01\n    tag_378:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_380\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_380:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_372\n      jump\t// in\n    tag_262:\n      dup3\n      dup1\n      sload\n      tag_393\n      swap1\n      tag_133\n      jump\t// in\n    tag_393:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_395\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_398)\n    tag_395:\n      dup3\n      0x1f\n      lt\n      tag_396\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_398)\n    tag_396:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_398\n      jumpi\n      swap2\n      dup3\n      add\n    tag_397:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_398\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_397)\n    tag_398:\n      pop\n      tag_399\n      swap3\n      swap2\n      pop\n      tag_400\n      jump\t// in\n    tag_399:\n      pop\n      swap1\n      jump\t// out\n    tag_400:\n    tag_401:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_399\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_401)\n        /* \"#utility.yul\":14:187   */\n    tag_403:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_415:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_26:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_417:\n        /* \"#utility.yul\":360:389   */\n      tag_418\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_403\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_404:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_32:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_423:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_424\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_404\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1338   */\n    tag_164:\n        /* \"#utility.yul\":1272:1282   */\n      0x4e487b71\n        /* \"#utility.yul\":1267:1270   */\n      0xe0\n        /* \"#utility.yul\":1263:1283   */\n      shl\n        /* \"#utility.yul\":1260:1261   */\n      0x00\n        /* \"#utility.yul\":1253:1284   */\n      mstore\n        /* \"#utility.yul\":1303:1307   */\n      0x41\n        /* \"#utility.yul\":1300:1301   */\n      0x04\n        /* \"#utility.yul\":1293:1308   */\n      mstore\n        /* \"#utility.yul\":1327:1331   */\n      0x24\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1317:1332   */\n      revert\n        /* \"#utility.yul\":1343:1592   */\n    tag_405:\n        /* \"#utility.yul\":1453:1455   */\n      0x1f\n        /* \"#utility.yul\":1434:1447   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1430:1457   */\n      and\n        /* \"#utility.yul\":1418:1458   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1473:1507   */\n      dup2\n      gt\n        /* \"#utility.yul\":1509:1531   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1470:1532   */\n      or\n        /* \"#utility.yul\":1467:1555   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":1535:1553   */\n      tag_429\n      tag_164\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1571:1573   */\n      0x40\n        /* \"#utility.yul\":1564:1586   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1343:1592   */\n      jump\t// out\n        /* \"#utility.yul\":1597:2066   */\n    tag_406:\n        /* \"#utility.yul\":1662:1667   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      gt\n        /* \"#utility.yul\":1682:1738   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":1718:1736   */\n      tag_432\n      tag_164\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":1767:1769   */\n      0x40\n        /* \"#utility.yul\":1761:1770   */\n      mload\n        /* \"#utility.yul\":1779:1848   */\n      tag_433\n        /* \"#utility.yul\":1836:1838   */\n      0x1f\n        /* \"#utility.yul\":1815:1830   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1811:1840   */\n      and\n        /* \"#utility.yul\":1842:1846   */\n      0x20\n        /* \"#utility.yul\":1807:1847   */\n      add\n        /* \"#utility.yul\":1761:1770   */\n      dup3\n        /* \"#utility.yul\":1779:1848   */\n      tag_405\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1866:1872   */\n      dup1\n        /* \"#utility.yul\":1857:1872   */\n      swap2\n      pop\n        /* \"#utility.yul\":1896:1902   */\n      dup4\n        /* \"#utility.yul\":1888:1894   */\n      dup2\n        /* \"#utility.yul\":1881:1903   */\n      mstore\n        /* \"#utility.yul\":1936:1939   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup5\n        /* \"#utility.yul\":1922:1925   */\n      dup5\n        /* \"#utility.yul\":1918:1934   */\n      add\n        /* \"#utility.yul\":1915:1940   */\n      gt\n        /* \"#utility.yul\":1912:1957   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1950:1951   */\n      dup1\n        /* \"#utility.yul\":1943:1955   */\n      revert\n        /* \"#utility.yul\":1912:1957   */\n    tag_434:\n        /* \"#utility.yul\":2003:2009   */\n      dup4\n        /* \"#utility.yul\":1998:2001   */\n      dup4\n        /* \"#utility.yul\":1991:1995   */\n      0x20\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1979:1996   */\n      add\n        /* \"#utility.yul\":1966:2010   */\n      calldatacopy\n        /* \"#utility.yul\":2058:2059   */\n      0x00\n        /* \"#utility.yul\":2051:2055   */\n      0x20\n        /* \"#utility.yul\":2042:2048   */\n      dup6\n        /* \"#utility.yul\":2034:2040   */\n      dup4\n        /* \"#utility.yul\":2030:2049   */\n      add\n        /* \"#utility.yul\":2026:2056   */\n      add\n        /* \"#utility.yul\":2019:2060   */\n      mstore\n      pop\n        /* \"#utility.yul\":1597:2066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2071:2522   */\n    tag_38:\n        /* \"#utility.yul\":2140:2146   */\n      0x00\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2181:2190   */\n      dup3\n        /* \"#utility.yul\":2172:2179   */\n      dup5\n        /* \"#utility.yul\":2168:2191   */\n      sub\n        /* \"#utility.yul\":2164:2196   */\n      slt\n        /* \"#utility.yul\":2161:2213   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2209:2210   */\n      0x00\n        /* \"#utility.yul\":2206:2207   */\n      dup1\n        /* \"#utility.yul\":2199:2211   */\n      revert\n        /* \"#utility.yul\":2161:2213   */\n    tag_436:\n        /* \"#utility.yul\":2249:2258   */\n      dup2\n        /* \"#utility.yul\":2236:2259   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2274:2280   */\n      dup2\n        /* \"#utility.yul\":2271:2301   */\n      gt\n        /* \"#utility.yul\":2268:2318   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2311:2312   */\n      dup1\n        /* \"#utility.yul\":2304:2316   */\n      revert\n        /* \"#utility.yul\":2268:2318   */\n    tag_437:\n        /* \"#utility.yul\":2337:2359   */\n      dup3\n      add\n        /* \"#utility.yul\":2390:2394   */\n      0x1f\n        /* \"#utility.yul\":2382:2395   */\n      dup2\n      add\n        /* \"#utility.yul\":2378:2405   */\n      dup5\n      sgt\n        /* \"#utility.yul\":2368:2423   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":2419:2420   */\n      0x00\n        /* \"#utility.yul\":2416:2417   */\n      dup1\n        /* \"#utility.yul\":2409:2421   */\n      revert\n        /* \"#utility.yul\":2368:2423   */\n    tag_438:\n        /* \"#utility.yul\":2442:2516   */\n      tag_439\n        /* \"#utility.yul\":2508:2515   */\n      dup5\n        /* \"#utility.yul\":2503:2505   */\n      dup3\n        /* \"#utility.yul\":2490:2506   */\n      calldataload\n        /* \"#utility.yul\":2485:2487   */\n      0x20\n        /* \"#utility.yul\":2481:2483   */\n      dup5\n        /* \"#utility.yul\":2477:2488   */\n      add\n        /* \"#utility.yul\":2442:2516   */\n      tag_406\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2432:2516   */\n      swap5\n        /* \"#utility.yul\":2071:2522   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2849   */\n    tag_42:\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2612:2618   */\n      dup1\n        /* \"#utility.yul\":2620:2626   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x60\n        /* \"#utility.yul\":2661:2670   */\n      dup5\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2693   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2686:2687   */\n      dup1\n        /* \"#utility.yul\":2679:2691   */\n      revert\n        /* \"#utility.yul\":2641:2693   */\n    tag_441:\n        /* \"#utility.yul\":2712:2741   */\n      tag_442\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2712:2741   */\n      tag_403\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2702:2741   */\n      swap6\n        /* \"#utility.yul\":2788:2790   */\n      0x20\n        /* \"#utility.yul\":2773:2791   */\n      dup6\n      add\n        /* \"#utility.yul\":2760:2792   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2839:2841   */\n      0x40\n        /* \"#utility.yul\":2824:2842   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2811:2843   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2527:2849   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2854:3034   */\n    tag_46:\n        /* \"#utility.yul\":2913:2919   */\n      0x00\n        /* \"#utility.yul\":2966:2968   */\n      0x20\n        /* \"#utility.yul\":2954:2963   */\n      dup3\n        /* \"#utility.yul\":2945:2952   */\n      dup5\n        /* \"#utility.yul\":2941:2964   */\n      sub\n        /* \"#utility.yul\":2937:2969   */\n      slt\n        /* \"#utility.yul\":2934:2986   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2934:2986   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":3005:3028   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2854:3034   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3511   */\n    tag_407:\n        /* \"#utility.yul\":3081:3084   */\n      0x00\n        /* \"#utility.yul\":3119:3124   */\n      dup2\n        /* \"#utility.yul\":3113:3125   */\n      mload\n        /* \"#utility.yul\":3146:3152   */\n      dup1\n        /* \"#utility.yul\":3141:3144   */\n      dup5\n        /* \"#utility.yul\":3134:3153   */\n      mstore\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3181:3343   */\n    tag_446:\n        /* \"#utility.yul\":3195:3201   */\n      dup2\n        /* \"#utility.yul\":3192:3193   */\n      dup2\n        /* \"#utility.yul\":3189:3202   */\n      lt\n        /* \"#utility.yul\":3181:3343   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3257:3261   */\n      0x20\n        /* \"#utility.yul\":3313:3326   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3309:3331   */\n      dup2\n      add\n        /* \"#utility.yul\":3303:3332   */\n      mload\n        /* \"#utility.yul\":3285:3296   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3281:3301   */\n      dup3\n      add\n        /* \"#utility.yul\":3274:3333   */\n      mstore\n        /* \"#utility.yul\":3210:3222   */\n      add\n        /* \"#utility.yul\":3181:3343   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":3361:3367   */\n      dup2\n        /* \"#utility.yul\":3358:3359   */\n      dup2\n        /* \"#utility.yul\":3355:3368   */\n      gt\n        /* \"#utility.yul\":3352:3439   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3427:3428   */\n      0x00\n        /* \"#utility.yul\":3420:3424   */\n      0x20\n        /* \"#utility.yul\":3411:3417   */\n      dup4\n        /* \"#utility.yul\":3406:3409   */\n      dup8\n        /* \"#utility.yul\":3402:3418   */\n      add\n        /* \"#utility.yul\":3398:3425   */\n      add\n        /* \"#utility.yul\":3391:3429   */\n      mstore\n        /* \"#utility.yul\":3352:3439   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":3493:3495   */\n      0x1f\n        /* \"#utility.yul\":3472:3487   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3468:3497   */\n      and\n        /* \"#utility.yul\":3459:3498   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3500:3504   */\n      0x20\n        /* \"#utility.yul\":3455:3505   */\n      add\n      swap3\n        /* \"#utility.yul\":3039:3511   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3516:3736   */\n    tag_49:\n        /* \"#utility.yul\":3665:3667   */\n      0x20\n        /* \"#utility.yul\":3654:3663   */\n      dup2\n        /* \"#utility.yul\":3647:3668   */\n      mstore\n        /* \"#utility.yul\":3628:3632   */\n      0x00\n        /* \"#utility.yul\":3685:3730   */\n      tag_424\n        /* \"#utility.yul\":3726:3728   */\n      0x20\n        /* \"#utility.yul\":3715:3724   */\n      dup4\n        /* \"#utility.yul\":3711:3729   */\n      add\n        /* \"#utility.yul\":3703:3709   */\n      dup5\n        /* \"#utility.yul\":3685:3730   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":3741:3924   */\n    tag_408:\n        /* \"#utility.yul\":3801:3805   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3823:3853   */\n      gt\n        /* \"#utility.yul\":3820:3876   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3856:3874   */\n      tag_454\n      tag_164\n      jump\t// in\n    tag_454:\n      pop\n        /* \"#utility.yul\":3901:3902   */\n      0x05\n        /* \"#utility.yul\":3897:3911   */\n      shl\n        /* \"#utility.yul\":3913:3917   */\n      0x20\n        /* \"#utility.yul\":3893:3918   */\n      add\n      swap1\n        /* \"#utility.yul\":3741:3924   */\n      jump\t// out\n        /* \"#utility.yul\":3929:4653   */\n    tag_409:\n        /* \"#utility.yul\":3983:3988   */\n      0x00\n        /* \"#utility.yul\":4036:4039   */\n      dup3\n        /* \"#utility.yul\":4029:4033   */\n      0x1f\n        /* \"#utility.yul\":4021:4027   */\n      dup4\n        /* \"#utility.yul\":4017:4034   */\n      add\n        /* \"#utility.yul\":4013:4040   */\n      slt\n        /* \"#utility.yul\":4003:4058   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4054:4055   */\n      0x00\n        /* \"#utility.yul\":4051:4052   */\n      dup1\n        /* \"#utility.yul\":4044:4056   */\n      revert\n        /* \"#utility.yul\":4003:4058   */\n    tag_456:\n        /* \"#utility.yul\":4090:4096   */\n      dup2\n        /* \"#utility.yul\":4077:4097   */\n      calldataload\n        /* \"#utility.yul\":4116:4120   */\n      0x20\n        /* \"#utility.yul\":4139:4182   */\n      tag_457\n        /* \"#utility.yul\":4179:4181   */\n      dup3\n        /* \"#utility.yul\":4139:4182   */\n      tag_408\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4211:4213   */\n      0x40\n        /* \"#utility.yul\":4205:4214   */\n      mload\n        /* \"#utility.yul\":4223:4254   */\n      tag_458\n        /* \"#utility.yul\":4251:4253   */\n      dup3\n        /* \"#utility.yul\":4243:4249   */\n      dup3\n        /* \"#utility.yul\":4223:4254   */\n      tag_405\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4289:4307   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4381:4382   */\n      0x05\n        /* \"#utility.yul\":4377:4387   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":4365:4388   */\n      dup6\n      add\n        /* \"#utility.yul\":4361:4393   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":4323:4338   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4405:4420   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4402:4437   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4433:4434   */\n      0x00\n        /* \"#utility.yul\":4430:4431   */\n      dup1\n        /* \"#utility.yul\":4423:4435   */\n      revert\n        /* \"#utility.yul\":4402:4437   */\n    tag_459:\n        /* \"#utility.yul\":4469:4471   */\n      dup3\n        /* \"#utility.yul\":4461:4467   */\n      dup7\n        /* \"#utility.yul\":4457:4472   */\n      add\n        /* \"#utility.yul\":4481:4623   */\n    tag_460:\n        /* \"#utility.yul\":4497:4503   */\n      dup5\n        /* \"#utility.yul\":4492:4495   */\n      dup2\n        /* \"#utility.yul\":4489:4504   */\n      lt\n        /* \"#utility.yul\":4481:4623   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":4563:4580   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4551:4581   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4601:4613   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4514:4526   */\n      dup4\n      add\n        /* \"#utility.yul\":4481:4623   */\n      jump(tag_460)\n    tag_462:\n      pop\n        /* \"#utility.yul\":4641:4647   */\n      swap7\n        /* \"#utility.yul\":3929:4653   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:4879   */\n    tag_410:\n        /* \"#utility.yul\":4700:4705   */\n      0x00\n        /* \"#utility.yul\":4753:4756   */\n      dup3\n        /* \"#utility.yul\":4746:4750   */\n      0x1f\n        /* \"#utility.yul\":4738:4744   */\n      dup4\n        /* \"#utility.yul\":4734:4751   */\n      add\n        /* \"#utility.yul\":4730:4757   */\n      slt\n        /* \"#utility.yul\":4720:4775   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4771:4772   */\n      0x00\n        /* \"#utility.yul\":4768:4769   */\n      dup1\n        /* \"#utility.yul\":4761:4773   */\n      revert\n        /* \"#utility.yul\":4720:4775   */\n    tag_464:\n        /* \"#utility.yul\":4793:4873   */\n      tag_424\n        /* \"#utility.yul\":4869:4872   */\n      dup4\n        /* \"#utility.yul\":4860:4866   */\n      dup4\n        /* \"#utility.yul\":4847:4867   */\n      calldataload\n        /* \"#utility.yul\":4840:4844   */\n      0x20\n        /* \"#utility.yul\":4832:4838   */\n      dup6\n        /* \"#utility.yul\":4828:4845   */\n      add\n        /* \"#utility.yul\":4793:4873   */\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":4884:5752   */\n    tag_52:\n        /* \"#utility.yul\":5029:5035   */\n      0x00\n        /* \"#utility.yul\":5037:5043   */\n      dup1\n        /* \"#utility.yul\":5045:5051   */\n      0x00\n        /* \"#utility.yul\":5053:5059   */\n      dup1\n        /* \"#utility.yul\":5106:5109   */\n      0x80\n        /* \"#utility.yul\":5094:5103   */\n      dup6\n        /* \"#utility.yul\":5085:5092   */\n      dup8\n        /* \"#utility.yul\":5081:5104   */\n      sub\n        /* \"#utility.yul\":5077:5110   */\n      slt\n        /* \"#utility.yul\":5074:5127   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5120:5121   */\n      dup1\n        /* \"#utility.yul\":5113:5125   */\n      revert\n        /* \"#utility.yul\":5074:5127   */\n    tag_467:\n        /* \"#utility.yul\":5146:5175   */\n      tag_468\n        /* \"#utility.yul\":5165:5174   */\n      dup6\n        /* \"#utility.yul\":5146:5175   */\n      tag_403\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5136:5175   */\n      swap4\n      pop\n        /* \"#utility.yul\":5226:5228   */\n      0x20\n        /* \"#utility.yul\":5215:5224   */\n      dup6\n        /* \"#utility.yul\":5211:5229   */\n      add\n        /* \"#utility.yul\":5198:5230   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5290:5292   */\n      dup1\n        /* \"#utility.yul\":5282:5288   */\n      dup3\n        /* \"#utility.yul\":5279:5293   */\n      gt\n        /* \"#utility.yul\":5276:5310   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5303:5304   */\n      dup1\n        /* \"#utility.yul\":5296:5308   */\n      revert\n        /* \"#utility.yul\":5276:5310   */\n    tag_469:\n        /* \"#utility.yul\":5329:5390   */\n      tag_470\n        /* \"#utility.yul\":5382:5389   */\n      dup9\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5362:5371   */\n      dup10\n        /* \"#utility.yul\":5358:5380   */\n      add\n        /* \"#utility.yul\":5329:5390   */\n      tag_409\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":5319:5390   */\n      swap5\n      pop\n        /* \"#utility.yul\":5443:5445   */\n      0x40\n        /* \"#utility.yul\":5432:5441   */\n      dup8\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5415:5447   */\n      calldataload\n        /* \"#utility.yul\":5399:5447   */\n      swap2\n      pop\n        /* \"#utility.yul\":5472:5474   */\n      dup1\n        /* \"#utility.yul\":5462:5470   */\n      dup3\n        /* \"#utility.yul\":5459:5475   */\n      gt\n        /* \"#utility.yul\":5456:5492   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5488:5489   */\n      0x00\n        /* \"#utility.yul\":5485:5486   */\n      dup1\n        /* \"#utility.yul\":5478:5490   */\n      revert\n        /* \"#utility.yul\":5456:5492   */\n    tag_471:\n        /* \"#utility.yul\":5511:5574   */\n      tag_472\n        /* \"#utility.yul\":5566:5573   */\n      dup9\n        /* \"#utility.yul\":5555:5563   */\n      dup4\n        /* \"#utility.yul\":5544:5553   */\n      dup10\n        /* \"#utility.yul\":5540:5564   */\n      add\n        /* \"#utility.yul\":5511:5574   */\n      tag_409\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5501:5574   */\n      swap4\n      pop\n        /* \"#utility.yul\":5627:5629   */\n      0x60\n        /* \"#utility.yul\":5616:5625   */\n      dup8\n        /* \"#utility.yul\":5612:5630   */\n      add\n        /* \"#utility.yul\":5599:5631   */\n      calldataload\n        /* \"#utility.yul\":5583:5631   */\n      swap2\n      pop\n        /* \"#utility.yul\":5656:5658   */\n      dup1\n        /* \"#utility.yul\":5646:5654   */\n      dup3\n        /* \"#utility.yul\":5643:5659   */\n      gt\n        /* \"#utility.yul\":5640:5676   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":5672:5673   */\n      0x00\n        /* \"#utility.yul\":5669:5670   */\n      dup1\n        /* \"#utility.yul\":5662:5674   */\n      revert\n        /* \"#utility.yul\":5640:5676   */\n    tag_473:\n      pop\n        /* \"#utility.yul\":5695:5746   */\n      tag_474\n        /* \"#utility.yul\":5738:5745   */\n      dup8\n        /* \"#utility.yul\":5727:5735   */\n      dup3\n        /* \"#utility.yul\":5716:5725   */\n      dup9\n        /* \"#utility.yul\":5712:5736   */\n      add\n        /* \"#utility.yul\":5695:5746   */\n      tag_410\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5685:5746   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4884:5752   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5757:6700   */\n    tag_56:\n        /* \"#utility.yul\":5911:5917   */\n      0x00\n        /* \"#utility.yul\":5919:5925   */\n      dup1\n        /* \"#utility.yul\":5927:5933   */\n      0x00\n        /* \"#utility.yul\":5935:5941   */\n      dup1\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5996:5999   */\n      0xa0\n        /* \"#utility.yul\":5984:5993   */\n      dup7\n        /* \"#utility.yul\":5975:5982   */\n      dup9\n        /* \"#utility.yul\":5971:5994   */\n      sub\n        /* \"#utility.yul\":5967:6000   */\n      slt\n        /* \"#utility.yul\":5964:6017   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":6013:6014   */\n      0x00\n        /* \"#utility.yul\":6010:6011   */\n      dup1\n        /* \"#utility.yul\":6003:6015   */\n      revert\n        /* \"#utility.yul\":5964:6017   */\n    tag_476:\n        /* \"#utility.yul\":6036:6065   */\n      tag_477\n        /* \"#utility.yul\":6055:6064   */\n      dup7\n        /* \"#utility.yul\":6036:6065   */\n      tag_403\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6026:6065   */\n      swap5\n      pop\n        /* \"#utility.yul\":6084:6122   */\n      tag_478\n        /* \"#utility.yul\":6118:6120   */\n      0x20\n        /* \"#utility.yul\":6107:6116   */\n      dup8\n        /* \"#utility.yul\":6103:6121   */\n      add\n        /* \"#utility.yul\":6084:6122   */\n      tag_403\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":6074:6122   */\n      swap4\n      pop\n        /* \"#utility.yul\":6173:6175   */\n      0x40\n        /* \"#utility.yul\":6162:6171   */\n      dup7\n        /* \"#utility.yul\":6158:6176   */\n      add\n        /* \"#utility.yul\":6145:6177   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6237:6239   */\n      dup1\n        /* \"#utility.yul\":6229:6235   */\n      dup3\n        /* \"#utility.yul\":6226:6240   */\n      gt\n        /* \"#utility.yul\":6223:6257   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6250:6251   */\n      dup1\n        /* \"#utility.yul\":6243:6255   */\n      revert\n        /* \"#utility.yul\":6223:6257   */\n    tag_479:\n        /* \"#utility.yul\":6276:6337   */\n      tag_480\n        /* \"#utility.yul\":6329:6336   */\n      dup10\n        /* \"#utility.yul\":6320:6326   */\n      dup4\n        /* \"#utility.yul\":6309:6318   */\n      dup11\n        /* \"#utility.yul\":6305:6327   */\n      add\n        /* \"#utility.yul\":6276:6337   */\n      tag_409\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6266:6337   */\n      swap5\n      pop\n        /* \"#utility.yul\":6390:6392   */\n      0x60\n        /* \"#utility.yul\":6379:6388   */\n      dup9\n        /* \"#utility.yul\":6375:6393   */\n      add\n        /* \"#utility.yul\":6362:6394   */\n      calldataload\n        /* \"#utility.yul\":6346:6394   */\n      swap2\n      pop\n        /* \"#utility.yul\":6419:6421   */\n      dup1\n        /* \"#utility.yul\":6409:6417   */\n      dup3\n        /* \"#utility.yul\":6406:6422   */\n      gt\n        /* \"#utility.yul\":6403:6439   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6432:6433   */\n      dup1\n        /* \"#utility.yul\":6425:6437   */\n      revert\n        /* \"#utility.yul\":6403:6439   */\n    tag_481:\n        /* \"#utility.yul\":6458:6521   */\n      tag_482\n        /* \"#utility.yul\":6513:6520   */\n      dup10\n        /* \"#utility.yul\":6502:6510   */\n      dup4\n        /* \"#utility.yul\":6491:6500   */\n      dup11\n        /* \"#utility.yul\":6487:6511   */\n      add\n        /* \"#utility.yul\":6458:6521   */\n      tag_409\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6448:6521   */\n      swap4\n      pop\n        /* \"#utility.yul\":6574:6577   */\n      0x80\n        /* \"#utility.yul\":6563:6572   */\n      dup9\n        /* \"#utility.yul\":6559:6578   */\n      add\n        /* \"#utility.yul\":6546:6579   */\n      calldataload\n        /* \"#utility.yul\":6530:6579   */\n      swap2\n      pop\n        /* \"#utility.yul\":6604:6606   */\n      dup1\n        /* \"#utility.yul\":6594:6602   */\n      dup3\n        /* \"#utility.yul\":6591:6607   */\n      gt\n        /* \"#utility.yul\":6588:6624   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6620:6621   */\n      0x00\n        /* \"#utility.yul\":6617:6618   */\n      dup1\n        /* \"#utility.yul\":6610:6622   */\n      revert\n        /* \"#utility.yul\":6588:6624   */\n    tag_483:\n      pop\n        /* \"#utility.yul\":6643:6694   */\n      tag_484\n        /* \"#utility.yul\":6686:6693   */\n      dup9\n        /* \"#utility.yul\":6675:6683   */\n      dup3\n        /* \"#utility.yul\":6664:6673   */\n      dup10\n        /* \"#utility.yul\":6660:6684   */\n      add\n        /* \"#utility.yul\":6643:6694   */\n      tag_410\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6633:6694   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5757:6700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6705:7913   */\n    tag_60:\n        /* \"#utility.yul\":6823:6829   */\n      0x00\n        /* \"#utility.yul\":6831:6837   */\n      dup1\n        /* \"#utility.yul\":6884:6886   */\n      0x40\n        /* \"#utility.yul\":6872:6881   */\n      dup4\n        /* \"#utility.yul\":6863:6870   */\n      dup6\n        /* \"#utility.yul\":6859:6882   */\n      sub\n        /* \"#utility.yul\":6855:6887   */\n      slt\n        /* \"#utility.yul\":6852:6904   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":6900:6901   */\n      0x00\n        /* \"#utility.yul\":6897:6898   */\n      dup1\n        /* \"#utility.yul\":6890:6902   */\n      revert\n        /* \"#utility.yul\":6852:6904   */\n    tag_486:\n        /* \"#utility.yul\":6940:6949   */\n      dup3\n        /* \"#utility.yul\":6927:6950   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7010:7012   */\n      dup1\n        /* \"#utility.yul\":7002:7008   */\n      dup3\n        /* \"#utility.yul\":6999:7013   */\n      gt\n        /* \"#utility.yul\":6996:7030   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7026:7027   */\n      0x00\n        /* \"#utility.yul\":7023:7024   */\n      dup1\n        /* \"#utility.yul\":7016:7028   */\n      revert\n        /* \"#utility.yul\":6996:7030   */\n    tag_487:\n        /* \"#utility.yul\":7064:7070   */\n      dup2\n        /* \"#utility.yul\":7053:7062   */\n      dup6\n        /* \"#utility.yul\":7049:7071   */\n      add\n        /* \"#utility.yul\":7039:7071   */\n      swap2\n      pop\n        /* \"#utility.yul\":7109:7116   */\n      dup6\n        /* \"#utility.yul\":7102:7106   */\n      0x1f\n        /* \"#utility.yul\":7098:7100   */\n      dup4\n        /* \"#utility.yul\":7094:7107   */\n      add\n        /* \"#utility.yul\":7090:7117   */\n      slt\n        /* \"#utility.yul\":7080:7135   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7131:7132   */\n      0x00\n        /* \"#utility.yul\":7128:7129   */\n      dup1\n        /* \"#utility.yul\":7121:7133   */\n      revert\n        /* \"#utility.yul\":7080:7135   */\n    tag_488:\n        /* \"#utility.yul\":7167:7169   */\n      dup2\n        /* \"#utility.yul\":7154:7170   */\n      calldataload\n        /* \"#utility.yul\":7189:7193   */\n      0x20\n        /* \"#utility.yul\":7212:7255   */\n      tag_489\n        /* \"#utility.yul\":7252:7254   */\n      dup3\n        /* \"#utility.yul\":7212:7255   */\n      tag_408\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7284:7286   */\n      0x40\n        /* \"#utility.yul\":7278:7287   */\n      mload\n        /* \"#utility.yul\":7296:7327   */\n      tag_490\n        /* \"#utility.yul\":7324:7326   */\n      dup3\n        /* \"#utility.yul\":7316:7322   */\n      dup3\n        /* \"#utility.yul\":7296:7327   */\n      tag_405\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7362:7380   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":7450:7451   */\n      0x05\n        /* \"#utility.yul\":7446:7456   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":7438:7457   */\n      dup6\n      add\n        /* \"#utility.yul\":7434:7462   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":7396:7411   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":7474:7493   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":7471:7510   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":7506:7507   */\n      0x00\n        /* \"#utility.yul\":7503:7504   */\n      dup1\n        /* \"#utility.yul\":7496:7508   */\n      revert\n        /* \"#utility.yul\":7471:7510   */\n    tag_491:\n        /* \"#utility.yul\":7530:7541   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7550:7698   */\n    tag_492:\n        /* \"#utility.yul\":7566:7572   */\n      dup4\n        /* \"#utility.yul\":7561:7564   */\n      dup7\n        /* \"#utility.yul\":7558:7573   */\n      lt\n        /* \"#utility.yul\":7550:7698   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7632:7655   */\n      tag_495\n        /* \"#utility.yul\":7651:7654   */\n      dup7\n        /* \"#utility.yul\":7632:7655   */\n      tag_403\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7620:7656   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7583:7595   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7676:7688   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7550:7698   */\n      jump(tag_492)\n    tag_494:\n        /* \"#utility.yul\":7717:7723   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":7761:7779   */\n      dup7\n      add\n        /* \"#utility.yul\":7748:7780   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7792:7808   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7789:7825   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":7821:7822   */\n      0x00\n        /* \"#utility.yul\":7818:7819   */\n      dup1\n        /* \"#utility.yul\":7811:7823   */\n      revert\n        /* \"#utility.yul\":7789:7825   */\n    tag_496:\n      pop\n        /* \"#utility.yul\":7844:7907   */\n      tag_497\n        /* \"#utility.yul\":7899:7906   */\n      dup6\n        /* \"#utility.yul\":7888:7896   */\n      dup3\n        /* \"#utility.yul\":7877:7886   */\n      dup7\n        /* \"#utility.yul\":7873:7897   */\n      add\n        /* \"#utility.yul\":7844:7907   */\n      tag_409\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7834:7907   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6705:7913   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7918:8353   */\n    tag_411:\n        /* \"#utility.yul\":7971:7974   */\n      0x00\n        /* \"#utility.yul\":8009:8014   */\n      dup2\n        /* \"#utility.yul\":8003:8015   */\n      mload\n        /* \"#utility.yul\":8036:8042   */\n      dup1\n        /* \"#utility.yul\":8031:8034   */\n      dup5\n        /* \"#utility.yul\":8024:8043   */\n      mstore\n        /* \"#utility.yul\":8062:8066   */\n      0x20\n        /* \"#utility.yul\":8091:8093   */\n      dup1\n        /* \"#utility.yul\":8086:8089   */\n      dup6\n        /* \"#utility.yul\":8082:8094   */\n      add\n        /* \"#utility.yul\":8075:8094   */\n      swap5\n      pop\n        /* \"#utility.yul\":8128:8130   */\n      dup1\n        /* \"#utility.yul\":8121:8126   */\n      dup5\n        /* \"#utility.yul\":8117:8131   */\n      add\n        /* \"#utility.yul\":8149:8150   */\n      0x00\n        /* \"#utility.yul\":8159:8328   */\n    tag_499:\n        /* \"#utility.yul\":8173:8179   */\n      dup4\n        /* \"#utility.yul\":8170:8171   */\n      dup2\n        /* \"#utility.yul\":8167:8180   */\n      lt\n        /* \"#utility.yul\":8159:8328   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8234:8247   */\n      dup2\n      mload\n        /* \"#utility.yul\":8222:8248   */\n      dup8\n      mstore\n        /* \"#utility.yul\":8268:8280   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":8303:8318   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8195:8196   */\n      0x01\n        /* \"#utility.yul\":8188:8197   */\n      add\n        /* \"#utility.yul\":8159:8328   */\n      jump(tag_499)\n    tag_501:\n      pop\n        /* \"#utility.yul\":8344:8347   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7918:8353   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8358:8619   */\n    tag_63:\n        /* \"#utility.yul\":8537:8539   */\n      0x20\n        /* \"#utility.yul\":8526:8535   */\n      dup2\n        /* \"#utility.yul\":8519:8540   */\n      mstore\n        /* \"#utility.yul\":8500:8504   */\n      0x00\n        /* \"#utility.yul\":8557:8613   */\n      tag_424\n        /* \"#utility.yul\":8609:8611   */\n      0x20\n        /* \"#utility.yul\":8598:8607   */\n      dup4\n        /* \"#utility.yul\":8594:8612   */\n      add\n        /* \"#utility.yul\":8586:8592   */\n      dup5\n        /* \"#utility.yul\":8557:8613   */\n      tag_411\n      jump\t// in\n        /* \"#utility.yul\":8832:9154   */\n    tag_78:\n        /* \"#utility.yul\":8909:8915   */\n      0x00\n        /* \"#utility.yul\":8917:8923   */\n      dup1\n        /* \"#utility.yul\":8925:8931   */\n      0x00\n        /* \"#utility.yul\":8978:8980   */\n      0x60\n        /* \"#utility.yul\":8966:8975   */\n      dup5\n        /* \"#utility.yul\":8957:8964   */\n      dup7\n        /* \"#utility.yul\":8953:8976   */\n      sub\n        /* \"#utility.yul\":8949:8981   */\n      slt\n        /* \"#utility.yul\":8946:8998   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8994:8995   */\n      0x00\n        /* \"#utility.yul\":8991:8992   */\n      dup1\n        /* \"#utility.yul\":8984:8996   */\n      revert\n        /* \"#utility.yul\":8946:8998   */\n    tag_506:\n        /* \"#utility.yul\":9030:9039   */\n      dup4\n        /* \"#utility.yul\":9017:9040   */\n      calldataload\n        /* \"#utility.yul\":9007:9040   */\n      swap3\n      pop\n        /* \"#utility.yul\":9087:9089   */\n      0x20\n        /* \"#utility.yul\":9076:9085   */\n      dup5\n        /* \"#utility.yul\":9072:9090   */\n      add\n        /* \"#utility.yul\":9059:9091   */\n      calldataload\n        /* \"#utility.yul\":9049:9091   */\n      swap2\n      pop\n        /* \"#utility.yul\":9110:9148   */\n      tag_507\n        /* \"#utility.yul\":9144:9146   */\n      0x40\n        /* \"#utility.yul\":9133:9142   */\n      dup6\n        /* \"#utility.yul\":9129:9147   */\n      add\n        /* \"#utility.yul\":9110:9148   */\n      tag_403\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9100:9148   */\n      swap1\n      pop\n        /* \"#utility.yul\":8832:9154   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9159:9506   */\n    tag_82:\n        /* \"#utility.yul\":9224:9230   */\n      0x00\n        /* \"#utility.yul\":9232:9238   */\n      dup1\n        /* \"#utility.yul\":9285:9287   */\n      0x40\n        /* \"#utility.yul\":9273:9282   */\n      dup4\n        /* \"#utility.yul\":9264:9271   */\n      dup6\n        /* \"#utility.yul\":9260:9283   */\n      sub\n        /* \"#utility.yul\":9256:9288   */\n      slt\n        /* \"#utility.yul\":9253:9305   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9301:9302   */\n      0x00\n        /* \"#utility.yul\":9298:9299   */\n      dup1\n        /* \"#utility.yul\":9291:9303   */\n      revert\n        /* \"#utility.yul\":9253:9305   */\n    tag_509:\n        /* \"#utility.yul\":9324:9353   */\n      tag_510\n        /* \"#utility.yul\":9343:9352   */\n      dup4\n        /* \"#utility.yul\":9324:9353   */\n      tag_403\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9314:9353   */\n      swap2\n      pop\n        /* \"#utility.yul\":9403:9405   */\n      0x20\n        /* \"#utility.yul\":9392:9401   */\n      dup4\n        /* \"#utility.yul\":9388:9406   */\n      add\n        /* \"#utility.yul\":9375:9407   */\n      calldataload\n        /* \"#utility.yul\":9450:9455   */\n      dup1\n        /* \"#utility.yul\":9443:9456   */\n      iszero\n        /* \"#utility.yul\":9436:9457   */\n      iszero\n        /* \"#utility.yul\":9429:9434   */\n      dup2\n        /* \"#utility.yul\":9426:9458   */\n      eq\n        /* \"#utility.yul\":9416:9476   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9472:9473   */\n      0x00\n        /* \"#utility.yul\":9469:9470   */\n      dup1\n        /* \"#utility.yul\":9462:9474   */\n      revert\n        /* \"#utility.yul\":9416:9476   */\n    tag_511:\n        /* \"#utility.yul\":9495:9500   */\n      dup1\n        /* \"#utility.yul\":9485:9500   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9159:9506   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9511:9771   */\n    tag_89:\n        /* \"#utility.yul\":9579:9585   */\n      0x00\n        /* \"#utility.yul\":9587:9593   */\n      dup1\n        /* \"#utility.yul\":9640:9642   */\n      0x40\n        /* \"#utility.yul\":9628:9637   */\n      dup4\n        /* \"#utility.yul\":9619:9626   */\n      dup6\n        /* \"#utility.yul\":9615:9638   */\n      sub\n        /* \"#utility.yul\":9611:9643   */\n      slt\n        /* \"#utility.yul\":9608:9660   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9656:9657   */\n      0x00\n        /* \"#utility.yul\":9653:9654   */\n      dup1\n        /* \"#utility.yul\":9646:9658   */\n      revert\n        /* \"#utility.yul\":9608:9660   */\n    tag_513:\n        /* \"#utility.yul\":9679:9708   */\n      tag_514\n        /* \"#utility.yul\":9698:9707   */\n      dup4\n        /* \"#utility.yul\":9679:9708   */\n      tag_403\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9669:9708   */\n      swap2\n      pop\n        /* \"#utility.yul\":9727:9765   */\n      tag_515\n        /* \"#utility.yul\":9761:9763   */\n      0x20\n        /* \"#utility.yul\":9750:9759   */\n      dup5\n        /* \"#utility.yul\":9746:9764   */\n      add\n        /* \"#utility.yul\":9727:9765   */\n      tag_403\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9717:9765   */\n      swap1\n      pop\n        /* \"#utility.yul\":9511:9771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9776:10382   */\n    tag_94:\n        /* \"#utility.yul\":9880:9886   */\n      0x00\n        /* \"#utility.yul\":9888:9894   */\n      dup1\n        /* \"#utility.yul\":9896:9902   */\n      0x00\n        /* \"#utility.yul\":9904:9910   */\n      dup1\n        /* \"#utility.yul\":9912:9918   */\n      0x00\n        /* \"#utility.yul\":9965:9968   */\n      0xa0\n        /* \"#utility.yul\":9953:9962   */\n      dup7\n        /* \"#utility.yul\":9944:9951   */\n      dup9\n        /* \"#utility.yul\":9940:9963   */\n      sub\n        /* \"#utility.yul\":9936:9969   */\n      slt\n        /* \"#utility.yul\":9933:9986   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":9982:9983   */\n      0x00\n        /* \"#utility.yul\":9979:9980   */\n      dup1\n        /* \"#utility.yul\":9972:9984   */\n      revert\n        /* \"#utility.yul\":9933:9986   */\n    tag_517:\n        /* \"#utility.yul\":10005:10034   */\n      tag_518\n        /* \"#utility.yul\":10024:10033   */\n      dup7\n        /* \"#utility.yul\":10005:10034   */\n      tag_403\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9995:10034   */\n      swap5\n      pop\n        /* \"#utility.yul\":10053:10091   */\n      tag_519\n        /* \"#utility.yul\":10087:10089   */\n      0x20\n        /* \"#utility.yul\":10076:10085   */\n      dup8\n        /* \"#utility.yul\":10072:10090   */\n      add\n        /* \"#utility.yul\":10053:10091   */\n      tag_403\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10043:10091   */\n      swap4\n      pop\n        /* \"#utility.yul\":10138:10140   */\n      0x40\n        /* \"#utility.yul\":10127:10136   */\n      dup7\n        /* \"#utility.yul\":10123:10141   */\n      add\n        /* \"#utility.yul\":10110:10142   */\n      calldataload\n        /* \"#utility.yul\":10100:10142   */\n      swap3\n      pop\n        /* \"#utility.yul\":10189:10191   */\n      0x60\n        /* \"#utility.yul\":10178:10187   */\n      dup7\n        /* \"#utility.yul\":10174:10192   */\n      add\n        /* \"#utility.yul\":10161:10193   */\n      calldataload\n        /* \"#utility.yul\":10151:10193   */\n      swap2\n      pop\n        /* \"#utility.yul\":10244:10247   */\n      0x80\n        /* \"#utility.yul\":10233:10242   */\n      dup7\n        /* \"#utility.yul\":10229:10248   */\n      add\n        /* \"#utility.yul\":10216:10249   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10264:10270   */\n      dup2\n        /* \"#utility.yul\":10261:10291   */\n      gt\n        /* \"#utility.yul\":10258:10308   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10304:10305   */\n      0x00\n        /* \"#utility.yul\":10301:10302   */\n      dup1\n        /* \"#utility.yul\":10294:10306   */\n      revert\n        /* \"#utility.yul\":10258:10308   */\n    tag_520:\n        /* \"#utility.yul\":10327:10376   */\n      tag_484\n        /* \"#utility.yul\":10368:10375   */\n      dup9\n        /* \"#utility.yul\":10359:10365   */\n      dup3\n        /* \"#utility.yul\":10348:10357   */\n      dup10\n        /* \"#utility.yul\":10344:10366   */\n      add\n        /* \"#utility.yul\":10327:10376   */\n      tag_410\n      jump\t// in\n        /* \"#utility.yul\":10387:10573   */\n    tag_98:\n        /* \"#utility.yul\":10446:10452   */\n      0x00\n        /* \"#utility.yul\":10499:10501   */\n      0x20\n        /* \"#utility.yul\":10487:10496   */\n      dup3\n        /* \"#utility.yul\":10478:10485   */\n      dup5\n        /* \"#utility.yul\":10474:10497   */\n      sub\n        /* \"#utility.yul\":10470:10502   */\n      slt\n        /* \"#utility.yul\":10467:10519   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":10515:10516   */\n      0x00\n        /* \"#utility.yul\":10512:10513   */\n      dup1\n        /* \"#utility.yul\":10505:10517   */\n      revert\n        /* \"#utility.yul\":10467:10519   */\n    tag_523:\n        /* \"#utility.yul\":10538:10567   */\n      tag_424\n        /* \"#utility.yul\":10557:10566   */\n      dup3\n        /* \"#utility.yul\":10538:10567   */\n      tag_403\n      jump\t// in\n        /* \"#utility.yul\":10990:11346   */\n    tag_115:\n        /* \"#utility.yul\":11192:11194   */\n      0x20\n        /* \"#utility.yul\":11174:11195   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11211:11229   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11204:11234   */\n      mstore\n        /* \"#utility.yul\":11270:11304   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11265:11267   */\n      0x40\n        /* \"#utility.yul\":11250:11268   */\n      dup3\n      add\n        /* \"#utility.yul\":11243:11305   */\n      mstore\n        /* \"#utility.yul\":11337:11339   */\n      0x60\n        /* \"#utility.yul\":11322:11340   */\n      add\n      swap1\n        /* \"#utility.yul\":10990:11346   */\n      jump\t// out\n        /* \"#utility.yul\":11351:11756   */\n    tag_126:\n        /* \"#utility.yul\":11553:11555   */\n      0x20\n        /* \"#utility.yul\":11535:11556   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11592:11594   */\n      0x29\n        /* \"#utility.yul\":11572:11590   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11565:11595   */\n      mstore\n        /* \"#utility.yul\":11631:11665   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11626:11628   */\n      0x40\n        /* \"#utility.yul\":11611:11629   */\n      dup3\n      add\n        /* \"#utility.yul\":11604:11666   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11697:11699   */\n      0x60\n        /* \"#utility.yul\":11682:11700   */\n      dup3\n      add\n        /* \"#utility.yul\":11675:11714   */\n      mstore\n        /* \"#utility.yul\":11746:11749   */\n      0x80\n        /* \"#utility.yul\":11731:11750   */\n      add\n      swap1\n        /* \"#utility.yul\":11351:11756   */\n      jump\t// out\n        /* \"#utility.yul\":11761:11888   */\n    tag_412:\n        /* \"#utility.yul\":11822:11832   */\n      0x4e487b71\n        /* \"#utility.yul\":11817:11820   */\n      0xe0\n        /* \"#utility.yul\":11813:11833   */\n      shl\n        /* \"#utility.yul\":11810:11811   */\n      0x00\n        /* \"#utility.yul\":11803:11834   */\n      mstore\n        /* \"#utility.yul\":11853:11857   */\n      0x11\n        /* \"#utility.yul\":11850:11851   */\n      0x04\n        /* \"#utility.yul\":11843:11858   */\n      mstore\n        /* \"#utility.yul\":11877:11881   */\n      0x24\n        /* \"#utility.yul\":11874:11875   */\n      0x00\n        /* \"#utility.yul\":11867:11882   */\n      revert\n        /* \"#utility.yul\":11893:12029   */\n    tag_130:\n        /* \"#utility.yul\":11932:11935   */\n      0x00\n        /* \"#utility.yul\":11960:11965   */\n      dup2\n        /* \"#utility.yul\":11950:11989   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":11969:11987   */\n      tag_531\n      tag_412\n      jump\t// in\n    tag_531:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":12005:12023   */\n      add\n      swap1\n        /* \"#utility.yul\":11893:12029   */\n      jump\t// out\n        /* \"#utility.yul\":12034:12414   */\n    tag_133:\n        /* \"#utility.yul\":12113:12114   */\n      0x01\n        /* \"#utility.yul\":12109:12121   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12156:12168   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12177:12238   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":12231:12235   */\n      0x7f\n        /* \"#utility.yul\":12223:12229   */\n      dup3\n        /* \"#utility.yul\":12219:12236   */\n      and\n        /* \"#utility.yul\":12209:12236   */\n      swap2\n      pop\n        /* \"#utility.yul\":12177:12238   */\n    tag_533:\n        /* \"#utility.yul\":12284:12286   */\n      0x20\n        /* \"#utility.yul\":12276:12282   */\n      dup3\n        /* \"#utility.yul\":12273:12287   */\n      lt\n        /* \"#utility.yul\":12253:12271   */\n      dup2\n        /* \"#utility.yul\":12250:12288   */\n      sub\n        /* \"#utility.yul\":12247:12408   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":12330:12340   */\n      0x4e487b71\n        /* \"#utility.yul\":12325:12328   */\n      0xe0\n        /* \"#utility.yul\":12321:12341   */\n      shl\n        /* \"#utility.yul\":12318:12319   */\n      0x00\n        /* \"#utility.yul\":12311:12342   */\n      mstore\n        /* \"#utility.yul\":12365:12369   */\n      0x22\n        /* \"#utility.yul\":12362:12363   */\n      0x04\n        /* \"#utility.yul\":12355:12370   */\n      mstore\n        /* \"#utility.yul\":12393:12397   */\n      0x24\n        /* \"#utility.yul\":12390:12391   */\n      0x00\n        /* \"#utility.yul\":12383:12398   */\n      revert\n        /* \"#utility.yul\":12247:12408   */\n    tag_534:\n      pop\n        /* \"#utility.yul\":12034:12414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12547   */\n    tag_147:\n        /* \"#utility.yul\":12459:12462   */\n      0x00\n        /* \"#utility.yul\":12490:12491   */\n      dup3\n        /* \"#utility.yul\":12486:12492   */\n      not\n        /* \"#utility.yul\":12483:12484   */\n      dup3\n        /* \"#utility.yul\":12480:12493   */\n      gt\n        /* \"#utility.yul\":12477:12516   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":12496:12514   */\n      tag_537\n      tag_412\n      jump\t// in\n    tag_537:\n      pop\n        /* \"#utility.yul\":12532:12541   */\n      add\n      swap1\n        /* \"#utility.yul\":12419:12547   */\n      jump\t// out\n        /* \"#utility.yul\":13381:13508   */\n    tag_172:\n        /* \"#utility.yul\":13442:13452   */\n      0x4e487b71\n        /* \"#utility.yul\":13437:13440   */\n      0xe0\n        /* \"#utility.yul\":13433:13453   */\n      shl\n        /* \"#utility.yul\":13430:13431   */\n      0x00\n        /* \"#utility.yul\":13423:13454   */\n      mstore\n        /* \"#utility.yul\":13473:13477   */\n      0x32\n        /* \"#utility.yul\":13470:13471   */\n      0x04\n        /* \"#utility.yul\":13463:13478   */\n      mstore\n        /* \"#utility.yul\":13497:13501   */\n      0x24\n        /* \"#utility.yul\":13494:13495   */\n      0x00\n        /* \"#utility.yul\":13487:13502   */\n      revert\n        /* \"#utility.yul\":13513:13648   */\n    tag_178:\n        /* \"#utility.yul\":13552:13555   */\n      0x00\n        /* \"#utility.yul\":13573:13590   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":13570:13613   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":13593:13611   */\n      tag_543\n      tag_412\n      jump\t// in\n    tag_543:\n      pop\n        /* \"#utility.yul\":13640:13641   */\n      0x01\n        /* \"#utility.yul\":13629:13642   */\n      add\n      swap1\n        /* \"#utility.yul\":13513:13648   */\n      jump\t// out\n        /* \"#utility.yul\":13653:13778   */\n    tag_204:\n        /* \"#utility.yul\":13693:13697   */\n      0x00\n        /* \"#utility.yul\":13721:13722   */\n      dup3\n        /* \"#utility.yul\":13718:13719   */\n      dup3\n        /* \"#utility.yul\":13715:13723   */\n      lt\n        /* \"#utility.yul\":13712:13746   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":13726:13744   */\n      tag_546\n      tag_412\n      jump\t// in\n    tag_546:\n      pop\n        /* \"#utility.yul\":13763:13772   */\n      sub\n      swap1\n        /* \"#utility.yul\":13653:13778   */\n      jump\t// out\n        /* \"#utility.yul\":15654:16058   */\n    tag_284:\n        /* \"#utility.yul\":15856:15858   */\n      0x20\n        /* \"#utility.yul\":15838:15859   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15895:15897   */\n      0x28\n        /* \"#utility.yul\":15875:15893   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15868:15898   */\n      mstore\n        /* \"#utility.yul\":15934:15968   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":15929:15931   */\n      0x40\n        /* \"#utility.yul\":15914:15932   */\n      dup3\n      add\n        /* \"#utility.yul\":15907:15969   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":16000:16002   */\n      0x60\n        /* \"#utility.yul\":15985:16003   */\n      dup3\n      add\n        /* \"#utility.yul\":15978:16016   */\n      mstore\n        /* \"#utility.yul\":16048:16051   */\n      0x80\n        /* \"#utility.yul\":16033:16052   */\n      add\n      swap1\n        /* \"#utility.yul\":15654:16058   */\n      jump\t// out\n        /* \"#utility.yul\":16063:16528   */\n    tag_297:\n        /* \"#utility.yul\":16320:16322   */\n      0x40\n        /* \"#utility.yul\":16309:16318   */\n      dup2\n        /* \"#utility.yul\":16302:16323   */\n      mstore\n        /* \"#utility.yul\":16283:16287   */\n      0x00\n        /* \"#utility.yul\":16346:16402   */\n      tag_554\n        /* \"#utility.yul\":16398:16400   */\n      0x40\n        /* \"#utility.yul\":16387:16396   */\n      dup4\n        /* \"#utility.yul\":16383:16401   */\n      add\n        /* \"#utility.yul\":16375:16381   */\n      dup6\n        /* \"#utility.yul\":16346:16402   */\n      tag_411\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16450:16459   */\n      dup3\n        /* \"#utility.yul\":16442:16448   */\n      dup2\n        /* \"#utility.yul\":16438:16460   */\n      sub\n        /* \"#utility.yul\":16433:16435   */\n      0x20\n        /* \"#utility.yul\":16422:16431   */\n      dup5\n        /* \"#utility.yul\":16418:16436   */\n      add\n        /* \"#utility.yul\":16411:16461   */\n      mstore\n        /* \"#utility.yul\":16478:16522   */\n      tag_555\n        /* \"#utility.yul\":16515:16521   */\n      dup2\n        /* \"#utility.yul\":16507:16513   */\n      dup6\n        /* \"#utility.yul\":16478:16522   */\n      tag_411\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16470:16522   */\n      swap6\n        /* \"#utility.yul\":16063:16528   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16533:16934   */\n    tag_305:\n        /* \"#utility.yul\":16735:16737   */\n      0x20\n        /* \"#utility.yul\":16717:16738   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16774:16776   */\n      0x25\n        /* \"#utility.yul\":16754:16772   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16747:16777   */\n      mstore\n        /* \"#utility.yul\":16813:16847   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":16808:16810   */\n      0x40\n        /* \"#utility.yul\":16793:16811   */\n      dup3\n      add\n        /* \"#utility.yul\":16786:16848   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":16879:16881   */\n      0x60\n        /* \"#utility.yul\":16864:16882   */\n      dup3\n      add\n        /* \"#utility.yul\":16857:16892   */\n      mstore\n        /* \"#utility.yul\":16924:16927   */\n      0x80\n        /* \"#utility.yul\":16909:16928   */\n      add\n      swap1\n        /* \"#utility.yul\":16533:16934   */\n      jump\t// out\n        /* \"#utility.yul\":16939:17345   */\n    tag_317:\n        /* \"#utility.yul\":17141:17143   */\n      0x20\n        /* \"#utility.yul\":17123:17144   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17180:17182   */\n      0x2a\n        /* \"#utility.yul\":17160:17178   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17153:17183   */\n      mstore\n        /* \"#utility.yul\":17219:17253   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17214:17216   */\n      0x40\n        /* \"#utility.yul\":17199:17217   */\n      dup3\n      add\n        /* \"#utility.yul\":17192:17254   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":17285:17287   */\n      0x60\n        /* \"#utility.yul\":17270:17288   */\n      dup3\n      add\n        /* \"#utility.yul\":17263:17303   */\n      mstore\n        /* \"#utility.yul\":17335:17338   */\n      0x80\n        /* \"#utility.yul\":17320:17339   */\n      add\n      swap1\n        /* \"#utility.yul\":16939:17345   */\n      jump\t// out\n        /* \"#utility.yul\":17760:18587   */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18157:18172   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":18139:18173   */\n      dup3\n      mstore\n        /* \"#utility.yul\":18209:18224   */\n      dup6\n      and\n        /* \"#utility.yul\":18204:18206   */\n      0x20\n        /* \"#utility.yul\":18189:18207   */\n      dup3\n      add\n        /* \"#utility.yul\":18182:18225   */\n      mstore\n        /* \"#utility.yul\":18119:18122   */\n      0xa0\n        /* \"#utility.yul\":18256:18258   */\n      0x40\n        /* \"#utility.yul\":18241:18259   */\n      dup3\n      add\n        /* \"#utility.yul\":18234:18265   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18082:18086   */\n      0x00\n      swap1\n        /* \"#utility.yul\":18288:18345   */\n      tag_560\n      swap1\n        /* \"#utility.yul\":18325:18344   */\n      dup4\n      add\n        /* \"#utility.yul\":18317:18323   */\n      dup7\n        /* \"#utility.yul\":18288:18345   */\n      tag_411\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18393:18402   */\n      dup3\n        /* \"#utility.yul\":18385:18391   */\n      dup2\n        /* \"#utility.yul\":18381:18403   */\n      sub\n        /* \"#utility.yul\":18376:18378   */\n      0x60\n        /* \"#utility.yul\":18365:18374   */\n      dup5\n        /* \"#utility.yul\":18361:18379   */\n      add\n        /* \"#utility.yul\":18354:18404   */\n      mstore\n        /* \"#utility.yul\":18427:18471   */\n      tag_561\n        /* \"#utility.yul\":18464:18470   */\n      dup2\n        /* \"#utility.yul\":18456:18462   */\n      dup7\n        /* \"#utility.yul\":18427:18471   */\n      tag_411\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18413:18471   */\n      swap1\n      pop\n        /* \"#utility.yul\":18520:18529   */\n      dup3\n        /* \"#utility.yul\":18512:18518   */\n      dup2\n        /* \"#utility.yul\":18508:18530   */\n      sub\n        /* \"#utility.yul\":18502:18505   */\n      0x80\n        /* \"#utility.yul\":18491:18500   */\n      dup5\n        /* \"#utility.yul\":18487:18506   */\n      add\n        /* \"#utility.yul\":18480:18531   */\n      mstore\n        /* \"#utility.yul\":18548:18581   */\n      tag_562\n        /* \"#utility.yul\":18574:18580   */\n      dup2\n        /* \"#utility.yul\":18566:18572   */\n      dup6\n        /* \"#utility.yul\":18548:18581   */\n      tag_407\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18540:18581   */\n      swap9\n        /* \"#utility.yul\":17760:18587   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18592:18841   */\n    tag_356:\n        /* \"#utility.yul\":18661:18667   */\n      0x00\n        /* \"#utility.yul\":18714:18716   */\n      0x20\n        /* \"#utility.yul\":18702:18711   */\n      dup3\n        /* \"#utility.yul\":18693:18700   */\n      dup5\n        /* \"#utility.yul\":18689:18712   */\n      sub\n        /* \"#utility.yul\":18685:18717   */\n      slt\n        /* \"#utility.yul\":18682:18734   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":18730:18731   */\n      0x00\n        /* \"#utility.yul\":18727:18728   */\n      dup1\n        /* \"#utility.yul\":18720:18732   */\n      revert\n        /* \"#utility.yul\":18682:18734   */\n    tag_564:\n        /* \"#utility.yul\":18762:18771   */\n      dup2\n        /* \"#utility.yul\":18756:18772   */\n      mload\n        /* \"#utility.yul\":18781:18811   */\n      tag_424\n        /* \"#utility.yul\":18805:18810   */\n      dup2\n        /* \"#utility.yul\":18781:18811   */\n      tag_404\n      jump\t// in\n        /* \"#utility.yul\":18846:19025   */\n    tag_362:\n        /* \"#utility.yul\":18881:18884   */\n      0x00\n        /* \"#utility.yul\":18923:18924   */\n      0x03\n        /* \"#utility.yul\":18905:18921   */\n      returndatasize\n        /* \"#utility.yul\":18902:18925   */\n      gt\n        /* \"#utility.yul\":18899:19019   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":18969:18970   */\n      0x04\n        /* \"#utility.yul\":18966:18967   */\n      0x00\n        /* \"#utility.yul\":18963:18964   */\n      dup1\n        /* \"#utility.yul\":18948:18971   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":19006:19007   */\n      0x00\n        /* \"#utility.yul\":19000:19008   */\n      mload\n        /* \"#utility.yul\":18995:18998   */\n      0xe0\n        /* \"#utility.yul\":18991:19009   */\n      shr\n        /* \"#utility.yul\":18899:19019   */\n    tag_567:\n        /* \"#utility.yul\":18846:19025   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19030:19701   */\n    tag_364:\n        /* \"#utility.yul\":19069:19072   */\n      0x00\n        /* \"#utility.yul\":19111:19115   */\n      0x44\n        /* \"#utility.yul\":19093:19109   */\n      returndatasize\n        /* \"#utility.yul\":19090:19116   */\n      lt\n        /* \"#utility.yul\":19087:19126   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":19030:19701   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19087:19126   */\n    tag_569:\n        /* \"#utility.yul\":19153:19155   */\n      0x40\n        /* \"#utility.yul\":19147:19156   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":19218:19234   */\n      returndatasize\n        /* \"#utility.yul\":19214:19239   */\n      dup2\n      add\n        /* \"#utility.yul\":19211:19212   */\n      0x04\n        /* \"#utility.yul\":19147:19156   */\n      dup4\n        /* \"#utility.yul\":19190:19240   */\n      returndatacopy\n        /* \"#utility.yul\":19269:19273   */\n      dup2\n        /* \"#utility.yul\":19263:19274   */\n      mload\n        /* \"#utility.yul\":19293:19309   */\n      returndatasize\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":19399:19401   */\n      dup2\n        /* \"#utility.yul\":19392:19396   */\n      0x24\n        /* \"#utility.yul\":19384:19390   */\n      dup5\n        /* \"#utility.yul\":19380:19397   */\n      add\n        /* \"#utility.yul\":19377:19402   */\n      gt\n        /* \"#utility.yul\":19372:19374   */\n      dup2\n        /* \"#utility.yul\":19364:19370   */\n      dup5\n        /* \"#utility.yul\":19361:19375   */\n      gt\n        /* \"#utility.yul\":19358:19403   */\n      or\n        /* \"#utility.yul\":19355:19413   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":19406:19411   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19030:19701   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19355:19413   */\n    tag_570:\n        /* \"#utility.yul\":19443:19449   */\n      dup3\n        /* \"#utility.yul\":19437:19441   */\n      dup6\n        /* \"#utility.yul\":19433:19450   */\n      add\n        /* \"#utility.yul\":19422:19450   */\n      swap2\n      pop\n        /* \"#utility.yul\":19479:19482   */\n      dup2\n        /* \"#utility.yul\":19473:19483   */\n      mload\n        /* \"#utility.yul\":19506:19508   */\n      dup2\n        /* \"#utility.yul\":19498:19504   */\n      dup2\n        /* \"#utility.yul\":19495:19509   */\n      gt\n        /* \"#utility.yul\":19492:19519   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":19512:19517   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19030:19701   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19492:19519   */\n    tag_571:\n        /* \"#utility.yul\":19596:19598   */\n      dup5\n        /* \"#utility.yul\":19577:19593   */\n      returndatasize\n        /* \"#utility.yul\":19571:19575   */\n      dup8\n        /* \"#utility.yul\":19567:19594   */\n      add\n        /* \"#utility.yul\":19563:19599   */\n      add\n        /* \"#utility.yul\":19556:19560   */\n      0x20\n        /* \"#utility.yul\":19547:19553   */\n      dup3\n        /* \"#utility.yul\":19542:19545   */\n      dup6\n        /* \"#utility.yul\":19538:19554   */\n      add\n        /* \"#utility.yul\":19534:19561   */\n      add\n        /* \"#utility.yul\":19531:19600   */\n      gt\n        /* \"#utility.yul\":19528:19610   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":19603:19608   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19030:19701   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19528:19610   */\n    tag_572:\n        /* \"#utility.yul\":19619:19676   */\n      tag_573\n        /* \"#utility.yul\":19670:19674   */\n      0x20\n        /* \"#utility.yul\":19661:19667   */\n      dup3\n        /* \"#utility.yul\":19653:19659   */\n      dup7\n        /* \"#utility.yul\":19649:19668   */\n      add\n        /* \"#utility.yul\":19645:19675   */\n      add\n        /* \"#utility.yul\":19639:19643   */\n      dup8\n        /* \"#utility.yul\":19619:19676   */\n      tag_405\n      jump\t// in\n    tag_573:\n      pop\n        /* \"#utility.yul\":19692:19695   */\n      swap1\n      swap6\n        /* \"#utility.yul\":19030:19701   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20127:20531   */\n    tag_372:\n        /* \"#utility.yul\":20329:20331   */\n      0x20\n        /* \"#utility.yul\":20311:20332   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":20368:20370   */\n      0x28\n        /* \"#utility.yul\":20348:20366   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":20341:20371   */\n      mstore\n        /* \"#utility.yul\":20407:20441   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":20402:20404   */\n      0x40\n        /* \"#utility.yul\":20387:20405   */\n      dup3\n      add\n        /* \"#utility.yul\":20380:20442   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":20473:20475   */\n      0x60\n        /* \"#utility.yul\":20458:20476   */\n      dup3\n      add\n        /* \"#utility.yul\":20451:20489   */\n      mstore\n        /* \"#utility.yul\":20521:20524   */\n      0x80\n        /* \"#utility.yul\":20506:20525   */\n      add\n      swap1\n        /* \"#utility.yul\":20127:20531   */\n      jump\t// out\n        /* \"#utility.yul\":20536:21097   */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":20833:20848   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":20815:20849   */\n      dup3\n      mstore\n        /* \"#utility.yul\":20885:20900   */\n      dup6\n      and\n        /* \"#utility.yul\":20880:20882   */\n      0x20\n        /* \"#utility.yul\":20865:20883   */\n      dup3\n      add\n        /* \"#utility.yul\":20858:20901   */\n      mstore\n        /* \"#utility.yul\":20932:20934   */\n      0x40\n        /* \"#utility.yul\":20917:20935   */\n      dup2\n      add\n        /* \"#utility.yul\":20910:20944   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":20975:20977   */\n      0x60\n        /* \"#utility.yul\":20960:20978   */\n      dup2\n      add\n        /* \"#utility.yul\":20953:20987   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":20795:20798   */\n      0xa0\n        /* \"#utility.yul\":21018:21021   */\n      0x80\n        /* \"#utility.yul\":21003:21022   */\n      dup3\n      add\n        /* \"#utility.yul\":20996:21028   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":20758:20762   */\n      0x00\n      swap1\n        /* \"#utility.yul\":21045:21091   */\n      tag_577\n      swap1\n        /* \"#utility.yul\":21071:21090   */\n      dup4\n      add\n        /* \"#utility.yul\":21063:21069   */\n      dup5\n        /* \"#utility.yul\":21045:21091   */\n      tag_407\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":21037:21091   */\n      swap8\n        /* \"#utility.yul\":20536:21097   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f72452adf6d4d0760c56819a37b7bbe0a3ae49c492fd97c9b80ee783754a1f364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_271": {
									"entryPoint": null,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_876": {
									"entryPoint": 73,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 98,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:10"
															},
															"nodeType": "YulIf",
															"src": "157:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:10"
															},
															"nodeType": "YulIf",
															"src": "227:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:10",
														"type": ""
													}
												],
												"src": "14:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x20A2 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x49 JUMP JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0x62 JUMP JUMPDEST PUSH3 0x196 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5E SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xC2 SWAP1 PUSH3 0x15A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xE6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x131 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x101 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x131 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x131 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x131 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x114 JUMP JUMPDEST POP PUSH3 0x13F SWAP3 SWAP2 POP PUSH3 0x143 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x144 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x16F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x190 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EFC DUP1 PUSH3 0x1A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E3 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x388 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xA86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x422 DUP4 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x504 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x538 JUMPI POP PUSH2 0x538 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x633 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6A7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CD DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x0 PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79C PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DA SWAP1 DUP6 PUSH2 0x1BB6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84B JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82E PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x843 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CD JUMP JUMPDEST POP PUSH2 0x867 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC13 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x906 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x915 DUP7 DUP7 PUSH2 0x1BB6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97D JUMPI DUP1 DUP4 PUSH2 0x928 DUP9 DUP4 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x950 DUP9 DUP5 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x975 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0x5AC CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51C JUMP JUMPDEST PUSH2 0x9A5 CALLER DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xF34 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9A5 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB2B DUP2 DUP6 PUSH1 0x0 PUSH2 0xB0C DUP8 PUSH2 0x118C JUMP JUMPDEST PUSH2 0xB15 DUP8 PUSH2 0x118C JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AC DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D7 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEAB SWAP1 DUP5 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEBF SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF2C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST CALLER PUSH2 0x10A5 DUP2 DUP8 DUP8 PUSH2 0x109C DUP9 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x5AC DUP9 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1123 SWAP1 DUP5 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1183 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1332 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x121B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1253 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1302 JUMPI PUSH2 0x1262 PUSH2 0x1D94 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x129B JUMPI POP PUSH2 0x1276 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH2 0x1281 JUMPI POP PUSH2 0x129D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1376 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13B1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13AE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13BD JUMPI PUSH2 0x1262 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x13F9 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x141B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1461 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1434 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1461 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1461 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1461 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1446 JUMP JUMPDEST POP PUSH2 0x146D SWAP3 SWAP2 POP PUSH2 0x1471 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14FF DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1561 JUMPI PUSH2 0x1561 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1578 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x151C JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x158D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15ED DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x160A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1613 DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x164B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16BA PUSH2 0x1506 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16E2 DUP3 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16EF DUP3 DUP3 PUSH2 0x151C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x172A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1713 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FF DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1774 DUP6 PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179C DUP9 DUP4 DUP10 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BE DUP9 DUP4 DUP10 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180E DUP7 PUSH2 0x1486 JUMP JUMPDEST SWAP5 POP PUSH2 0x181C PUSH1 0x20 DUP8 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1844 DUP10 DUP4 DUP11 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1866 DUP10 DUP4 DUP11 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1889 DUP9 DUP3 DUP10 ADD PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18E1 DUP3 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18EE DUP3 DUP3 PUSH2 0x151C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1924 DUP7 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1990 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1974 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19DA PUSH1 0x40 DUP6 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19FF DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3B DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 PUSH1 0x20 DUP5 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A73 DUP7 PUSH2 0x1486 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A81 PUSH1 0x20 DUP8 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP9 DUP3 DUP10 ADD PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FF DUP3 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B74 JUMPI PUSH2 0x1B74 PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B90 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC9 PUSH2 0x1B4F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1BF6 JUMPI PUSH2 0x1BF6 PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0F PUSH2 0x1B4F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1960 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C81 DUP2 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D45 SWAP1 DUP4 ADD DUP7 PUSH2 0x1960 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1D57 DUP2 DUP7 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1D6B DUP2 DUP6 PUSH2 0x1641 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14FF DUP2 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1DBE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1DED JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E05 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E1F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1E2E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x151C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1EBB SWAP1 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH19 0x452ADF6D4D0760C56819A37B7BBE0A3AE49C49 0x2F 0xD9 PUSH29 0x9B80EE783754A1F364736F6C634300080D003368747470733A2F2F6761 PUSH14 0x652E6578616D706C652F6170692F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
							"sourceMap": "184:1847:0:-:0;;;269:73;;;;;;;;;;1126:64:2;;;;;;;;;;;;;;;;;1169:13;1177:4;1169:7;:13::i;:::-;-1:-1:-1;949:32:1;736:10:7;949:18:1;:32::i;:::-;184:1847:0;;8180:88:2;8247:13;;;;:4;;:13;;;;;:::i;:::-;;8180:88;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;184:1847:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;184:1847:0;;;-1:-1:-1;184:1847:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;184:1847:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 4492,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burn_1129": {
									"entryPoint": 2713,
									"id": 1129,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 4567,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 4914,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1050": {
									"entryPoint": 3091,
									"id": 1050,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 3480,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 4198,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 3974,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 2694,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 3892,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 1459,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 704,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@brun_246": {
									"entryPoint": 991,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getTokenSupply_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatchWithNumber_91": {
									"entryPoint": 1810,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintBatch_205": {
									"entryPoint": 1230,
									"id": 205,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_308": {
									"entryPoint": 1756,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 1308,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 2473,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 2458,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_175": {
									"entryPoint": 937,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 855,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_331": {
									"entryPoint": 2542,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithNumber_163": {
									"entryPoint": 2173,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@uri_440": {
									"entryPoint": 1082,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21099:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1267:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1272:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1300:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1327:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1211:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1400:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1422:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1438:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1444:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1434:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1434:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1453:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1449:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1449:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1404:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1533:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1535:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1535:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1476:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1473:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1512:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1509:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1470:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:62:10"
															},
															"nodeType": "YulIf",
															"src": "1467:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1575:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1564:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1372:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1380:4:10",
														"type": ""
													}
												],
												"src": "1343:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:394:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1716:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1718:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1718:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1718:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:30:10"
															},
															"nodeType": "YulIf",
															"src": "1682:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1761:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1751:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1799:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1819:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1827:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1815:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1815:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1836:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1832:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1811:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1811:29:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:40:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1779:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:69:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1857:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1866:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1888:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1896:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1881:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1941:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1922:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1936:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1915:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:25:10"
															},
															"nodeType": "YulIf",
															"src": "1912:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1983:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1991:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1998:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2003:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1966:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2042:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2030:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2030:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2051:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2026:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1662:5:10",
														"type": ""
													}
												],
												"src": "1597:469:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:371:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2197:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2206:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2209:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2199:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2199:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2172:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2164:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:32:10"
															},
															"nodeType": "YulIf",
															"src": "2161:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2222:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2249:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2236:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2226:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2302:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2311:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2314:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2304:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2304:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2274:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2271:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:10"
															},
															"nodeType": "YulIf",
															"src": "2268:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2352:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2331:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2407:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2416:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2419:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2409:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2409:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2390:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2382:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2382:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2397:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2378:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2378:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:35:10"
															},
															"nodeType": "YulIf",
															"src": "2368:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:84:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2481:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2485:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2503:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2490:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2508:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "2442:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:74:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2117:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2128:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2140:6:10",
														"type": ""
													}
												],
												"src": "2071:451:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2679:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2679:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:32:10"
															},
															"nodeType": "YulIf",
															"src": "2641:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2702:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2712:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2773:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2760:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2801:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2839:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2811:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2581:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2592:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2604:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2612:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2620:6:10",
														"type": ""
													}
												],
												"src": "2527:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2924:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2970:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2945:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:32:10"
															},
															"nodeType": "YulIf",
															"src": "2934:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2995:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3018:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3005:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2890:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2901:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2913:6:10",
														"type": ""
													}
												],
												"src": "2854:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3119:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3113:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3103:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3146:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3162:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3171:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3166:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3233:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3247:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3257:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3251:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3289:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3294:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3285:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3285:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3298:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3281:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3281:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3317:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3324:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3313:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3313:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3328:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3309:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3309:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3303:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3274:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3274:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3192:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3189:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3203:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3205:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3214:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3217:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3210:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3210:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3205:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3185:3:10",
																"statements": []
															},
															"src": "3181:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3377:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3411:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3402:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3402:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3420:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3398:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3398:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3427:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3391:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3391:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3391:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3358:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3361:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3355:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:13:10"
															},
															"nodeType": "YulIf",
															"src": "3352:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3448:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3463:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3476:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3484:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3472:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3472:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3493:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3489:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3489:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3468:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3468:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3455:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3448:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3066:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3073:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3081:3:10",
														"type": ""
													}
												],
												"src": "3039:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3637:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3654:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3665:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3647:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3677:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3715:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3726:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3711:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3711:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3685:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3677:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3606:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3617:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3628:4:10",
														"type": ""
													}
												],
												"src": "3516:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3854:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3856:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3856:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3856:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3826:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3823:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:30:10"
															},
															"nodeType": "YulIf",
															"src": "3820:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3885:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3901:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3904:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3885:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3790:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3801:4:10",
														"type": ""
													}
												],
												"src": "3741:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4051:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4054:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4044:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4044:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4021:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4029:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4036:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:35:10"
															},
															"nodeType": "YulIf",
															"src": "4003:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4090:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4077:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4071:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4106:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4116:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4110:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4129:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4179:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4139:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4133:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4191:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4211:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4205:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4195:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4251:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4223:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4263:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4274:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4267:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4296:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4304:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4289:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4316:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4327:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4335:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4347:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4369:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4381:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4384:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4377:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4377:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4365:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4390:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4361:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4351:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4421:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4423:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4423:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4416:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4405:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:15:10"
															},
															"nodeType": "YulIf",
															"src": "4402:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4446:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4469:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4457:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4450:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4537:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4576:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4563:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4563:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4551:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4551:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4594:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4605:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4610:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4601:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4601:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4594:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4489:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4505:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4507:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4518:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4523:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4514:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4514:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4507:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4485:3:10",
																"statements": []
															},
															"src": "4481:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4632:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4641:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4632:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3967:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3975:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3983:5:10",
														"type": ""
													}
												],
												"src": "3929:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4710:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4759:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4768:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4771:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4761:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4761:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4738:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4746:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4734:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4734:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4753:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4730:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:35:10"
															},
															"nodeType": "YulIf",
															"src": "4720:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4784:89:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4832:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4840:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4860:6:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4847:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4847:20:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4869:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4793:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:80:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4784:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4684:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4692:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4700:5:10",
														"type": ""
													}
												],
												"src": "4658:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5064:688:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5111:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5120:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5113:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5113:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5085:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5081:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:33:10"
															},
															"nodeType": "YulIf",
															"src": "5074:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5136:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5165:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5146:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5136:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5184:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5198:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5188:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5239:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5249:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5243:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5294:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5303:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5306:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5296:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5296:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5296:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5282:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5290:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5279:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:14:10"
															},
															"nodeType": "YulIf",
															"src": "5276:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5319:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5362:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5373:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5358:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5382:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5329:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:61:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5399:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5432:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5443:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5415:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5403:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5476:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5485:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5488:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5478:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5478:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5478:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5462:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5472:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5459:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:16:10"
															},
															"nodeType": "YulIf",
															"src": "5456:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5501:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5544:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5555:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5540:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5566:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5511:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:63:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5583:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5616:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5627:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5612:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5599:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5587:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5660:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5669:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5662:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5662:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5646:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5656:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5643:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5643:16:10"
															},
															"nodeType": "YulIf",
															"src": "5640:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5685:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5727:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5712:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5738:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5695:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:51:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5685:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5006:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5017:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5029:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5037:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5045:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5053:6:10",
														"type": ""
													}
												],
												"src": "4884:868:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6001:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6013:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6003:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6003:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6003:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5975:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5984:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5971:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5967:33:10"
															},
															"nodeType": "YulIf",
															"src": "5964:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6026:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6036:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6036:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6074:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6103:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6131:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6173:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6186:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6196:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6190:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6243:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6243:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6229:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6237:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6226:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6226:14:10"
															},
															"nodeType": "YulIf",
															"src": "6223:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6266:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6309:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6305:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6329:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6276:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6346:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6390:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6350:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6409:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6406:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:16:10"
															},
															"nodeType": "YulIf",
															"src": "6403:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6448:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6491:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6502:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6487:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6513:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6458:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6458:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6530:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6574:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6559:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6546:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6534:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6594:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6604:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:16:10"
															},
															"nodeType": "YulIf",
															"src": "6588:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6633:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6664:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6675:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6660:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6686:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6643:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5888:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5899:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5911:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5919:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5927:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5935:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5943:6:10",
														"type": ""
													}
												],
												"src": "5757:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6842:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6888:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6897:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6900:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6890:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6890:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6890:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6863:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6872:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6859:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:32:10"
															},
															"nodeType": "YulIf",
															"src": "6852:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6913:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6940:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6927:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6917:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6959:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6969:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6963:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7014:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7023:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7026:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7016:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7016:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7016:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7002:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7010:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6999:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:14:10"
															},
															"nodeType": "YulIf",
															"src": "6996:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7039:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7053:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7064:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7043:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7119:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7128:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7131:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7121:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7121:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7121:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "7098:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7102:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7094:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7094:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7109:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:35:10"
															},
															"nodeType": "YulIf",
															"src": "7080:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7144:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7167:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7154:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "7148:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7179:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7189:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "7183:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7202:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7252:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7212:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "7206:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7264:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7284:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7278:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "7268:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7316:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "7324:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7296:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7296:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7336:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7347:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7340:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7369:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7377:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7389:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7400:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7408:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7420:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7442:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7450:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7453:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7446:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7446:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7459:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7424:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7494:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7503:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7506:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7496:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7496:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7496:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7485:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7474:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:19:10"
															},
															"nodeType": "YulIf",
															"src": "7471:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7519:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7534:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7538:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7523:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7606:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7627:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7651:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "7632:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7632:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7620:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7620:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7620:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7669:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7680:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7685:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7676:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7676:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7669:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7561:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7566:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7558:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7574:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7576:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7587:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7592:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7583:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7583:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7576:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7554:3:10",
																"statements": []
															},
															"src": "7550:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7707:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7717:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7732:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7765:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "7776:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7761:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7748:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7736:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7809:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7818:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7821:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7811:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7811:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7811:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7795:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7805:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7792:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:16:10"
															},
															"nodeType": "YulIf",
															"src": "7789:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7834:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7877:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7888:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7873:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7873:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7899:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7844:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7844:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6800:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6811:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6823:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6831:6:10",
														"type": ""
													}
												],
												"src": "6705:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7979:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7989:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8009:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8003:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7993:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8031:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8036:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8024:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8024:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8052:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8062:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8056:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8075:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8086:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8091:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8075:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8103:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8121:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8128:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8117:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8107:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8140:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8149:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8144:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8208:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8229:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8240:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8234:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8234:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8222:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8222:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8222:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8261:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8272:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8277:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8268:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8268:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8261:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8293:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8307:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8315:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8303:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8303:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8293:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8170:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8173:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8167:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8181:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8183:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8192:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8195:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8188:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8188:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8183:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8163:3:10",
																"statements": []
															},
															"src": "8159:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8337:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8344:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8337:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7956:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7963:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7971:3:10",
														"type": ""
													}
												],
												"src": "7918:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8509:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8526:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8537:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8519:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8519:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8549:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8586:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8598:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8609:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8594:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8594:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8557:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8549:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8478:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8489:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8500:4:10",
														"type": ""
													}
												],
												"src": "8358:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8725:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8735:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8747:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8758:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8743:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8743:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8735:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8777:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8792:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8808:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8813:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8804:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8804:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8817:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8800:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8800:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8788:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8770:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8770:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8694:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8705:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8716:4:10",
														"type": ""
													}
												],
												"src": "8624:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8936:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8982:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8991:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8994:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8984:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8984:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8984:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8957:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8966:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8953:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8953:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8978:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8949:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8949:32:10"
															},
															"nodeType": "YulIf",
															"src": "8946:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9007:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9030:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9017:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9007:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9049:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9059:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9059:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9049:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9100:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9133:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9144:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9129:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9110:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:38:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8886:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8897:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8909:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8917:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8925:6:10",
														"type": ""
													}
												],
												"src": "8832:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9243:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9289:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9301:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9291:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9291:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9264:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9273:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9260:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9285:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:32:10"
															},
															"nodeType": "YulIf",
															"src": "9253:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9314:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9343:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9324:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9324:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9362:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9392:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9403:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9388:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9388:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9375:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9375:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9366:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9460:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9469:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9472:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9462:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9462:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9462:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9429:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9450:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9443:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9443:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9436:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9436:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9426:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9426:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9419:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:40:10"
															},
															"nodeType": "YulIf",
															"src": "9416:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9485:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9495:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9201:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9212:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9224:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9232:6:10",
														"type": ""
													}
												],
												"src": "9159:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9598:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9644:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9653:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9656:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9646:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9646:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9646:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9619:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9628:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9615:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9611:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:32:10"
															},
															"nodeType": "YulIf",
															"src": "9608:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9669:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9698:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9679:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9679:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9717:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9750:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9761:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9727:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9717:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9556:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9567:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9579:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9587:6:10",
														"type": ""
													}
												],
												"src": "9511:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9923:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9970:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9979:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9982:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9972:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9972:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9944:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9953:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9940:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9940:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9965:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9936:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9936:33:10"
															},
															"nodeType": "YulIf",
															"src": "9933:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9995:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10024:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10005:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9995:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10043:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10087:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10053:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10100:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10127:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10138:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10123:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10110:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10110:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10100:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10151:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10178:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10189:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10174:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10174:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10161:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10151:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10202:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10233:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10244:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10229:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10229:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10216:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10206:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10292:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10301:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10304:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10294:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10294:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10264:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10272:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10261:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:30:10"
															},
															"nodeType": "YulIf",
															"src": "10258:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10317:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10348:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10359:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10344:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10368:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10327:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10327:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9857:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9868:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9880:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9888:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9896:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9904:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9912:6:10",
														"type": ""
													}
												],
												"src": "9776:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10457:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10503:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10512:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10515:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10505:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10505:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10505:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10478:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10487:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10474:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:32:10"
															},
															"nodeType": "YulIf",
															"src": "10467:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10528:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10557:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10538:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10538:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10528:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10423:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10434:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10446:6:10",
														"type": ""
													}
												],
												"src": "10387:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10752:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10769:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10762:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10762:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10762:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10803:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10814:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10799:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10819:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10792:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10792:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10853:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10858:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10831:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10913:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10909:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10929:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10902:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10902:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10902:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10952:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10964:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10975:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10960:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10960:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10952:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10729:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10743:4:10",
														"type": ""
													}
												],
												"src": "10578:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11164:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11174:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11174:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11215:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11226:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11211:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11204:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11254:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11265:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11250:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11270:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11243:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11243:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11314:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11326:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11337:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11322:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11322:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11314:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11141:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11155:4:10",
														"type": ""
													}
												],
												"src": "10990:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11525:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11542:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11535:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11576:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11587:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11572:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11572:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11592:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11565:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11565:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11615:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11626:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11611:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11631:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11604:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11604:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11604:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11686:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11697:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11682:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11682:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11702:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11675:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11675:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11723:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11735:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11746:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11731:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11723:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11502:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11516:4:10",
														"type": ""
													}
												],
												"src": "11351:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11793:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11810:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11817:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11822:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11813:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11813:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11803:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11803:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11850:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11853:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11843:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11874:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11877:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11867:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11867:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11867:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11761:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11940:89:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11967:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11969:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11969:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11969:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11960:5:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:13:10"
															},
															"nodeType": "YulIf",
															"src": "11950:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11998:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12009:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12016:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12005:18:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11998:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11922:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11932:3:10",
														"type": ""
													}
												],
												"src": "11893:136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12089:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12099:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12113:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12116:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12109:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12099:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12130:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12160:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12166:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12156:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12134:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12207:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12209:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12223:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12231:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12219:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12219:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12209:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12187:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:26:10"
															},
															"nodeType": "YulIf",
															"src": "12177:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12297:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12318:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12325:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12330:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12321:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12321:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12311:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12311:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12311:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12362:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12365:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12355:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12355:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12355:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12393:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12383:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12383:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12253:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12276:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12284:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12273:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12273:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12250:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:38:10"
															},
															"nodeType": "YulIf",
															"src": "12247:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12069:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12078:6:10",
														"type": ""
													}
												],
												"src": "12034:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12467:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12494:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12496:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12496:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12496:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12483:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12490:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12486:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12486:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12480:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:13:10"
															},
															"nodeType": "YulIf",
															"src": "12477:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12525:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12536:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12539:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12532:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12532:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12525:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12450:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12453:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12459:3:10",
														"type": ""
													}
												],
												"src": "12419:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12726:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12754:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12736:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12736:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12773:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12793:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12766:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12816:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12827:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12832:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12805:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12887:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12898:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12883:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12883:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12903:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12876:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12933:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12945:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12956:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12941:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12941:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12933:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12703:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12717:4:10",
														"type": ""
													}
												],
												"src": "12552:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13145:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13162:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13173:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13155:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13155:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13196:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13207:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13192:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13212:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13185:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13235:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13246:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13231:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13231:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13251:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13224:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13224:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13306:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13317:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13302:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13302:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13322:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13295:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13295:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13343:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13355:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13366:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13351:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13343:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13122:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13136:4:10",
														"type": ""
													}
												],
												"src": "12971:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13413:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13430:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13437:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13442:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13433:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13433:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13423:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13423:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13423:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13470:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13473:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13463:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13463:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13494:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13497:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13487:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13487:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13487:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13381:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13560:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13591:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13593:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13593:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13593:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13576:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13587:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13583:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13573:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13573:17:10"
															},
															"nodeType": "YulIf",
															"src": "13570:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13622:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13633:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13640:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13629:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13622:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13542:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13552:3:10",
														"type": ""
													}
												],
												"src": "13513:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13702:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13724:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13726:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13726:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13726:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13718:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13721:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13715:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13715:8:10"
															},
															"nodeType": "YulIf",
															"src": "13712:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13755:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13767:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13770:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13763:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13755:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13684:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13687:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13693:4:10",
														"type": ""
													}
												],
												"src": "13653:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13957:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13974:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13985:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13967:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13967:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13967:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14008:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14019:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14004:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14024:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13997:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13997:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14047:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14058:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14043:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14063:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14036:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14036:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14118:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14129:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14114:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14114:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14134:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14107:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14107:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14152:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14164:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14175:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14160:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14160:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14152:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13934:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13948:4:10",
														"type": ""
													}
												],
												"src": "13783:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14364:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14381:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14374:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14374:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14426:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14411:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14431:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14404:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14404:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14465:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14450:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14470:34:10",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14443:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14443:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14443:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14525:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14536:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14521:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14541:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14514:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14514:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14556:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14568:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14579:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14564:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14556:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14341:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14355:4:10",
														"type": ""
													}
												],
												"src": "14190:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14768:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14785:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14796:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14778:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14778:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14778:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14819:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14830:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14815:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14815:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14835:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14808:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14808:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14808:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14858:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14869:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14854:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14854:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14874:34:10",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14929:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14940:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14925:18:10"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14945:6:10",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14918:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14918:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14961:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14973:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14969:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14969:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14961:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14745:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14759:4:10",
														"type": ""
													}
												],
												"src": "14594:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15128:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15138:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15150:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15161:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15146:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15146:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15138:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15180:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15191:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15173:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15173:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15173:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15218:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15229:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15214:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15234:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15207:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15207:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15089:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15100:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15108:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15119:4:10",
														"type": ""
													}
												],
												"src": "14999:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15426:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15443:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15454:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15436:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15436:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15477:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15488:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15473:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15493:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15466:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15466:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15516:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15527:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15512:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15532:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15505:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15505:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15505:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15587:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15598:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15583:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15603:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15576:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15576:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15616:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15628:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15639:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15624:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15616:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15403:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15417:4:10",
														"type": ""
													}
												],
												"src": "15252:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15828:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15845:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15856:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15838:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15838:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15879:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15890:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15875:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15895:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15868:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15868:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15868:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15918:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15929:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15914:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15914:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15934:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15907:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15907:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15907:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16000:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15985:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16005:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15978:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15978:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16025:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16037:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16048:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16033:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16033:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16025:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15805:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15819:4:10",
														"type": ""
													}
												],
												"src": "15654:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16292:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16309:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16320:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16302:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16302:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16332:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16375:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16398:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16383:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "16346:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16346:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "16336:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16422:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16433:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16418:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "16442:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16450:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16438:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16411:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16411:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16411:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16470:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16507:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "16515:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "16478:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16478:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16470:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16253:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16264:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16272:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16283:4:10",
														"type": ""
													}
												],
												"src": "16063:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16707:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16724:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16735:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16717:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16717:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16717:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16758:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16769:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16754:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16754:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16774:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16747:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16747:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16747:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16797:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16808:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16793:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16813:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16786:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16786:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16868:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16879:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16864:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16884:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16857:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16857:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16901:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16913:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16924:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16909:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16909:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16901:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16684:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16698:4:10",
														"type": ""
													}
												],
												"src": "16533:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17113:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17130:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17141:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17123:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17123:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17164:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17175:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17160:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17180:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17153:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17153:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17203:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17214:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17199:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17199:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17219:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17192:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17192:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17192:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17274:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17285:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17270:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17270:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17290:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17263:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17263:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17263:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17312:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17324:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17335:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17320:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17320:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17312:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17090:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17104:4:10",
														"type": ""
													}
												],
												"src": "16939:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17524:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17541:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17552:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17534:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17534:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17534:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17575:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17586:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17571:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17591:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17564:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17564:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17614:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17625:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17610:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17610:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17630:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17603:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17603:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17685:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17696:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17681:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17681:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17701:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17674:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17722:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17734:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17745:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17730:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17730:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17722:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17501:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17515:4:10",
														"type": ""
													}
												],
												"src": "17350:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18091:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18101:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18119:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18124:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18115:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18128:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18111:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18111:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18105:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18146:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18161:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18169:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18157:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18157:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18139:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18139:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18139:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18193:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18204:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18189:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18189:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18213:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18221:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18209:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18209:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18182:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18182:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18182:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18245:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18256:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18241:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18241:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18261:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18234:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18234:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18234:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18274:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18317:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18329:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18340:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18325:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18288:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18288:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "18278:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18365:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18376:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18361:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "18385:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18393:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18381:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18381:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18354:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18354:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18354:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18413:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18456:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "18464:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18427:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18427:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "18417:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18502:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18487:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "18512:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18520:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18508:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18508:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18480:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18480:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18480:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18540:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18566:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "18574:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "18548:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18548:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18540:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18028:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18039:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18047:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18055:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18063:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18071:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18082:4:10",
														"type": ""
													}
												],
												"src": "17760:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18672:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18693:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18702:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18689:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18689:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18714:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18685:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18685:32:10"
															},
															"nodeType": "YulIf",
															"src": "18682:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18743:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18762:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18756:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18756:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "18747:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18805:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "18781:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18781:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18781:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18820:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18830:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "18820:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18638:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18649:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18661:6:10",
														"type": ""
													}
												],
												"src": "18592:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18889:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18934:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18963:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18966:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18969:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "18948:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18948:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18948:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18984:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18995:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19006:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19000:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19000:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "18991:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18991:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "18984:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18905:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18905:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18923:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18902:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18902:23:10"
															},
															"nodeType": "YulIf",
															"src": "18899:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "18881:3:10",
														"type": ""
													}
												],
												"src": "18846:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19077:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19117:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19119:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "19093:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19093:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19111:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19090:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19090:26:10"
															},
															"nodeType": "YulIf",
															"src": "19087:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19135:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19153:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19147:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19147:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "19139:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19165:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19179:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "19175:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19169:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19205:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19211:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "19218:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19218:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19236:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19214:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "19190:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19190:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19190:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19249:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19269:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19263:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19263:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "19253:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19283:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "19293:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19293:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "19287:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19318:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19328:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "19322:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19404:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19406:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19364:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "19372:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19361:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19361:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19384:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19392:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19380:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19380:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "19399:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19377:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19377:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19358:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19358:45:10"
															},
															"nodeType": "YulIf",
															"src": "19355:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19422:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19437:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19443:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19433:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19433:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "19426:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19459:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "19479:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19473:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19473:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19463:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19510:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19512:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19498:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "19506:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19495:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19495:14:10"
															},
															"nodeType": "YulIf",
															"src": "19492:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19601:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19603:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "19542:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19547:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19538:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19538:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19556:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19534:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19534:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "19571:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19577:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19577:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19567:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19567:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19596:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19563:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19531:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19531:69:10"
															},
															"nodeType": "YulIf",
															"src": "19528:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19639:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19653:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19661:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19649:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19649:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19670:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19645:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19645:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19619:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19619:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19619:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19685:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "19692:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19685:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19069:3:10",
														"type": ""
													}
												],
												"src": "19030:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19880:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19897:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19908:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19890:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19890:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19890:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19931:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19942:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19927:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19927:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19947:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19920:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19920:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19970:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19981:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19966:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19966:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19986:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19959:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19959:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19959:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20041:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20052:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20037:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20037:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20057:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20030:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20030:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20030:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20089:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20101:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20112:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20097:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20097:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20089:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19857:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19871:4:10",
														"type": ""
													}
												],
												"src": "19706:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20301:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20318:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20311:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20311:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20311:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20352:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20363:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20348:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20368:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20341:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20341:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20341:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20402:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20387:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20407:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20380:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20380:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20462:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20473:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20458:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20458:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20478:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20451:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20451:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20498:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20510:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20521:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20506:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20498:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20278:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20292:4:10",
														"type": ""
													}
												],
												"src": "20127:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20767:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20777:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20795:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20800:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20791:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20791:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20804:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20787:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20787:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20781:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20822:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20837:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20845:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20833:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20833:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20815:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20815:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20815:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20869:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20880:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20865:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20865:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "20889:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20897:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20885:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20885:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20858:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20858:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20858:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20921:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20932:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20917:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20937:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20910:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20910:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20910:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20964:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20975:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20960:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20960:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20980:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20953:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20953:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20953:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21007:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21018:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21003:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21024:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20996:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20996:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21037:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "21063:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21075:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21086:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21071:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21071:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "21045:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21045:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21037:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20704:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20715:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20723:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20731:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20739:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20758:4:10",
														"type": ""
													}
												],
												"src": "20536:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E3 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x388 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xA86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x422 DUP4 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x504 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x538 JUMPI POP PUSH2 0x538 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x633 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6A7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CD DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x0 PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79C PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DA SWAP1 DUP6 PUSH2 0x1BB6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84B JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82E PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x843 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CD JUMP JUMPDEST POP PUSH2 0x867 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC13 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x906 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x915 DUP7 DUP7 PUSH2 0x1BB6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97D JUMPI DUP1 DUP4 PUSH2 0x928 DUP9 DUP4 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x950 DUP9 DUP5 PUSH2 0x1BFD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x975 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0x5AC CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51C JUMP JUMPDEST PUSH2 0x9A5 CALLER DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xF34 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9A5 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB2B DUP2 DUP6 PUSH1 0x0 PUSH2 0xB0C DUP8 PUSH2 0x118C JUMP JUMPDEST PUSH2 0xB15 DUP8 PUSH2 0x118C JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AC DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D7 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEAB SWAP1 DUP5 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEBF SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF2C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST CALLER PUSH2 0x10A5 DUP2 DUP8 DUP8 PUSH2 0x109C DUP9 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x5AC DUP9 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1123 SWAP1 DUP5 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1183 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1332 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x121B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1253 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1302 JUMPI PUSH2 0x1262 PUSH2 0x1D94 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x129B JUMPI POP PUSH2 0x1276 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH2 0x1281 JUMPI POP PUSH2 0x129D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1376 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13B1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13AE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13BD JUMPI PUSH2 0x1262 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x13F9 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x141B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1461 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1434 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1461 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1461 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1461 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1446 JUMP JUMPDEST POP PUSH2 0x146D SWAP3 SWAP2 POP PUSH2 0x1471 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14FF DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1561 JUMPI PUSH2 0x1561 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1578 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x151C JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x158D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15ED DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x160A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1613 DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x164B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16BA PUSH2 0x1506 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16E2 DUP3 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16EF DUP3 DUP3 PUSH2 0x151C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x172A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1713 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FF DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1774 DUP6 PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179C DUP9 DUP4 DUP10 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BE DUP9 DUP4 DUP10 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180E DUP7 PUSH2 0x1486 JUMP JUMPDEST SWAP5 POP PUSH2 0x181C PUSH1 0x20 DUP8 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1844 DUP10 DUP4 DUP11 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1866 DUP10 DUP4 DUP11 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1889 DUP9 DUP3 DUP10 ADD PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18E1 DUP3 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18EE DUP3 DUP3 PUSH2 0x151C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1924 DUP7 PUSH2 0x1486 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1990 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1974 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19DA PUSH1 0x40 DUP6 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19FF DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3B DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 PUSH1 0x20 DUP5 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A73 DUP7 PUSH2 0x1486 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A81 PUSH1 0x20 DUP8 ADD PUSH2 0x1486 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP9 DUP3 DUP10 ADD PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FF DUP3 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B74 JUMPI PUSH2 0x1B74 PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B90 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC9 PUSH2 0x1B4F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1BF6 JUMPI PUSH2 0x1BF6 PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0F PUSH2 0x1B4F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1960 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C81 DUP2 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D45 SWAP1 DUP4 ADD DUP7 PUSH2 0x1960 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1D57 DUP2 DUP7 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1D6B DUP2 DUP6 PUSH2 0x1641 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14FF DUP2 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1DBE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1DED JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E05 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E1F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1E2E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x151C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1EBB SWAP1 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH19 0x452ADF6D4D0760C56819A37B7BBE0A3AE49C49 0x2F 0xD9 PUSH29 0x9B80EE783754A1F364736F6C634300080D003300000000000000000000 ",
							"sourceMap": "184:1847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1262:310:2;1019:187:10;1250:88:0;;;;;;:::i;:::-;;:::i;:::-;;1695:333;;;;;;:::i;:::-;;:::i;1983:105:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1346:240:0:-;;;;;;:::i;:::-;;:::i;4178:442:2:-;;;;;;:::i;:::-;;:::i;2636:524::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1721:103:1:-;;;:::i;350:461:0:-;;;;;;:::i;:::-;;:::i;232:26::-;;;;;;1070:87:1;1143:6;;1070:87;;-1:-1:-1;;;;;1143:6:1;;;8770:51:10;;8758:2;8743:18;1070:87:1;8624:203:10;819:421:0;;;;;;:::i;:::-;;:::i;3233:155:2:-;;;;;;:::i;:::-;;:::i;1594:93:0:-;1668:11;;1594:93;;3460:168:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;1979:201:1:-;;;;;;:::i;:::-;;:::i;2239:231:2:-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;10780:2:10;2345:77:2;;;10762:21:10;10819:2;10799:18;;;10792:30;10858:34;10838:18;;;10831:62;-1:-1:-1;;;10909:18:10;;;10902:41;10960:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;;;2239:231::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;1381:183;1262:310;-1:-1:-1;;1262:310:2:o;1250:88:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1315:15:0::1;1323:6;1315:7;:15::i;:::-;1250:88:::0;:::o;1695:333::-;-1:-1:-1;;;;;1823:23:0;;736:10:7;1823:23:0;;:66;;-1:-1:-1;1850:39:0;1867:7;736:10:7;3460:168:2;:::i;1850:39:0:-;1801:157;;;;-1:-1:-1;;;1801:157:0;;;;;;;:::i;:::-;1971:25;1977:7;1986:2;1990:5;1971;:25::i;:::-;2009:11;;2007:13;;;;;:::i;:::-;;;;-1:-1:-1;;;;1695:333:0:o;1983:105:2:-;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;1346:240:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1495:34:0::1;1506:2;1510:3;1515:7;1524:4;1495:10;:34::i;:::-;1568:3;:10;1554:11;;:24;;;;:::i;:::-;1540:11;:38:::0;-1:-1:-1;;;;1346:240:0:o;4178:442:2:-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;12754:2:10;4389:160:2;;;12736:21:10;12793:2;12773:18;;;12766:30;12832:34;12812:18;;;12805:62;-1:-1:-1;;;12883:18:10;;;12876:48;12941:19;;4389:160:2;12552:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;13173:2:10;2826:83:2;;;13155:21:10;13212:2;13192:18;;;13185:30;13251:34;13231:18;;;13224:62;-1:-1:-1;;;13302:18:10;;;13295:39;13351:19;;2826:83:2;12971:405:10;2826:83:2;2922:30;2969:8;:15;-1:-1:-1;;;;;2955:30:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;1721:103:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;350:461:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;425:20:0::1;462:9;-1:-1:-1::0;;;;;448:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;448:24:0::1;;425:47;;483:24;524:9;-1:-1:-1::0;;;;;510:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;510:24:0::1;-1:-1:-1::0;562:11:0::1;::::0;483:51;;-1:-1:-1;545:160:0::1;592:11;::::0;580:23:::1;::::0;:9;:23:::1;:::i;:::-;575:1;:29;545:160;;;649:1;626:3;634:11;;630:1;:15;;;;:::i;:::-;626:20;;;;;;;;:::i;:::-;;;;;;:24;;;::::0;::::1;692:1;665:7;677:11;;673:1;:15;;;;:::i;:::-;665:24;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:28;606:3;::::1;::::0;::::1;:::i;:::-;;;;545:160;;;;715:40;726:10;738:3;743:7;715:40;;;;;;;;;;;::::0;:10:::1;:40::i;:::-;794:9;780:11;;:23;;;;:::i;:::-;766:11;:37:::0;-1:-1:-1;;;350:461:0:o;819:421::-;911:20;948:9;-1:-1:-1;;;;;934:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:24:0;;911:47;;969:24;1010:9;-1:-1:-1;;;;;996:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;996:24:0;-1:-1:-1;969:51:0;-1:-1:-1;1048:5:0;1031:136;1060:17;1072:5;1060:9;:17;:::i;:::-;1055:1;:23;1031:136;;;1117:1;1100:3;1104:9;1108:5;1117:1;1104:9;:::i;:::-;1100:14;;;;;;;;:::i;:::-;;;;;;;;;;:18;1154:1;1133:7;1141:9;1145:5;1141:1;:9;:::i;:::-;1133:18;;;;;;;;:::i;:::-;;;;;;;;;;:22;1080:3;;;;:::i;:::-;;;;1031:136;;;;1177:55;1199:10;1211:2;1215:3;1220:7;1177:55;;;;;;;;;;;;:21;:55::i;3233:155:2:-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;;;;;;:::i;:::-;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;1979:201:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2068:22:1;::::1;2060:73;;;::::0;-1:-1:-1;;;2060:73:1;;13985:2:10;2060:73:1::1;::::0;::::1;13967:21:10::0;14024:2;14004:18;;;13997:30;14063:34;14043:18;;;14036:62;-1:-1:-1;;;14114:18:10;;;14107:36;14160:19;;2060:73:1::1;13783:402:10::0;2060:73:1::1;2144:28;2163:8;2144:18;:28::i;8180:88:2:-:0;8247:13;;;;:4;;:13;;;;;:::i;10564:648::-;-1:-1:-1;;;;;10691:18:2;;10683:66;;;;-1:-1:-1;;;10683:66:2;;14392:2:10;10683:66:2;;;14374:21:10;14431:2;14411:18;;;14404:30;14470:34;14450:18;;;14443:62;-1:-1:-1;;;14521:18:10;;;14514:33;14564:19;;10683:66:2;14190:399:10;10683:66:2;736:10:7;10806:102:2;736:10:7;10837:4:2;10762:16;10855:21;10873:2;10855:17;:21::i;:::-;10878:25;10896:6;10878:17;:25::i;:::-;-1:-1:-1;;10806:102:2;;;;;;;;;-1:-1:-1;10806:102:2;;-1:-1:-1;;;6262:1074:2;10806:102;10921:19;10943:13;;;;;;;;;;;-1:-1:-1;;;;;10943:19:2;;;;;;;;;;10981:21;;;;10973:70;;;;-1:-1:-1;;;10973:70:2;;14796:2:10;10973:70:2;;;14778:21:10;14835:2;14815:18;;;14808:30;14874:34;14854:18;;;14847:62;-1:-1:-1;;;14925:18:10;;;14918:34;14969:19;;10973:70:2;14594:400:10;10973:70:2;11079:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11079:19:2;;;;;;;;;;;;11101:20;;;11079:42;;11150:54;;15173:25:10;;;15214:18;;;15207:34;;;11079:19:2;;11150:54;;;;;;15146:18:10;11150:54:2;;;;;;;10672:540;;10564:648;;;:::o;9579:735::-;-1:-1:-1;;;;;9757:16:2;;9749:62;;;;-1:-1:-1;;;9749:62:2;;15454:2:10;9749:62:2;;;15436:21:10;15493:2;15473:18;;;15466:30;15532:34;15512:18;;;15505:62;-1:-1:-1;;;15583:18:10;;;15576:31;15624:19;;9749:62:2;15252:397:10;9749:62:2;9844:7;:14;9830:3;:10;:28;9822:81;;;;-1:-1:-1;;;9822:81:2;;;;;;;:::i;:::-;736:10:7;9916:16:2;10039:103;10063:3;:10;10059:1;:14;10039:103;;;10120:7;10128:1;10120:10;;;;;;;;:::i;:::-;;;;;;;10095:9;:17;10105:3;10109:1;10105:6;;;;;;;;:::i;:::-;;;;;;;10095:17;;;;;;;;;;;:21;10113:2;-1:-1:-1;;;;;10095:21:2;-1:-1:-1;;;;;10095:21:2;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10075:3:2;;-1:-1:-1;10075:3:2;;;:::i;:::-;;;;10039:103;;;;10195:2;-1:-1:-1;;;;;10159:53:2;10191:1;-1:-1:-1;;;;;10159:53:2;10173:8;-1:-1:-1;;;;;10159:53:2;;10199:3;10204:7;10159:53;;;;;;;:::i;:::-;;;;;;;;10225:81;10261:8;10279:1;10283:2;10287:3;10292:7;10301:4;10225:35;:81::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;12448:331:2:-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;12586:71;;;;-1:-1:-1;;;12586:71:2;;17552:2:10;12586:71:2;;;17534:21:10;17591:2;17571:18;;;17564:30;17630:34;17610:18;;;17603:62;-1:-1:-1;;;17681:18:10;;;17674:39;17730:19;;12586:71:2;17350:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;1159::10;;;12730::2;;1132:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;15173:25:10;;;15229:2;15214:18;;15207:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;15146:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;19908:2:10;15433:62:2;;;19890:21:10;19947:2;19927:18;;;19920:30;19986:34;19966:18;;;19959:62;-1:-1:-1;;;20037:18:10;;;20030:50;20097:19;;15433:62:2;19706:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:10;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:127::-;1272:10;1267:3;1263:20;1260:1;1253:31;1303:4;1300:1;1293:15;1327:4;1324:1;1317:15;1343:249;1453:2;1434:13;;-1:-1:-1;;1430:27:10;1418:40;;-1:-1:-1;;;;;1473:34:10;;1509:22;;;1470:62;1467:88;;;1535:18;;:::i;:::-;1571:2;1564:22;-1:-1:-1;;1343:249:10:o;1597:469::-;1662:5;-1:-1:-1;;;;;1688:6:10;1685:30;1682:56;;;1718:18;;:::i;:::-;1767:2;1761:9;1779:69;1836:2;1815:15;;-1:-1:-1;;1811:29:10;1842:4;1807:40;1761:9;1779:69;:::i;:::-;1866:6;1857:15;;1896:6;1888;1881:22;1936:3;1927:6;1922:3;1918:16;1915:25;1912:45;;;1953:1;1950;1943:12;1912:45;2003:6;1998:3;1991:4;1983:6;1979:17;1966:44;2058:1;2051:4;2042:6;2034;2030:19;2026:30;2019:41;;1597:469;;;;;:::o;2071:451::-;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;-1:-1:-1;;;;;2274:6:10;2271:30;2268:50;;;2314:1;2311;2304:12;2268:50;2337:22;;2390:4;2382:13;;2378:27;-1:-1:-1;2368:55:10;;2419:1;2416;2409:12;2368:55;2442:74;2508:7;2503:2;2490:16;2485:2;2481;2477:11;2442:74;:::i;:::-;2432:84;2071:451;-1:-1:-1;;;;2071:451:10:o;2527:322::-;2604:6;2612;2620;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2712:29;2731:9;2712:29;:::i;:::-;2702:39;2788:2;2773:18;;2760:32;;-1:-1:-1;2839:2:10;2824:18;;;2811:32;;2527:322;-1:-1:-1;;;2527:322:10:o;2854:180::-;2913:6;2966:2;2954:9;2945:7;2941:23;2937:32;2934:52;;;2982:1;2979;2972:12;2934:52;-1:-1:-1;3005:23:10;;2854:180;-1:-1:-1;2854:180:10:o;3039:472::-;3081:3;3119:5;3113:12;3146:6;3141:3;3134:19;3171:1;3181:162;3195:6;3192:1;3189:13;3181:162;;;3257:4;3313:13;;;3309:22;;3303:29;3285:11;;;3281:20;;3274:59;3210:12;3181:162;;;3361:6;3358:1;3355:13;3352:87;;;3427:1;3420:4;3411:6;3406:3;3402:16;3398:27;3391:38;3352:87;-1:-1:-1;3493:2:10;3472:15;-1:-1:-1;;3468:29:10;3459:39;;;;3500:4;3455:50;;3039:472;-1:-1:-1;;3039:472:10:o;3516:220::-;3665:2;3654:9;3647:21;3628:4;3685:45;3726:2;3715:9;3711:18;3703:6;3685:45;:::i;3741:183::-;3801:4;-1:-1:-1;;;;;3826:6:10;3823:30;3820:56;;;3856:18;;:::i;:::-;-1:-1:-1;3901:1:10;3897:14;3913:4;3893:25;;3741:183::o;3929:724::-;3983:5;4036:3;4029:4;4021:6;4017:17;4013:27;4003:55;;4054:1;4051;4044:12;4003:55;4090:6;4077:20;4116:4;4139:43;4179:2;4139:43;:::i;:::-;4211:2;4205:9;4223:31;4251:2;4243:6;4223:31;:::i;:::-;4289:18;;;4381:1;4377:10;;;;4365:23;;4361:32;;;4323:15;;;;-1:-1:-1;4405:15:10;;;4402:35;;;4433:1;4430;4423:12;4402:35;4469:2;4461:6;4457:15;4481:142;4497:6;4492:3;4489:15;4481:142;;;4563:17;;4551:30;;4601:12;;;;4514;;4481:142;;;-1:-1:-1;4641:6:10;3929:724;-1:-1:-1;;;;;;3929:724:10:o;4658:221::-;4700:5;4753:3;4746:4;4738:6;4734:17;4730:27;4720:55;;4771:1;4768;4761:12;4720:55;4793:80;4869:3;4860:6;4847:20;4840:4;4832:6;4828:17;4793:80;:::i;4884:868::-;5029:6;5037;5045;5053;5106:3;5094:9;5085:7;5081:23;5077:33;5074:53;;;5123:1;5120;5113:12;5074:53;5146:29;5165:9;5146:29;:::i;:::-;5136:39;;5226:2;5215:9;5211:18;5198:32;-1:-1:-1;;;;;5290:2:10;5282:6;5279:14;5276:34;;;5306:1;5303;5296:12;5276:34;5329:61;5382:7;5373:6;5362:9;5358:22;5329:61;:::i;:::-;5319:71;;5443:2;5432:9;5428:18;5415:32;5399:48;;5472:2;5462:8;5459:16;5456:36;;;5488:1;5485;5478:12;5456:36;5511:63;5566:7;5555:8;5544:9;5540:24;5511:63;:::i;:::-;5501:73;;5627:2;5616:9;5612:18;5599:32;5583:48;;5656:2;5646:8;5643:16;5640:36;;;5672:1;5669;5662:12;5640:36;;5695:51;5738:7;5727:8;5716:9;5712:24;5695:51;:::i;:::-;5685:61;;;4884:868;;;;;;;:::o;5757:943::-;5911:6;5919;5927;5935;5943;5996:3;5984:9;5975:7;5971:23;5967:33;5964:53;;;6013:1;6010;6003:12;5964:53;6036:29;6055:9;6036:29;:::i;:::-;6026:39;;6084:38;6118:2;6107:9;6103:18;6084:38;:::i;:::-;6074:48;;6173:2;6162:9;6158:18;6145:32;-1:-1:-1;;;;;6237:2:10;6229:6;6226:14;6223:34;;;6253:1;6250;6243:12;6223:34;6276:61;6329:7;6320:6;6309:9;6305:22;6276:61;:::i;:::-;6266:71;;6390:2;6379:9;6375:18;6362:32;6346:48;;6419:2;6409:8;6406:16;6403:36;;;6435:1;6432;6425:12;6403:36;6458:63;6513:7;6502:8;6491:9;6487:24;6458:63;:::i;:::-;6448:73;;6574:3;6563:9;6559:19;6546:33;6530:49;;6604:2;6594:8;6591:16;6588:36;;;6620:1;6617;6610:12;6588:36;;6643:51;6686:7;6675:8;6664:9;6660:24;6643:51;:::i;:::-;6633:61;;;5757:943;;;;;;;;:::o;6705:1208::-;6823:6;6831;6884:2;6872:9;6863:7;6859:23;6855:32;6852:52;;;6900:1;6897;6890:12;6852:52;6940:9;6927:23;-1:-1:-1;;;;;7010:2:10;7002:6;6999:14;6996:34;;;7026:1;7023;7016:12;6996:34;7064:6;7053:9;7049:22;7039:32;;7109:7;7102:4;7098:2;7094:13;7090:27;7080:55;;7131:1;7128;7121:12;7080:55;7167:2;7154:16;7189:4;7212:43;7252:2;7212:43;:::i;:::-;7284:2;7278:9;7296:31;7324:2;7316:6;7296:31;:::i;:::-;7362:18;;;7450:1;7446:10;;;;7438:19;;7434:28;;;7396:15;;;;-1:-1:-1;7474:19:10;;;7471:39;;;7506:1;7503;7496:12;7471:39;7530:11;;;;7550:148;7566:6;7561:3;7558:15;7550:148;;;7632:23;7651:3;7632:23;:::i;:::-;7620:36;;7583:12;;;;7676;;;;7550:148;;;7717:6;-1:-1:-1;;7761:18:10;;7748:32;;-1:-1:-1;;7792:16:10;;;7789:36;;;7821:1;7818;7811:12;7789:36;;7844:63;7899:7;7888:8;7877:9;7873:24;7844:63;:::i;:::-;7834:73;;;6705:1208;;;;;:::o;7918:435::-;7971:3;8009:5;8003:12;8036:6;8031:3;8024:19;8062:4;8091:2;8086:3;8082:12;8075:19;;8128:2;8121:5;8117:14;8149:1;8159:169;8173:6;8170:1;8167:13;8159:169;;;8234:13;;8222:26;;8268:12;;;;8303:15;;;;8195:1;8188:9;8159:169;;;-1:-1:-1;8344:3:10;;7918:435;-1:-1:-1;;;;;7918:435:10:o;8358:261::-;8537:2;8526:9;8519:21;8500:4;8557:56;8609:2;8598:9;8594:18;8586:6;8557:56;:::i;8832:322::-;8909:6;8917;8925;8978:2;8966:9;8957:7;8953:23;8949:32;8946:52;;;8994:1;8991;8984:12;8946:52;9030:9;9017:23;9007:33;;9087:2;9076:9;9072:18;9059:32;9049:42;;9110:38;9144:2;9133:9;9129:18;9110:38;:::i;:::-;9100:48;;8832:322;;;;;:::o;9159:347::-;9224:6;9232;9285:2;9273:9;9264:7;9260:23;9256:32;9253:52;;;9301:1;9298;9291:12;9253:52;9324:29;9343:9;9324:29;:::i;:::-;9314:39;;9403:2;9392:9;9388:18;9375:32;9450:5;9443:13;9436:21;9429:5;9426:32;9416:60;;9472:1;9469;9462:12;9416:60;9495:5;9485:15;;;9159:347;;;;;:::o;9511:260::-;9579:6;9587;9640:2;9628:9;9619:7;9615:23;9611:32;9608:52;;;9656:1;9653;9646:12;9608:52;9679:29;9698:9;9679:29;:::i;:::-;9669:39;;9727:38;9761:2;9750:9;9746:18;9727:38;:::i;:::-;9717:48;;9511:260;;;;;:::o;9776:606::-;9880:6;9888;9896;9904;9912;9965:3;9953:9;9944:7;9940:23;9936:33;9933:53;;;9982:1;9979;9972:12;9933:53;10005:29;10024:9;10005:29;:::i;:::-;9995:39;;10053:38;10087:2;10076:9;10072:18;10053:38;:::i;:::-;10043:48;;10138:2;10127:9;10123:18;10110:32;10100:42;;10189:2;10178:9;10174:18;10161:32;10151:42;;10244:3;10233:9;10229:19;10216:33;-1:-1:-1;;;;;10264:6:10;10261:30;10258:50;;;10304:1;10301;10294:12;10258:50;10327:49;10368:7;10359:6;10348:9;10344:22;10327:49;:::i;10387:186::-;10446:6;10499:2;10487:9;10478:7;10474:23;10470:32;10467:52;;;10515:1;10512;10505:12;10467:52;10538:29;10557:9;10538:29;:::i;10990:356::-;11192:2;11174:21;;;11211:18;;;11204:30;11270:34;11265:2;11250:18;;11243:62;11337:2;11322:18;;10990:356::o;11351:405::-;11553:2;11535:21;;;11592:2;11572:18;;;11565:30;11631:34;11626:2;11611:18;;11604:62;-1:-1:-1;;;11697:2:10;11682:18;;11675:39;11746:3;11731:19;;11351:405::o;11761:127::-;11822:10;11817:3;11813:20;11810:1;11803:31;11853:4;11850:1;11843:15;11877:4;11874:1;11867:15;11893:136;11932:3;11960:5;11950:39;;11969:18;;:::i;:::-;-1:-1:-1;;;12005:18:10;;11893:136::o;12034:380::-;12113:1;12109:12;;;;12156;;;12177:61;;12231:4;12223:6;12219:17;12209:27;;12177:61;12284:2;12276:6;12273:14;12253:18;12250:38;12247:161;;12330:10;12325:3;12321:20;12318:1;12311:31;12365:4;12362:1;12355:15;12393:4;12390:1;12383:15;12247:161;;12034:380;;;:::o;12419:128::-;12459:3;12490:1;12486:6;12483:1;12480:13;12477:39;;;12496:18;;:::i;:::-;-1:-1:-1;12532:9:10;;12419:128::o;13381:127::-;13442:10;13437:3;13433:20;13430:1;13423:31;13473:4;13470:1;13463:15;13497:4;13494:1;13487:15;13513:135;13552:3;13573:17;;;13570:43;;13593:18;;:::i;:::-;-1:-1:-1;13640:1:10;13629:13;;13513:135::o;13653:125::-;13693:4;13721:1;13718;13715:8;13712:34;;;13726:18;;:::i;:::-;-1:-1:-1;13763:9:10;;13653:125::o;15654:404::-;15856:2;15838:21;;;15895:2;15875:18;;;15868:30;15934:34;15929:2;15914:18;;15907:62;-1:-1:-1;;;16000:2:10;15985:18;;15978:38;16048:3;16033:19;;15654:404::o;16063:465::-;16320:2;16309:9;16302:21;16283:4;16346:56;16398:2;16387:9;16383:18;16375:6;16346:56;:::i;:::-;16450:9;16442:6;16438:22;16433:2;16422:9;16418:18;16411:50;16478:44;16515:6;16507;16478:44;:::i;:::-;16470:52;16063:465;-1:-1:-1;;;;;16063:465:10:o;16533:401::-;16735:2;16717:21;;;16774:2;16754:18;;;16747:30;16813:34;16808:2;16793:18;;16786:62;-1:-1:-1;;;16879:2:10;16864:18;;16857:35;16924:3;16909:19;;16533:401::o;16939:406::-;17141:2;17123:21;;;17180:2;17160:18;;;17153:30;17219:34;17214:2;17199:18;;17192:62;-1:-1:-1;;;17285:2:10;17270:18;;17263:40;17335:3;17320:19;;16939:406::o;17760:827::-;-1:-1:-1;;;;;18157:15:10;;;18139:34;;18209:15;;18204:2;18189:18;;18182:43;18119:3;18256:2;18241:18;;18234:31;;;18082:4;;18288:57;;18325:19;;18317:6;18288:57;:::i;:::-;18393:9;18385:6;18381:22;18376:2;18365:9;18361:18;18354:50;18427:44;18464:6;18456;18427:44;:::i;:::-;18413:58;;18520:9;18512:6;18508:22;18502:3;18491:9;18487:19;18480:51;18548:33;18574:6;18566;18548:33;:::i;:::-;18540:41;17760:827;-1:-1:-1;;;;;;;;17760:827:10:o;18592:249::-;18661:6;18714:2;18702:9;18693:7;18689:23;18685:32;18682:52;;;18730:1;18727;18720:12;18682:52;18762:9;18756:16;18781:30;18805:5;18781:30;:::i;18846:179::-;18881:3;18923:1;18905:16;18902:23;18899:120;;;18969:1;18966;18963;18948:23;-1:-1:-1;19006:1:10;19000:8;18995:3;18991:18;18899:120;18846:179;:::o;19030:671::-;19069:3;19111:4;19093:16;19090:26;19087:39;;;19030:671;:::o;19087:39::-;19153:2;19147:9;-1:-1:-1;;19218:16:10;19214:25;;19211:1;19147:9;19190:50;19269:4;19263:11;19293:16;-1:-1:-1;;;;;19399:2:10;19392:4;19384:6;19380:17;19377:25;19372:2;19364:6;19361:14;19358:45;19355:58;;;19406:5;;;;;19030:671;:::o;19355:58::-;19443:6;19437:4;19433:17;19422:28;;19479:3;19473:10;19506:2;19498:6;19495:14;19492:27;;;19512:5;;;;;;19030:671;:::o;19492:27::-;19596:2;19577:16;19571:4;19567:27;19563:36;19556:4;19547:6;19542:3;19538:16;19534:27;19531:69;19528:82;;;19603:5;;;;;;19030:671;:::o;19528:82::-;19619:57;19670:4;19661:6;19653;19649:19;19645:30;19639:4;19619:57;:::i;:::-;-1:-1:-1;19692:3:10;;19030:671;-1:-1:-1;;;;;19030:671:10:o;20127:404::-;20329:2;20311:21;;;20368:2;20348:18;;;20341:30;20407:34;20402:2;20387:18;;20380:62;-1:-1:-1;;;20473:2:10;20458:18;;20451:38;20521:3;20506:19;;20127:404::o;20536:561::-;-1:-1:-1;;;;;20833:15:10;;;20815:34;;20885:15;;20880:2;20865:18;;20858:43;20932:2;20917:18;;20910:34;;;20975:2;20960:18;;20953:34;;;20795:3;21018;21003:19;;20996:32;;;20758:4;;21045:46;;21071:19;;21063:6;21045:46;:::i;:::-;21037:54;20536:561;-1:-1:-1;;;;;;;20536:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1586400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2695",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"brun(address,uint256,uint256)": "infinite",
								"getTokenSupply()": "2325",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"mintBatchWithNumber(uint256)": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "28228",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "567",
								"tokenSupply()": "2329",
								"transferOwnership(address)": "28422",
								"transferWithNumber(uint256,uint256,address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH data",
									"source": 2,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f72452adf6d4d0760c56819a37b7bbe0a3ae49c492fd97c9b80ee783754a1f364736f6c634300080d0033",
									".code": [
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "AD974F4C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "7824407F"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "9416308E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "92F2DBF"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8770,
											"end": 8821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8743,
											"end": 8761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8624,
											"end": 8827,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 10892,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10909,
											"end": 10927,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10909,
											"end": 10927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10909,
											"end": 10927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10902,
											"end": 10943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 10979,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10960,
											"end": 10979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1564,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12754,
											"end": 12756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12736,
											"end": 12757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 12795,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12766,
											"end": 12796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12866,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12805,
											"end": 12867,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12901,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12883,
											"end": 12901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12876,
											"end": 12924,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12941,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12941,
											"end": 12960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12552,
											"end": 12966,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13173,
											"end": 13175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13155,
											"end": 13176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13214,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13185,
											"end": 13215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13285,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13231,
											"end": 13249,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13231,
											"end": 13249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13231,
											"end": 13249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13302,
											"end": 13320,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13302,
											"end": 13320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13302,
											"end": 13320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13370,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13351,
											"end": 13370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12971,
											"end": 13376,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 726,
											"end": 736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 738,
											"end": 741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 766,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1199,
											"end": 1209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 13987,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14024,
											"end": 14026,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13997,
											"end": 14027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14063,
											"end": 14097,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14036,
											"end": 14098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14114,
											"end": 14132,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14114,
											"end": 14132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14114,
											"end": 14132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14107,
											"end": 14143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14160,
											"end": 14179,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14160,
											"end": 14179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13783,
											"end": 14185,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14392,
											"end": 14394,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14374,
											"end": 14395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14433,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 14411,
											"end": 14429,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14411,
											"end": 14429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14411,
											"end": 14429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14404,
											"end": 14434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14504,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14443,
											"end": 14505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14190,
											"end": 14589,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10873,
											"end": 10875,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10921,
											"end": 10940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14796,
											"end": 14798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14778,
											"end": 14799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14835,
											"end": 14837,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14815,
											"end": 14833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14808,
											"end": 14838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14874,
											"end": 14908,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14925,
											"end": 14943,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14925,
											"end": 14943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 14943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14918,
											"end": 14952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14969,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14969,
											"end": 14988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14594,
											"end": 14994,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15454,
											"end": 15456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15436,
											"end": 15457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15493,
											"end": 15495,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 15473,
											"end": 15491,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15473,
											"end": 15491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15473,
											"end": 15491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15532,
											"end": 15566,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 15512,
											"end": 15530,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15512,
											"end": 15530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15512,
											"end": 15530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15505,
											"end": 15567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15607,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15624,
											"end": 15643,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15624,
											"end": 15643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15252,
											"end": 15649,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10195,
											"end": 10197,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10173,
											"end": 10181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10211,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10261,
											"end": 10269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10283,
											"end": 10285,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 17555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17591,
											"end": 17593,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17564,
											"end": 17594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17630,
											"end": 17664,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17603,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17681,
											"end": 17699,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17681,
											"end": 17699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17681,
											"end": 17699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17674,
											"end": 17713,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17730,
											"end": 17749,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 17730,
											"end": 17749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 17350,
											"end": 17755,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15229,
											"end": 15231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15207,
											"end": 15241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19908,
											"end": 19910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19890,
											"end": 19911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19947,
											"end": 19949,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 19927,
											"end": 19945,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19927,
											"end": 19945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19927,
											"end": 19945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19920,
											"end": 19950,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19986,
											"end": 20020,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 19966,
											"end": 19984,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19966,
											"end": 19984,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19966,
											"end": 19984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19959,
											"end": 20021,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20030,
											"end": 20080,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20097,
											"end": 20116,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 20097,
											"end": 20116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 19706,
											"end": 20122,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "396"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "396"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1307,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1840,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 2010,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2196,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2259,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2316,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2405,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2516,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2843,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2843,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2964,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3511,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3039,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3202,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3332,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3368,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3352,
											"end": 3439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3439,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3352,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3472,
											"end": 3487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3468,
											"end": 3497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3498,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3498,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3511,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3516,
											"end": 3736,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3516,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3715,
											"end": 3724,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3685,
											"end": 3730,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3741,
											"end": 3924,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3741,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3853,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3820,
											"end": 3876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3856,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3897,
											"end": 3911,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3924,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3929,
											"end": 4653,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 3929,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 3988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4040,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4097,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4213,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 4223,
											"end": 4254,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4223,
											"end": 4254,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4223,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4388,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4435,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4504,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4580,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4580,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4481,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4641,
											"end": 4647,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 4653,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 4653,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4658,
											"end": 4879,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 4658,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4757,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4720,
											"end": 4775,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4720,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 4869,
											"end": 4872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4838,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 4793,
											"end": 4873,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5092,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5127,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5074,
											"end": 5127,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5127,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5074,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 5146,
											"end": 5175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5146,
											"end": 5175,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5146,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5175,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5293,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5310,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 5276,
											"end": 5310,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5310,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 5276,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5382,
											"end": 5389,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5329,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5415,
											"end": 5447,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5475,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5492,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5456,
											"end": 5492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5490,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5492,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5456,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5563,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5511,
											"end": 5574,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5511,
											"end": 5574,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5511,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5574,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5631,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5583,
											"end": 5631,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5583,
											"end": 5631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5670,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5695,
											"end": 5746,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5695,
											"end": 5746,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5695,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 5752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 5999,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5984,
											"end": 5993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5967,
											"end": 6000,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 6017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 5964,
											"end": 6017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 6017,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 5964,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6065,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6084,
											"end": 6122,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6084,
											"end": 6122,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6084,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6122,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6237,
											"end": 6239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6226,
											"end": 6240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6255,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6318,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6305,
											"end": 6327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 6276,
											"end": 6337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6276,
											"end": 6337,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6276,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6419,
											"end": 6421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6403,
											"end": 6439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6439,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6403,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6513,
											"end": 6520,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6500,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 6458,
											"end": 6521,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6458,
											"end": 6521,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6458,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6559,
											"end": 6578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6673,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 6643,
											"end": 6694,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6694,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6643,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 6700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6837,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6855,
											"end": 6887,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6902,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6950,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7010,
											"end": 7012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6999,
											"end": 7013,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7062,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7109,
											"end": 7116,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7094,
											"end": 7107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7117,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7080,
											"end": 7135,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7133,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7135,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7080,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7170,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7189,
											"end": 7193,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7287,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7324,
											"end": 7326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7451,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7446,
											"end": 7456,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7456,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7456,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7457,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7462,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7474,
											"end": 7493,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7493,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7493,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7510,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7471,
											"end": 7510,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7508,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7510,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7471,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7564,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7573,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7632,
											"end": 7655,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7655,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7632,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7595,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7595,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7550,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7779,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7748,
											"end": 7780,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7748,
											"end": 7780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7808,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7823,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 7899,
											"end": 7906,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7886,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 7897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7844,
											"end": 7907,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7844,
											"end": 7907,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 7844,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 7913,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7918,
											"end": 8353,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7918,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8003,
											"end": 8015,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8036,
											"end": 8042,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8089,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8126,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8149,
											"end": 8150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8180,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8248,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8248,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8188,
											"end": 8197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8159,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 8353,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 8353,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8358,
											"end": 8619,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 8358,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8539,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8526,
											"end": 8535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8540,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8586,
											"end": 8592,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8557,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8557,
											"end": 8613,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8980,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8966,
											"end": 8975,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8964,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8976,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8981,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8998,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8946,
											"end": 8998,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8984,
											"end": 8996,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8998,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8946,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9030,
											"end": 9039,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9017,
											"end": 9040,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9007,
											"end": 9040,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9007,
											"end": 9040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 9154,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9224,
											"end": 9230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9273,
											"end": 9282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9271,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9283,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9288,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9305,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9253,
											"end": 9305,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9303,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9305,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9253,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9343,
											"end": 9352,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9324,
											"end": 9353,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9324,
											"end": 9353,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9324,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9392,
											"end": 9401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 9407,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9443,
											"end": 9456,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9457,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9416,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9416,
											"end": 9476,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9474,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9416,
											"end": 9476,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9416,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9485,
											"end": 9500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9485,
											"end": 9500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9485,
											"end": 9500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9506,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9628,
											"end": 9637,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9619,
											"end": 9626,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9638,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9611,
											"end": 9643,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9660,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9608,
											"end": 9660,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9653,
											"end": 9654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9646,
											"end": 9658,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9660,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9608,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9698,
											"end": 9707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9679,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9761,
											"end": 9763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9759,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9771,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9776,
											"end": 10382,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9776,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 9918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9968,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9953,
											"end": 9962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9944,
											"end": 9951,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9940,
											"end": 9963,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9969,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9982,
											"end": 9983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10024,
											"end": 10033,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10005,
											"end": 10034,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10005,
											"end": 10034,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10005,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10034,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10087,
											"end": 10089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10091,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10140,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10136,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10110,
											"end": 10142,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10100,
											"end": 10142,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10100,
											"end": 10142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10178,
											"end": 10187,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10193,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10193,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10247,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10233,
											"end": 10242,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10216,
											"end": 10249,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10308,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 10258,
											"end": 10308,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10306,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10308,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 10258,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 10368,
											"end": 10375,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 10327,
											"end": 10376,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10387,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 10387,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10497,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10502,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10519,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10467,
											"end": 10519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10505,
											"end": 10517,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10519,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10467,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10538,
											"end": 10567,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10990,
											"end": 11346,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 10990,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11174,
											"end": 11195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11174,
											"end": 11195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11174,
											"end": 11195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11204,
											"end": 11234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11270,
											"end": 11304,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11265,
											"end": 11267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11250,
											"end": 11268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11250,
											"end": 11268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11243,
											"end": 11305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11339,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11346,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11351,
											"end": 11756,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 11351,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11535,
											"end": 11556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11592,
											"end": 11594,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11665,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11604,
											"end": 11666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11697,
											"end": 11699,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11682,
											"end": 11700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 11700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11675,
											"end": 11714,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11746,
											"end": 11749,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11731,
											"end": 11750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11756,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11761,
											"end": 11888,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11761,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11822,
											"end": 11832,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 11817,
											"end": 11820,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11813,
											"end": 11833,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11810,
											"end": 11811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11850,
											"end": 11851,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11867,
											"end": 11882,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11893,
											"end": 12029,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 11893,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 11935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11960,
											"end": 11965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11950,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11950,
											"end": 11989,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11893,
											"end": 12029,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12114,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12109,
											"end": 12121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12121,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 12177,
											"end": 12238,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12231,
											"end": 12235,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 12223,
											"end": 12229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12219,
											"end": 12236,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12238,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 12177,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12284,
											"end": 12286,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12276,
											"end": 12282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12273,
											"end": 12287,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12288,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 12247,
											"end": 12408,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12340,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12325,
											"end": 12328,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12321,
											"end": 12341,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12311,
											"end": 12342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12369,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12362,
											"end": 12363,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12355,
											"end": 12370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12393,
											"end": 12397,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12390,
											"end": 12391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12398,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12408,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 12247,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12414,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12419,
											"end": 12547,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 12419,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12490,
											"end": 12491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12493,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12477,
											"end": 12516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12477,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 12477,
											"end": 12516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12547,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13381,
											"end": 13508,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 13381,
											"end": 13508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13452,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 13433,
											"end": 13453,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 13430,
											"end": 13431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13423,
											"end": 13454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13473,
											"end": 13477,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 13470,
											"end": 13471,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13463,
											"end": 13478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13487,
											"end": 13502,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13513,
											"end": 13648,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 13513,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13552,
											"end": 13555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13573,
											"end": 13590,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13573,
											"end": 13590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13573,
											"end": 13590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13570,
											"end": 13613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13640,
											"end": 13641,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13629,
											"end": 13642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13629,
											"end": 13642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13513,
											"end": 13648,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13653,
											"end": 13778,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 13653,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13721,
											"end": 13722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13718,
											"end": 13719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13715,
											"end": 13723,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13712,
											"end": 13746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13653,
											"end": 13778,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15654,
											"end": 16058,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 15654,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15856,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15895,
											"end": 15897,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15934,
											"end": 15968,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 15929,
											"end": 15931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16000,
											"end": 16002,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15978,
											"end": 16016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16048,
											"end": 16051,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15654,
											"end": 16058,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16063,
											"end": 16528,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 16063,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16302,
											"end": 16323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16283,
											"end": 16287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 16398,
											"end": 16400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16387,
											"end": 16396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16375,
											"end": 16381,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16346,
											"end": 16402,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16346,
											"end": 16402,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 16346,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16450,
											"end": 16459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16438,
											"end": 16460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16433,
											"end": 16435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16422,
											"end": 16431,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16411,
											"end": 16461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16478,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 16515,
											"end": 16521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16507,
											"end": 16513,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16478,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16478,
											"end": 16522,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16478,
											"end": 16522,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 16478,
											"end": 16522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16522,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16528,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16063,
											"end": 16528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16533,
											"end": 16934,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 16533,
											"end": 16934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16735,
											"end": 16737,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16717,
											"end": 16738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16717,
											"end": 16738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16717,
											"end": 16738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16776,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 16754,
											"end": 16772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16754,
											"end": 16772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16754,
											"end": 16772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16813,
											"end": 16847,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 16808,
											"end": 16810,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16786,
											"end": 16848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16879,
											"end": 16881,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16864,
											"end": 16882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16864,
											"end": 16882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16857,
											"end": 16892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16924,
											"end": 16927,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16909,
											"end": 16928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16909,
											"end": 16928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16533,
											"end": 16934,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16939,
											"end": 17345,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 16939,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17141,
											"end": 17143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17123,
											"end": 17144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17182,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17219,
											"end": 17253,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17214,
											"end": 17216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17199,
											"end": 17217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17285,
											"end": 17287,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17270,
											"end": 17288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17263,
											"end": 17303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17338,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17320,
											"end": 17339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17320,
											"end": 17339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 17345,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17760,
											"end": 18587,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 17760,
											"end": 18587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18157,
											"end": 18172,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18157,
											"end": 18172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18157,
											"end": 18172,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18139,
											"end": 18173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18139,
											"end": 18173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18209,
											"end": 18224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18209,
											"end": 18224,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18204,
											"end": 18206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18182,
											"end": 18225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18119,
											"end": 18122,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 18256,
											"end": 18258,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18241,
											"end": 18259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18241,
											"end": 18259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18082,
											"end": 18086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18082,
											"end": 18086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18325,
											"end": 18344,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18325,
											"end": 18344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18317,
											"end": 18323,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18288,
											"end": 18345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18393,
											"end": 18402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18385,
											"end": 18391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18381,
											"end": 18403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18376,
											"end": 18378,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18365,
											"end": 18374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18354,
											"end": 18404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18427,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18464,
											"end": 18470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18456,
											"end": 18462,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18427,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 18427,
											"end": 18471,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18427,
											"end": 18471,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18427,
											"end": 18471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18413,
											"end": 18471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18413,
											"end": 18471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18520,
											"end": 18529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18512,
											"end": 18518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18508,
											"end": 18530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18502,
											"end": 18505,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 18491,
											"end": 18500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18487,
											"end": 18506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18548,
											"end": 18581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 18574,
											"end": 18580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18566,
											"end": 18572,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18548,
											"end": 18581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 18548,
											"end": 18581,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18548,
											"end": 18581,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 18548,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18540,
											"end": 18581,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 17760,
											"end": 18587,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17760,
											"end": 18587,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18592,
											"end": 18841,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 18592,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18661,
											"end": 18667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18716,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18702,
											"end": 18711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18693,
											"end": 18700,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18689,
											"end": 18712,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18685,
											"end": 18717,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 18682,
											"end": 18734,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18682,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 18682,
											"end": 18734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18730,
											"end": 18731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18727,
											"end": 18728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18720,
											"end": 18732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18682,
											"end": 18734,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 18682,
											"end": 18734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18762,
											"end": 18771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18756,
											"end": 18772,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18781,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 18805,
											"end": 18810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18781,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 18781,
											"end": 18811,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18846,
											"end": 19025,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 18846,
											"end": 19025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18924,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 18905,
											"end": 18921,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 18925,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 19019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 18899,
											"end": 19019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18969,
											"end": 18970,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18963,
											"end": 18964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18948,
											"end": 18971,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19006,
											"end": 19007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19000,
											"end": 19008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18995,
											"end": 18998,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18991,
											"end": 19009,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 19019,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 18899,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18846,
											"end": 19025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18846,
											"end": 19025,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19069,
											"end": 19072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19093,
											"end": 19109,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19090,
											"end": 19116,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 19087,
											"end": 19126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19087,
											"end": 19126,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 19087,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19153,
											"end": 19155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19147,
											"end": 19156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19218,
											"end": 19234,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19214,
											"end": 19239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19214,
											"end": 19239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19211,
											"end": 19212,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19147,
											"end": 19156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19190,
											"end": 19240,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19263,
											"end": 19274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19293,
											"end": 19309,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19399,
											"end": 19401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19396,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19384,
											"end": 19390,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19377,
											"end": 19402,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19372,
											"end": 19374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19364,
											"end": 19370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19361,
											"end": 19375,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19358,
											"end": 19403,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 19355,
											"end": 19413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19355,
											"end": 19413,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 19355,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19443,
											"end": 19449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 19441,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19433,
											"end": 19450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19422,
											"end": 19450,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19422,
											"end": 19450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19479,
											"end": 19482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19483,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19506,
											"end": 19508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19498,
											"end": 19504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19495,
											"end": 19509,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19492,
											"end": 19519,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19492,
											"end": 19519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 19492,
											"end": 19519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19492,
											"end": 19519,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 19492,
											"end": 19519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19596,
											"end": 19598,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19577,
											"end": 19593,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19575,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19567,
											"end": 19594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19563,
											"end": 19599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19560,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19547,
											"end": 19553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19545,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19538,
											"end": 19554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19534,
											"end": 19561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19531,
											"end": 19600,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 19528,
											"end": 19610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19528,
											"end": 19610,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 19528,
											"end": 19610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19619,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19661,
											"end": 19667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19653,
											"end": 19659,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19649,
											"end": 19668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19645,
											"end": 19675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19639,
											"end": 19643,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19619,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 19619,
											"end": 19676,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19619,
											"end": 19676,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 19619,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19692,
											"end": 19695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19692,
											"end": 19695,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19030,
											"end": 19701,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20127,
											"end": 20531,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 20127,
											"end": 20531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20329,
											"end": 20331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20311,
											"end": 20332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20311,
											"end": 20332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20311,
											"end": 20332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20368,
											"end": 20370,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 20348,
											"end": 20366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20348,
											"end": 20366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20348,
											"end": 20366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20341,
											"end": 20371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20441,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 20402,
											"end": 20404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20387,
											"end": 20405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20380,
											"end": 20442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20473,
											"end": 20475,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20458,
											"end": 20476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20458,
											"end": 20476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20451,
											"end": 20489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20521,
											"end": 20524,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 20506,
											"end": 20525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20506,
											"end": 20525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20127,
											"end": 20531,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20536,
											"end": 21097,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 20536,
											"end": 21097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20833,
											"end": 20848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20833,
											"end": 20848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20833,
											"end": 20848,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20815,
											"end": 20849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20815,
											"end": 20849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20885,
											"end": 20900,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20885,
											"end": 20900,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20880,
											"end": 20882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20865,
											"end": 20883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 20883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20858,
											"end": 20901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20932,
											"end": 20934,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20917,
											"end": 20935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20917,
											"end": 20935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20910,
											"end": 20944,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20910,
											"end": 20944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20910,
											"end": 20944,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20975,
											"end": 20977,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20953,
											"end": 20987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20953,
											"end": 20987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20953,
											"end": 20987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20795,
											"end": 20798,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 21018,
											"end": 21021,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 21003,
											"end": 21022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21003,
											"end": 21022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20996,
											"end": 21028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20996,
											"end": 21028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20996,
											"end": 21028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20758,
											"end": 20762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20758,
											"end": 20762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21063,
											"end": 21069,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 21045,
											"end": 21091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21091,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 20536,
											"end": 21097,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20536,
											"end": 21097,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"brun(address,uint256,uint256)": "092f2dbf",
							"getTokenSupply()": "ad974f4c",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"mintBatchWithNumber(uint256)": "71ac14e6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply()": "7824407f",
							"transferOwnership(address)": "f2fde38b",
							"transferWithNumber(uint256,uint256,address)": "9416308e",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"brun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"mintBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/ERC1155.sol\":\"BeeItems\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/ERC1155.sol\":{\"keccak256\":\"0x7117e45629c307c5521b7e9963b578acde768535f98bd567357be6d387fa7dc5\",\"urls\":[\"bzz-raw://57b60b585a5e4389a1adddd037b9150d71df1c180b80ff74f10201a80429575c\",\"dweb:/ipfs/QmdLyFkkW79gLSxkkC7y6mSC5hYWTWJZaFB3eTqWhFX5MR\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 255,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 255,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1381:1564  return... */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_55\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_15\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_55\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_155\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_173\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x01\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_175\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      dup1\n      0x08c379a0\n      sub\n      tag_178\n      jumpi\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      tag_183\n      jumpi\n      pop\n      jump(tag_177)\n    tag_183:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      pop\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15118:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x34\n        /* \"#utility.yul\":15155:15173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15148:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15194:15212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15187:15249   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15265:15283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15258:15308   */\n      mstore\n        /* \"#utility.yul\":15325:15344   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14934:15350   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_175:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_94\n      jump\t// in\n    tag_196:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_200\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_203\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_204:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_217:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_228:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_230:\n        /* \"#utility.yul\":360:389   */\n      tag_231\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_217\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_234:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_236:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_237\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_218\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_219:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_242:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_242)\n    tag_244:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_237\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_219\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_220:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_251\n      tag_86\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_221:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_254\n      tag_86\n      jump\t// in\n    tag_254:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_222:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_256:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_257\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_258\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_259:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_260:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_260)\n    tag_262:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_223:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_264:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_266\n      tag_86\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_267\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_220\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_268:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_270:\n        /* \"#utility.yul\":4240:4269   */\n      tag_271\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_217\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_272\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_217\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_273:\n        /* \"#utility.yul\":4480:4541   */\n      tag_274\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_222\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_275:\n        /* \"#utility.yul\":4662:4725   */\n      tag_276\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_278\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_280:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_281:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_282:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_283\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_221\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_284\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_220\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_285:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_286:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_289\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_217\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_286)\n    tag_288:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_291\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_222\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_224:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_293:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_293)\n    tag_295:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_237\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_299:\n        /* \"#utility.yul\":6993:7022   */\n      tag_300\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_217\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_301:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_303:\n        /* \"#utility.yul\":7348:7377   */\n      tag_304\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_217\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_305\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_217\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_307:\n        /* \"#utility.yul\":7674:7703   */\n      tag_308\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_217\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_309\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_217\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_310:\n        /* \"#utility.yul\":7996:8045   */\n      tag_278\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_64:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_314:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      sub\n        /* \"#utility.yul\":8681:8842   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_315:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_94:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_225:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_100:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_322\n      tag_225\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_124:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_137:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_139:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_329\n      tag_225\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_142:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_331\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_224\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_332\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13815   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13400   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13367:13401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13437:13452   */\n      dup6\n      and\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13453   */\n      mstore\n        /* \"#utility.yul\":13347:13350   */\n      0xa0\n        /* \"#utility.yul\":13484:13486   */\n      0x40\n        /* \"#utility.yul\":13469:13487   */\n      dup3\n      add\n        /* \"#utility.yul\":13462:13493   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13310:13314   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13516:13573   */\n      tag_336\n      swap1\n        /* \"#utility.yul\":13553:13572   */\n      dup4\n      add\n        /* \"#utility.yul\":13545:13551   */\n      dup7\n        /* \"#utility.yul\":13516:13573   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13613:13619   */\n      dup2\n        /* \"#utility.yul\":13609:13631   */\n      sub\n        /* \"#utility.yul\":13604:13606   */\n      0x60\n        /* \"#utility.yul\":13593:13602   */\n      dup5\n        /* \"#utility.yul\":13589:13607   */\n      add\n        /* \"#utility.yul\":13582:13632   */\n      mstore\n        /* \"#utility.yul\":13655:13699   */\n      tag_337\n        /* \"#utility.yul\":13692:13698   */\n      dup2\n        /* \"#utility.yul\":13684:13690   */\n      dup7\n        /* \"#utility.yul\":13655:13699   */\n      tag_224\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13641:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13740:13746   */\n      dup2\n        /* \"#utility.yul\":13736:13758   */\n      sub\n        /* \"#utility.yul\":13730:13733   */\n      0x80\n        /* \"#utility.yul\":13719:13728   */\n      dup5\n        /* \"#utility.yul\":13715:13734   */\n      add\n        /* \"#utility.yul\":13708:13759   */\n      mstore\n        /* \"#utility.yul\":13776:13809   */\n      tag_338\n        /* \"#utility.yul\":13802:13808   */\n      dup2\n        /* \"#utility.yul\":13794:13800   */\n      dup6\n        /* \"#utility.yul\":13776:13809   */\n      tag_219\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13768:13809   */\n      swap9\n        /* \"#utility.yul\":12988:13815   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14069   */\n    tag_174:\n        /* \"#utility.yul\":13889:13895   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13921:13928   */\n      dup5\n        /* \"#utility.yul\":13917:13940   */\n      sub\n        /* \"#utility.yul\":13913:13945   */\n      slt\n        /* \"#utility.yul\":13910:13962   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13955:13956   */\n      dup1\n        /* \"#utility.yul\":13948:13960   */\n      revert\n        /* \"#utility.yul\":13910:13962   */\n    tag_340:\n        /* \"#utility.yul\":13990:13999   */\n      dup2\n        /* \"#utility.yul\":13984:14000   */\n      mload\n        /* \"#utility.yul\":14009:14039   */\n      tag_237\n        /* \"#utility.yul\":14033:14038   */\n      dup2\n        /* \"#utility.yul\":14009:14039   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":14074:14253   */\n    tag_180:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14151:14152   */\n      0x03\n        /* \"#utility.yul\":14133:14149   */\n      returndatasize\n        /* \"#utility.yul\":14130:14153   */\n      gt\n        /* \"#utility.yul\":14127:14247   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14197:14198   */\n      0x04\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14191:14192   */\n      dup1\n        /* \"#utility.yul\":14176:14199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14228:14236   */\n      mload\n        /* \"#utility.yul\":14223:14226   */\n      0xe0\n        /* \"#utility.yul\":14219:14237   */\n      shr\n        /* \"#utility.yul\":14127:14247   */\n    tag_343:\n        /* \"#utility.yul\":14074:14253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14258:14929   */\n    tag_182:\n        /* \"#utility.yul\":14297:14300   */\n      0x00\n        /* \"#utility.yul\":14339:14343   */\n      0x44\n        /* \"#utility.yul\":14321:14337   */\n      returndatasize\n        /* \"#utility.yul\":14318:14344   */\n      lt\n        /* \"#utility.yul\":14315:14354   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14315:14354   */\n    tag_345:\n        /* \"#utility.yul\":14381:14383   */\n      0x40\n        /* \"#utility.yul\":14375:14384   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14446:14462   */\n      returndatasize\n        /* \"#utility.yul\":14442:14467   */\n      dup2\n      add\n        /* \"#utility.yul\":14439:14440   */\n      0x04\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14418:14468   */\n      returndatacopy\n        /* \"#utility.yul\":14497:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14502   */\n      mload\n        /* \"#utility.yul\":14521:14537   */\n      returndatasize\n        /* \"#utility.yul\":14556:14574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14627:14629   */\n      dup2\n        /* \"#utility.yul\":14620:14624   */\n      0x24\n        /* \"#utility.yul\":14612:14618   */\n      dup5\n        /* \"#utility.yul\":14608:14625   */\n      add\n        /* \"#utility.yul\":14605:14630   */\n      gt\n        /* \"#utility.yul\":14600:14602   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup5\n        /* \"#utility.yul\":14589:14603   */\n      gt\n        /* \"#utility.yul\":14586:14631   */\n      or\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14634:14639   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14583:14641   */\n    tag_346:\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14665:14669   */\n      dup6\n        /* \"#utility.yul\":14661:14678   */\n      add\n        /* \"#utility.yul\":14650:14678   */\n      swap2\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      dup2\n        /* \"#utility.yul\":14701:14711   */\n      mload\n        /* \"#utility.yul\":14734:14736   */\n      dup2\n        /* \"#utility.yul\":14726:14732   */\n      dup2\n        /* \"#utility.yul\":14723:14737   */\n      gt\n        /* \"#utility.yul\":14720:14747   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14740:14745   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14720:14747   */\n    tag_347:\n        /* \"#utility.yul\":14824:14826   */\n      dup5\n        /* \"#utility.yul\":14805:14821   */\n      returndatasize\n        /* \"#utility.yul\":14799:14803   */\n      dup8\n        /* \"#utility.yul\":14795:14822   */\n      add\n        /* \"#utility.yul\":14791:14827   */\n      add\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14770:14773   */\n      dup6\n        /* \"#utility.yul\":14766:14782   */\n      add\n        /* \"#utility.yul\":14762:14789   */\n      add\n        /* \"#utility.yul\":14759:14828   */\n      gt\n        /* \"#utility.yul\":14756:14838   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14831:14836   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14756:14838   */\n    tag_348:\n        /* \"#utility.yul\":14847:14904   */\n      tag_349\n        /* \"#utility.yul\":14898:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14881:14887   */\n      dup7\n        /* \"#utility.yul\":14877:14896   */\n      add\n        /* \"#utility.yul\":14873:14903   */\n      add\n        /* \"#utility.yul\":14867:14871   */\n      dup8\n        /* \"#utility.yul\":14847:14904   */\n      tag_220\n      jump\t// in\n    tag_349:\n      pop\n        /* \"#utility.yul\":14920:14923   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14258:14929   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15759   */\n    tag_190:\n        /* \"#utility.yul\":15557:15559   */\n      0x20\n        /* \"#utility.yul\":15539:15560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15596:15598   */\n      0x28\n        /* \"#utility.yul\":15576:15594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15569:15599   */\n      mstore\n        /* \"#utility.yul\":15635:15669   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15630:15632   */\n      0x40\n        /* \"#utility.yul\":15615:15633   */\n      dup3\n      add\n        /* \"#utility.yul\":15608:15670   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15701:15703   */\n      0x60\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15717   */\n      mstore\n        /* \"#utility.yul\":15749:15752   */\n      0x80\n        /* \"#utility.yul\":15734:15753   */\n      add\n      swap1\n        /* \"#utility.yul\":15355:15759   */\n      jump\t// out\n        /* \"#utility.yul\":15764:16325   */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16061:16076   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16043:16077   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16113:16128   */\n      dup6\n      and\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16093:16111   */\n      dup3\n      add\n        /* \"#utility.yul\":16086:16129   */\n      mstore\n        /* \"#utility.yul\":16160:16162   */\n      0x40\n        /* \"#utility.yul\":16145:16163   */\n      dup2\n      add\n        /* \"#utility.yul\":16138:16172   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16203:16205   */\n      0x60\n        /* \"#utility.yul\":16188:16206   */\n      dup2\n      add\n        /* \"#utility.yul\":16181:16215   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0xa0\n        /* \"#utility.yul\":16246:16249   */\n      0x80\n        /* \"#utility.yul\":16231:16250   */\n      dup3\n      add\n        /* \"#utility.yul\":16224:16256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16273:16319   */\n      tag_353\n      swap1\n        /* \"#utility.yul\":16299:16318   */\n      dup4\n      add\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16273:16319   */\n      tag_219\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":16265:16319   */\n      swap8\n        /* \"#utility.yul\":15764:16325   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d79b19c0d9c7c5f28cf439f7aef13dd4b75a03c5d8ce4e266c2a31a88470497964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 70,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:10"
															},
															"nodeType": "YulIf",
															"src": "268:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:10"
															},
															"nodeType": "YulIf",
															"src": "405:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:10"
															},
															"nodeType": "YulIf",
															"src": "489:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:10"
															},
															"nodeType": "YulIf",
															"src": "581:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:10"
															},
															"nodeType": "YulIf",
															"src": "764:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:10"
															},
															"nodeType": "YulIf",
															"src": "903:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:10",
																"statements": []
															},
															"src": "984:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:10"
															},
															"nodeType": "YulIf",
															"src": "1122:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "146:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:10"
															},
															"nodeType": "YulIf",
															"src": "1381:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:10"
															},
															"nodeType": "YulIf",
															"src": "1451:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:10",
														"type": ""
													}
												],
												"src": "1238:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620015fe380380620015fe83398101604081905262000034916200011b565b6200003f8162000046565b5062000233565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b6020821081036200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b6113bb80620002436000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea2646970667358221220d79b19c0d9c7c5f28cf439f7aef13dd4b75a03c5d8ce4e266c2a31a88470497964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15FE CODESIZE SUB DUP1 PUSH3 0x15FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x233 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BB DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP12 NOT 0xC0 0xD9 0xC7 0xC5 CALLCODE DUP13 DELEGATECALL CODECOPY 0xF7 0xAE CALL RETURNDATASIZE 0xD4 0xB7 GAS SUB 0xC5 0xD8 0xCE 0x4E 0x26 PUSH13 0x2A31A88470497964736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "574:15164:2:-:0;;;1126:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:13;1177:4;1169:7;:13::i;:::-;1126:64;574:15164;;8180:88;8247:13;;;;:4;;:13;;;;;:::i;:::-;;8180:88;:::o;574:15164::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;574:15164:2;;;-1:-1:-1;574:15164:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:10;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:10;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:10:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;574:15164:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 2718,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 2371,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 2793,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 1376,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 2077,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 1853,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 928,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 396,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 777,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 1241,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 1226,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 547,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_440": {
									"entryPoint": 629,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16327:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:10"
															},
															"nodeType": "YulIf",
															"src": "1291:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:10",
														"type": ""
													}
												],
												"src": "1211:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:10",
																"statements": []
															},
															"src": "1538:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:10"
															},
															"nodeType": "YulIf",
															"src": "1709:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1396:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:10",
														"type": ""
													}
												],
												"src": "1873:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:10"
															},
															"nodeType": "YulIf",
															"src": "2354:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:10",
														"type": ""
													}
												],
												"src": "2230:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:10"
															},
															"nodeType": "YulIf",
															"src": "2563:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:10",
														"type": ""
													}
												],
												"src": "2484:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:10"
															},
															"nodeType": "YulIf",
															"src": "2746:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:10"
															},
															"nodeType": "YulIf",
															"src": "3145:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:10",
																"statements": []
															},
															"src": "3224:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:10",
														"type": ""
													}
												],
												"src": "2672:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:10"
															},
															"nodeType": "YulIf",
															"src": "3463:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:10"
															},
															"nodeType": "YulIf",
															"src": "3566:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:10"
															},
															"nodeType": "YulIf",
															"src": "3762:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:10",
														"type": ""
													}
												],
												"src": "3401:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:10"
															},
															"nodeType": "YulIf",
															"src": "4168:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:10"
															},
															"nodeType": "YulIf",
															"src": "4427:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:10"
															},
															"nodeType": "YulIf",
															"src": "4607:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:10"
															},
															"nodeType": "YulIf",
															"src": "4792:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:10",
														"type": ""
													}
												],
												"src": "3961:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:10"
															},
															"nodeType": "YulIf",
															"src": "5056:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:10"
															},
															"nodeType": "YulIf",
															"src": "5200:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:10"
															},
															"nodeType": "YulIf",
															"src": "5284:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:10"
															},
															"nodeType": "YulIf",
															"src": "5675:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:10",
																"statements": []
															},
															"src": "5754:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:10"
															},
															"nodeType": "YulIf",
															"src": "5993:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:10",
														"type": ""
													}
												],
												"src": "4909:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:10",
																"statements": []
															},
															"src": "6363:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:10",
														"type": ""
													}
												],
												"src": "6122:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:10",
														"type": ""
													}
												],
												"src": "6562:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:10"
															},
															"nodeType": "YulIf",
															"src": "6922:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:10"
															},
															"nodeType": "YulIf",
															"src": "7085:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:10",
														"type": ""
													}
												],
												"src": "6828:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:10"
															},
															"nodeType": "YulIf",
															"src": "7277:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:10",
														"type": ""
													}
												],
												"src": "7180:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:10"
															},
															"nodeType": "YulIf",
															"src": "7602:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:10"
															},
															"nodeType": "YulIf",
															"src": "7927:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:10",
														"type": ""
													}
												],
												"src": "7445:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:10",
														"type": ""
													}
												],
												"src": "8056:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:10"
															},
															"nodeType": "YulIf",
															"src": "8611:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:10"
															},
															"nodeType": "YulIf",
															"src": "8681:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:10",
														"type": ""
													}
												],
												"src": "8468:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:10",
														"type": ""
													}
												],
												"src": "8853:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:10",
														"type": ""
													}
												],
												"src": "9272:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:10"
															},
															"nodeType": "YulIf",
															"src": "10003:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:10",
														"type": ""
													}
												],
												"src": "9946:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:10",
														"type": ""
													}
												],
												"src": "10086:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:10",
														"type": ""
													}
												],
												"src": "10496:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:10",
														"type": ""
													}
												],
												"src": "10905:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:10",
														"type": ""
													}
												],
												"src": "11311:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:10"
															},
															"nodeType": "YulIf",
															"src": "11780:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:10",
														"type": ""
													}
												],
												"src": "11722:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:10",
														"type": ""
													}
												],
												"src": "11855:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:10",
														"type": ""
													}
												],
												"src": "12325:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:10",
														"type": ""
													}
												],
												"src": "12735:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13319:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13329:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13333:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13502:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13516:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13506:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13609:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13641:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13655:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13645:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13748:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13794:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13776:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13267:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13275:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13283:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13291:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13299:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13310:4:10",
														"type": ""
													}
												],
												"src": "12988:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13946:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13955:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13958:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13948:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13921:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13917:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:32:10"
															},
															"nodeType": "YulIf",
															"src": "13910:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13971:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13984:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13975:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14033:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14009:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14058:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13866:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13877:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13889:6:10",
														"type": ""
													}
												],
												"src": "13820:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14162:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14191:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14194:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14176:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14176:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14176:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14212:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14234:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14228:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14228:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14219:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14133:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14130:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:23:10"
															},
															"nodeType": "YulIf",
															"src": "14127:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14109:3:10",
														"type": ""
													}
												],
												"src": "14074:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14305:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14347:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14321:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14318:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:26:10"
															},
															"nodeType": "YulIf",
															"src": "14315:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14363:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14375:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14367:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14393:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14397:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14446:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14446:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14442:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14418:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14477:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14497:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14481:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14511:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14521:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14515:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14546:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14556:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14550:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14632:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14634:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14589:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14612:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14627:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14605:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14605:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:45:10"
															},
															"nodeType": "YulIf",
															"src": "14583:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14650:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14665:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14671:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14654:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14687:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14701:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14691:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14738:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14740:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14734:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14723:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:14:10"
															},
															"nodeType": "YulIf",
															"src": "14720:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14829:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14831:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14770:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14775:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14766:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14766:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14784:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14799:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14805:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14805:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14795:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14795:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14824:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14791:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14791:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:69:10"
															},
															"nodeType": "YulIf",
															"src": "14756:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14867:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14881:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14889:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14877:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14877:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14898:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14847:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14913:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14920:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14297:3:10",
														"type": ""
													}
												],
												"src": "14258:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15108:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15125:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15118:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15214:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15269:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15280:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15285:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15258:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15258:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15258:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15317:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15329:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15317:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:10",
														"type": ""
													}
												],
												"src": "14934:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15591:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15576:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15569:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15569:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15630:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15615:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15635:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15608:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15608:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15506:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15520:4:10",
														"type": ""
													}
												],
												"src": "15355:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15995:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16005:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16015:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16009:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16125:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16165:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16138:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16138:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16203:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16208:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16246:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16231:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16252:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16224:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16265:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16314:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16273:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16265:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15932:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15943:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15951:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15959:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15967:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:10",
														"type": ""
													}
												],
												"src": "15764:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea2646970667358221220d79b19c0d9c7c5f28cf439f7aef13dd4b75a03c5d8ce4e266c2a31a88470497964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP12 NOT 0xC0 0xD9 0xC7 0xC5 CALLCODE DUP13 DELEGATECALL CODECOPY 0xF7 0xAE CALL RETURNDATASIZE 0xD4 0xB7 GAS SUB 0xC5 0xD8 0xCE 0x4E 0x26 PUSH13 0x2A31A88470497964736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "574:15164:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1262:310:2;1019:187:10;1983:105:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4178:442::-;;;;;;:::i;:::-;;:::i;:::-;;2636:524;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3233:155::-;;;;;;:::i;:::-;;:::i;3460:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;2239:231::-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;8258:2:10;2345:77:2;;;8240:21:10;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:10;;;8380:41;8438:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;;;2239:231::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;1381:183;1262:310;-1:-1:-1;;1262:310:2:o;1983:105::-;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;4178:442::-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;9055:2:10;4389:160:2;;;9037:21:10;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:10;;;9177:48;9242:19;;4389:160:2;8853:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;9474:2:10;2826:83:2;;;9456:21:10;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:10;;;9596:39;9652:19;;2826:83:2;9272:405:10;2826:83:2;2922:30;2969:8;:15;2955:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;3233:155::-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;10288:2:10;3886:151:2;;;10270:21:10;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:10;;;10410:39;10466:19;;3886:151:2;10086:405:10;3886:151:2;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;10698:2:10;6467:81:2;;;10680:21:10;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:10;;;10820:38;10875:19;;6467:81:2;10496:404:10;6467:81:2;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;12448:331::-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;12586:71;;;;-1:-1:-1;;;12586:71:2;;12527:2:10;12586:71:2;;;12509:21:10;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:10;;;12649:39;12705:19;;12586:71:2;12325:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;1159::10;;;12730::2;;1132:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;12909:25:10;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;12882:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;15136:2:10;15433:62:2;;;15118:21:10;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:10;;;15258:50;15325:19;;15433:62:2;14934:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:10;1829:15;-1:-1:-1;;1825:29:10;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:10:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:10;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:10:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:10;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:10;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:10;2672:724;-1:-1:-1;;;;;;2672:724:10:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:10;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:10:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:10;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:10;;5952:32;;-1:-1:-1;;5996:16:10;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:10;;6122:435;-1:-1:-1;;;;;6122:435:10:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:10;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:10;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:10;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:10;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:10:o;12988:827::-;-1:-1:-1;;;;;13385:15:10;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:10:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:10;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:10;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:10;;14258:671;-1:-1:-1;;;;;14258:671:10:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:10;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:10;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1010200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d79b19c0d9c7c5f28cf439f7aef13dd4b75a03c5d8ce4e266c2a31a88470497964736f6c634300080d0033",
									".code": [
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1564,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15148,
											"end": 15178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15248,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15187,
											"end": 15249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14934,
											"end": 15350,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13604,
											"end": 13606,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13582,
											"end": 13632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13758,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13715,
											"end": 13734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13708,
											"end": 13759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13768,
											"end": 13809,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13921,
											"end": 13928,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13940,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 13945,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 13960,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 14133,
											"end": 14149,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14153,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14236,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14321,
											"end": 14337,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14318,
											"end": 14344,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14446,
											"end": 14462,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14468,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14521,
											"end": 14537,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14574,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14605,
											"end": 14630,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14603,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14631,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14711,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 14737,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14791,
											"end": 14827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14762,
											"end": 14789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 14828,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14898,
											"end": 14902,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14877,
											"end": 14896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15635,
											"end": 15669,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15608,
											"end": 15670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16160,
											"end": 16162,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16203,
											"end": 16205,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16319,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d2ff57a095795537a0961c6d3fa657592cf41e54b7fd9e26efea813b8e4ffa8a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2ff57a095795537a0961c6d3fa657592cf41e54b7fd9e26efea813b8e4ffa8a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 SELFDESTRUCT JUMPI LOG0 SWAP6 PUSH26 0x5537A0961C6D3FA657592CF41E54B7FD9E26EFEA813B8E4FFA8A PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:7937:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2ff57a095795537a0961c6d3fa657592cf41e54b7fd9e26efea813b8e4ffa8a64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 SELFDESTRUCT JUMPI LOG0 SWAP6 PUSH26 0x5537A0961C6D3FA657592CF41E54B7FD9E26EFEA813B8E4FFA8A PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2ff57a095795537a0961c6d3fa657592cf41e54b7fd9e26efea813b8e4ffa8a64736f6c634300080d0033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> nft/ERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "nft/ERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/ERC1155.sol": {
				"ast": {
					"absolutePath": "nft/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"BeeItems": [
							247
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						],
						"Ownable": [
							352
						]
					},
					"id": 248,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1449,
							"src": "31:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 353,
							"src": "108:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1448,
										"src": "206:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "216:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:0"
								}
							],
							"canonicalName": "BeeItems",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								352,
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "BeeItems",
							"nameLocation": "193:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7824407f",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "247:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 247,
									"src": "232:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "334:8:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "291:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 11,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1448,
												"src": "283:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "283:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 247,
									"src": "269:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "414:397:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "442:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "425:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 25,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 26,
															"nodeType": "ArrayTypeName",
															"src": "425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"id": 31,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "462:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "448:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 28,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 29,
															"nodeType": "ArrayTypeName",
															"src": "452:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:47:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "500:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "483:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 36,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ArrayTypeName",
															"src": "483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"id": 42,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 39,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 40,
															"nodeType": "ArrayTypeName",
															"src": "514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "483:51:0"
											},
											{
												"body": {
													"id": 74,
													"nodeType": "Block",
													"src": "611:94:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 58,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 62,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 59,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 60,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "634:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "630:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "626:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 63,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "626:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "626:24:0"
														},
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 66,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 70,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 67,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 68,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "677:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "673:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "665:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "665:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "665:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "575:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 51,
																	"name": "tokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "592:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "580:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "579:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"initializationExpression": {
													"assignments": [
														46
													],
													"declarations": [
														{
															"constant": false,
															"id": 46,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "558:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 75,
															"src": "550:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 45,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 48,
													"initialValue": {
														"id": 47,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "550:23:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "606:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "606:3:0"
												},
												"nodeType": "ForStatement",
												"src": "545:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "738:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 80,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 76,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "715:40:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "780:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 86,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "794:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "780:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "766:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "766:37:0"
											}
										]
									},
									"functionSelector": "71ac14e6",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:0"
										}
									],
									"name": "mintBatchWithNumber",
									"nameLocation": "359:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "387:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "379:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:19:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 247,
									"src": "350:461:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "900:340:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "928:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "911:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 103,
															"nodeType": "ArrayTypeName",
															"src": "911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"id": 108,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "948:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "934:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ArrayTypeName",
															"src": "938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:47:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "986:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "969:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 113,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ArrayTypeName",
															"src": "969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [
														{
															"id": 119,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "996:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ArrayTypeName",
															"src": "1000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:51:0"
											},
											{
												"body": {
													"id": 151,
													"nodeType": "Block",
													"src": "1085:82:0",
													"statements": [
														{
															"expression": {
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 135,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1100:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 139,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 136,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1104:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 137,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1108:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1104:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1100:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 140,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1100:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "1100:18:0"
														},
														{
															"expression": {
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 143,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 147,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1141:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 145,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1145:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1141:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1133:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1133:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1133:22:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 127,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1060:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 128,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1060:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"initializationExpression": {
													"assignments": [
														123
													],
													"declarations": [
														{
															"constant": false,
															"id": 123,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1044:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 152,
															"src": "1036:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 122,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1036:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 125,
													"initialValue": {
														"id": 124,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1048:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1036:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1080:3:0",
														"subExpression": {
															"id": 132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 134,
													"nodeType": "ExpressionStatement",
													"src": "1080:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1031:136:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1199:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1199:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 158,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 153,
														"name": "safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1177:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1177:55:0"
											}
										]
									},
									"functionSelector": "9416308e",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithNumber",
									"nameLocation": "828:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "855:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "870:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:46:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:0"
									},
									"scope": 247,
									"src": "819:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1304:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 170,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1315:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1295:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:9:0"
										}
									],
									"name": "setURI",
									"nameLocation": "1259:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "1280:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 247,
									"src": "1250:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1484:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 193,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 190,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1495:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1495:34:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1554:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 199,
																"name": "ids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1568:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1554:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1540:38:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1469:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1469:9:0"
										}
									],
									"name": "mintBatch",
									"nameLocation": "1355:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1373:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1394:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1377:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 178,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ArrayTypeName",
													"src": "1377:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1399:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:79:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:0"
									},
									"scope": 247,
									"src": "1346:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1650:37:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"name": "tokenSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "1668:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "1661:18:0"
											}
										]
									},
									"functionSelector": "ad974f4c",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenSupply",
									"nameLocation": "1603:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:9:0"
									},
									"scope": 247,
									"src": "1594:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1788:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 224,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "1834:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1834:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1823:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 229,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1876:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1876:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 227,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1850:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1850:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1823:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1801:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1986:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1971:25:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": true,
													"src": "2007:13:0",
													"subExpression": {
														"id": 242,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2007:13:0"
											}
										]
									},
									"functionSelector": "092f2dbf",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brun",
									"nameLocation": "1704:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1727:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:72:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:0:0"
									},
									"scope": 247,
									"src": "1695:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "184:1847:0",
							"usedErrors": []
						}
					],
					"src": "2:2029:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1945
						],
						"Ownable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 1946,
							"src": "117:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "687:7:1"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "151:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								1945
							],
							"name": "Ownable",
							"nameLocation": "676:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "718:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "702:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 261,
									"name": "OwnershipTransferred",
									"nameLocation": "739:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "776:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "760:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "807:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "791:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:57:1"
									},
									"src": "733:84:1"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "938:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "968:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 265,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "949:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "949:32:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "825:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:0:1"
									},
									"scope": 352,
									"src": "924:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1125:32:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "1143:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "1136:13:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "997:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1079:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:9:1"
									},
									"scope": 352,
									"src": "1070:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1271:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1290:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1301:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1290:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:1"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "1361:1:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1165:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 294,
									"name": "onlyOwner",
									"nameLocation": "1259:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:1"
									},
									"src": "1250:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1775:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1786:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1786:30:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1378:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1765:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1765:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1730:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:0:1"
									},
									"scope": 352,
									"src": "1721:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2049:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2068:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2080:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2080:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2068:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2060:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2163:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2144:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2144:28:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1832:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "2039:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2039:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2014:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2006:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:18:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:1"
									},
									"scope": 352,
									"src": "1979:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2403:128:1",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2422:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "2414:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2414:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"id": 339,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2414:25:1"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2450:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2459:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2450:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2450:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 346,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2504:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 345,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2483:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "2478:45:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2188:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2349:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2376:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2368:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:18:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:1"
									},
									"scope": 352,
									"src": "2340:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 353,
							"src": "658:1876:1",
							"usedErrors": []
						}
					],
					"src": "90:2446:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1571,
							"src": "124:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1612,
							"src": "150:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1627,
							"src": "184:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1924,
							"src": "232:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1946,
							"src": "267:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1970,
							"src": "302:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "594:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "594:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1969,
										"src": "603:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "603:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "611:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "611:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "621:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "621:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "352:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "ERC1155",
							"nameLocation": "583:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "654:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "648:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "788:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "732:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "732:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 376,
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "751:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "910:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "857:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "857:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 382,
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "876:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "895:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1067:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "1052:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 385,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1052:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1158:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1177:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1169:13:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1080:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1152:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1138:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:20:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:2"
									},
									"scope": 1448,
									"src": "1126:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1968,
										1980
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1370:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1401:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "1421:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1416:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1416:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1570",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1416:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1401:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1459:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1479:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1474:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1474:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1626",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1474:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1459:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1401:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1552:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1528:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1448_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1968,
															"src": "1528:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1528:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1401:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1381:183:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1198:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1271:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1969,
												"src": "1338:6:2"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1981,
												"src": "1346:7:2"
											}
										],
										"src": "1329:25:2"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1296:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1289:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:2"
									},
									"scope": 1448,
									"src": "1262:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1625
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2058:30:2",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2076:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2069:11:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1580:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1992:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2025:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1996:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:9:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:15:2"
									},
									"scope": 1448,
									"src": "1983:105:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1508
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2334:136:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2353:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2372:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2364:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2353:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2376:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2345:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2440:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 463,
														"indexExpression": {
															"id": 462,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2440:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2440:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 466,
												"nodeType": "Return",
												"src": "2433:29:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2096:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2248:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2307:8:2"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2283:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2275:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:29:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:9:2"
									},
									"scope": 1448,
									"src": "2239:231:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2815:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 483,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "2834:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2834:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2853:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2853:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2834:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2865:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2826:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2826:83:2"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2939:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2922:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2922:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2969:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2969:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2955:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2959:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"nodeType": "ArrayTypeName",
															"src": "2959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2922:63:2"
											},
											{
												"body": {
													"id": 527,
													"nodeType": "Block",
													"src": "3044:76:2",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3059:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "3073:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3059:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 518,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 472,
																				"src": "3088:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 520,
																			"indexExpression": {
																				"id": 519,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3097:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3088:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 521,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "3101:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3105:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3101:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 517,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3078:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3078:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "3059:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3018:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3022:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3022:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3018:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3011:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 528,
															"src": "3003:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3003:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3015:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3003:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3039:3:2",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3041:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "3039:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2998:122:2"
											},
											{
												"expression": {
													"id": 529,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3139:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 530,
												"nodeType": "Return",
												"src": "3132:20:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2478:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2645:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2765:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2677:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2660:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 471,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2704:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2687:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2687:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "2687:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:49:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2792:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2792:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "2792:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:18:2"
									},
									"scope": 1448,
									"src": "2636:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1529
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3317:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "3347:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3347:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3328:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3328:52:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3168:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3242:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3308:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3268:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3260:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3283:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:0:2"
									},
									"scope": 1448,
									"src": "3233:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3565:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 560,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3583:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3583:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 564,
													"indexExpression": {
														"id": 563,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3611:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3583:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "3576:44:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3396:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3469:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3541:8:2"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3494:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3486:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3511:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3503:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3485:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3559:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3559:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:6:2"
									},
									"scope": 1448,
									"src": "3460:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1553
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3875:226:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3908:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 584,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "3916:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3916:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3908:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "3949:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 589,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "3955:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3955:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3932:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3932:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3908:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3983:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3886:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3886:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3886:151:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4066:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4072:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4076:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4080:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4088:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "4048:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4048:45:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3636:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3709:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3866:8:2"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3744:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3736:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3767:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3759:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3801:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3839:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3826:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3826:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:125:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 1448,
									"src": "3700:401:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4378:242:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4411:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 624,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "4419:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4419:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4411:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4452:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 629,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "4458:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4458:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "4435:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4435:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4411:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4486:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4389:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4389:160:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4389:160:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4583:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4589:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4593:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4607:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4560:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4560:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4560:52:2"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4109:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4187:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4369:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4219:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4250:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4242:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4280:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4263:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "4263:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4311:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4294:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ArrayTypeName",
													"src": "4294:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4342:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4329:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4329:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:145:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4378:0:2"
									},
									"scope": 1448,
									"src": "4178:442:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5253:651:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5272:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5286:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5278:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5278:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5278:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5272:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5264:66:2"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5351:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5343:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5343:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5362:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5343:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5408:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5418:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5424:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 679,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5446:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 678,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5428:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5428:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 682,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5469:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5451:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5451:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5478:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 674,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5387:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5387:96:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5504:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5496:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5496:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 689,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5518:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 691,
														"indexExpression": {
															"id": 690,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5528:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5518:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 693,
													"indexExpression": {
														"id": 692,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5532:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5518:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5496:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "5556:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5571:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5556:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5579:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5548:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5548:76:2"
											},
											{
												"id": 712,
												"nodeType": "UncheckedBlock",
												"src": "5635:79:2",
												"statements": [
													{
														"expression": {
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 702,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5660:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 705,
																	"indexExpression": {
																		"id": 703,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5670:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5660:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"id": 704,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5674:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5660:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5682:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5696:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5682:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5660:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "5660:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5724:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5734:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5724:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5738:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5724:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 718,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "5745:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5724:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "5724:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5784:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5794:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5800:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5804:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5808:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "5769:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "5764:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5869:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5875:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5883:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 735,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5891:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 729,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "5828:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5828:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "5828:68:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4628:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5093:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5129:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5121:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5152:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5144:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5173:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5165:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5194:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5186:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:125:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:2"
									},
									"scope": 1448,
									"src": "5084:820:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "6456:880:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 756,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6475:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6475:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 758,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6489:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6489:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6475:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6505:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6467:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "6567:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6581:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6573:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6573:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6573:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6567:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6585:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "6559:66:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6646:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "6638:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6638:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "6657:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6638:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6703:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6719:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6723:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 784,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6728:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6737:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 779,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "6682:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6682:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "6682:60:2"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "6796:380:2",
													"statements": [
														{
															"assignments": [
																800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 800,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6819:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6811:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6811:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 804,
															"initialValue": {
																"baseExpression": {
																	"id": 801,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6824:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"id": 802,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6828:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6824:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6811:19:2"
														},
														{
															"assignments": [
																806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6853:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6845:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6845:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"baseExpression": {
																	"id": 807,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6862:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6862:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6845:27:2"
														},
														{
															"assignments": [
																812
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6897:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6889:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6889:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 818,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 813,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "6911:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"id": 814,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6921:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6911:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"id": 816,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6925:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6911:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6889:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 820,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "6953:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 821,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6968:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6953:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6976:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 819,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6945:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6945:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6945:76:2"
														},
														{
															"id": 836,
															"nodeType": "UncheckedBlock",
															"src": "7036:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 826,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "7065:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 829,
																				"indexExpression": {
																					"id": 827,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "7075:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7065:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 830,
																			"indexExpression": {
																				"id": 828,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "7079:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7065:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 831,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "7087:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 832,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7101:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7087:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7065:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 835,
																	"nodeType": "ExpressionStatement",
																	"src": "7065:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 837,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "7137:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 840,
																		"indexExpression": {
																			"id": 838,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "7147:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7137:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 839,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "7151:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7137:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "7158:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7137:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "7137:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "6775:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6779:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6779:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6775:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														789
													],
													"declarations": [
														{
															"constant": false,
															"id": 789,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6768:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "6760:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6760:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 791,
													"initialValue": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6772:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6760:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6791:3:2",
														"subExpression": {
															"id": 796,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6793:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ExpressionStatement",
													"src": "6791:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6755:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7207:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7217:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7223:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7227:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "7193:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "7188:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7289:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7299:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7305:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7309:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7314:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "7323:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7253:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7253:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "7253:75:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "5912:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6271:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6312:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6304:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6335:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6327:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6365:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6348:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6348:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "6348:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6396:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6379:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6379:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "6379:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6427:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6414:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6414:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:145:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6456:0:2"
									},
									"scope": 1448,
									"src": "6262:1074:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "8236:32:2",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "8247:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "8254:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8247:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8247:13:2"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "7344:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8189:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8211:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "8197:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8196:22:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8236:0:2"
									},
									"scope": 1448,
									"src": "8180:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "8788:435:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8807:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8821:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8813:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8813:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8813:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8807:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8825:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8799:62:2"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8882:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8874:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8874:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "8893:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8893:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8874:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8939:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8961:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8983:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8965:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8965:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "9006:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8988:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8988:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9015:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "8918:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "8918:102:2"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9033:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "9043:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9033:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9047:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9033:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9054:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9033:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "9033:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9091:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9109:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9101:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9101:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9101:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9113:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "9076:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "EmitStatement",
												"src": "9071:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9172:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9190:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9182:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9182:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9182:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9194:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9198:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9210:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "9141:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9141:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "9141:74:2"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "8276:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8663:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8687:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8679:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8708:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8700:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8729:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8721:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8759:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8746:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8746:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8668:102:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8788:0:2"
									},
									"scope": 1448,
									"src": "8654:569:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "9738:576:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "9757:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9771:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9763:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9763:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9763:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9757:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9775:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9749:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "9749:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "9830:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9830:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 978,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "9844:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9844:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9830:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9860:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9822:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9822:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "9822:81:2"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9924:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "9916:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9916:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "9935:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9935:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9916:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9981:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9999:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9991:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9991:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9991:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10007:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 997,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10021:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 989,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "9960:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9960:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "9960:66:2"
											},
											{
												"body": {
													"id": 1024,
													"nodeType": "Block",
													"src": "10080:62:2",
													"statements": [
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1012,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "10095:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1017,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1013,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "10105:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1015,
																			"indexExpression": {
																				"id": 1014,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "10109:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10105:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10095:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1018,
																	"indexExpression": {
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "10113:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10095:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1019,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "10120:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"id": 1020,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "10128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10120:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10095:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "10095:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "10059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1006,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10063:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10063:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10059:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"initializationExpression": {
													"assignments": [
														1002
													],
													"declarations": [
														{
															"constant": false,
															"id": 1002,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10052:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1025,
															"src": "10044:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10044:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1004,
													"initialValue": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10056:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10044:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10075:3:2",
														"subExpression": {
															"id": 1009,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "10075:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1011,
													"nodeType": "ExpressionStatement",
													"src": "10075:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10039:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10173:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10191:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10183:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10183:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10195:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10199:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1034,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1026,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "10159:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10159:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "EmitStatement",
												"src": "10154:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10261:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10283:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10287:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1045,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "10225:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "10225:81:2"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "9231:342:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9588:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9617:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9609:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9647:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9630:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 955,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9630:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"nodeType": "ArrayTypeName",
													"src": "9630:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9661:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 958,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 959,
													"nodeType": "ArrayTypeName",
													"src": "9661:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9709:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9696:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9696:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9598:122:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:2"
									},
									"scope": 1448,
									"src": "9579:735:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10672:540:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "10691:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10707:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10699:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10699:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10691:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10711:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10683:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10683:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "10683:66:2"
											},
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10770:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10762:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "10781:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10781:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10827:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "10837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10851:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10843:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10843:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10843:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "10873:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10855:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10855:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10896:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1085,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10878:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10878:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10905:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1075,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "10806:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10806:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "10806:102:2"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10929:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10921:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1093,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "10943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "10953:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10943:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "10957:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10943:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10921:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "10981:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1101,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "10996:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10981:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11004:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10973:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10973:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "10973:70:2"
											},
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "11054:79:2",
												"statements": [
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "11079:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"id": 1107,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "11089:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11079:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1108,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "11093:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11079:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1111,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "11101:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1112,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "11115:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11101:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11079:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "11079:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "11165:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "11175:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11189:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11181:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11181:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11181:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "11193:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11197:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "11150:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11150:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "11145:59:2"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "10322:236:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10573:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10597:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10589:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10620:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10612:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10641:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10633:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10578:76:2"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10672:0:2"
									},
									"scope": 1448,
									"src": "10564:648:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "11548:758:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11567:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11583:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11575:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11575:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11575:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11567:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11587:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "11559:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1152,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11644:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11644:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1154,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11658:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11658:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11644:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11674:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11636:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11636:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "11636:81:2"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11738:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "11730:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11730:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1162,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "11749:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11749:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11730:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11795:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "11805:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11819:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11811:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11811:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11811:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11823:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1173,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11837:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1165,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "11774:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11774:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "11774:66:2"
											},
											{
												"body": {
													"id": 1226,
													"nodeType": "Block",
													"src": "11894:332:2",
													"statements": [
														{
															"assignments": [
																1189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1189,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11917:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11909:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11909:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1193,
															"initialValue": {
																"baseExpression": {
																	"id": 1190,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11922:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1192,
																"indexExpression": {
																	"id": 1191,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11926:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11909:19:2"
														},
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11951:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11943:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11943:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"baseExpression": {
																	"id": 1196,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11960:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1198,
																"indexExpression": {
																	"id": 1197,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11968:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11960:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11943:27:2"
														},
														{
															"assignments": [
																1201
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1201,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11995:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11987:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1200,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11987:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1207,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1202,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "12009:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"id": 1203,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "12019:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12009:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1206,
																"indexExpression": {
																	"id": 1205,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "12023:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12009:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11987:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "12051:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1210,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "12066:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12051:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12074:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1208,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12043:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12043:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1214,
															"nodeType": "ExpressionStatement",
															"src": "12043:70:2"
														},
														{
															"id": 1225,
															"nodeType": "UncheckedBlock",
															"src": "12128:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1215,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "12157:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1218,
																				"indexExpression": {
																					"id": 1216,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "12167:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12157:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1219,
																			"indexExpression": {
																				"id": 1217,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "12171:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12157:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "12179:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1221,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "12193:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12179:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12157:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "12157:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11873:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1182,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11877:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11877:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11873:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"initializationExpression": {
													"assignments": [
														1178
													],
													"declarations": [
														{
															"constant": false,
															"id": 1178,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11866:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1227,
															"src": "11858:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11858:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1180,
													"initialValue": {
														"hexValue": "30",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11870:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11858:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11889:3:2",
														"subExpression": {
															"id": 1185,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11889:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"nodeType": "ExpressionStatement",
													"src": "11889:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11853:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "12257:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "12267:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12273:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12273:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12273:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "12285:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1236,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "12290:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1228,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "12243:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12243:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "12238:60:2"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "11220:189:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11424:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11445:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11485:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11468:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1133,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1134,
													"nodeType": "ArrayTypeName",
													"src": "11468:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11516:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11499:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "11499:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11434:96:2"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11548:0:2"
									},
									"scope": 1448,
									"src": "11415:891:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "12575:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12594:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1252,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "12603:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12594:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12613:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12586:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "12586:71:2"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1257,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "12668:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1260,
															"indexExpression": {
																"id": 1258,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12687:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12668:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1259,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12694:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12668:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1262,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "12706:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12668:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "12668:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "12745:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12752:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12762:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1265,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12730:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12730:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "12725:46:2"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "12314:128:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12457:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12494:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12486:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12518:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12510:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12542:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12475:82:2"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12575:0:2"
									},
									"scope": 1448,
									"src": "12448:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "13954:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "12787:942:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13744:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13802:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13833:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13825:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13863:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13846:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "13846:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13877:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13877:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1284,
													"nodeType": "ArrayTypeName",
													"src": "13877:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13912:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13764:172:2"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13954:0:2"
									},
									"scope": 1448,
									"src": "13735:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "14164:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "14179:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14179:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14179:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "14175:526:2",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "14196:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1333,
																		"nodeType": "Block",
																		"src": "14314:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1322,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "14337:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1323,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "14349:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1592,
																							"src": "14349:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14349:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14337:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1332,
																				"nodeType": "IfStatement",
																				"src": "14333:154:2",
																				"trueBody": {
																					"id": 1331,
																					"nodeType": "Block",
																					"src": "14394:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1328,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14424:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1327,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14417:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1329,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14417:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1330,
																							"nodeType": "ExpressionStatement",
																							"src": "14417:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1334,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1321,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1320,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1334,
																				"src": "14297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1319,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14296:17:2"
																	},
																	"src": "14288:214:2"
																},
																{
																	"block": {
																		"id": 1342,
																		"nodeType": "Block",
																		"src": "14537:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1339,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "14563:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1338,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14556:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14556:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1341,
																				"nodeType": "ExpressionStatement",
																				"src": "14556:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1343,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1337,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1336,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14529:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1343,
																				"src": "14515:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1335,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14515:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14514:22:2"
																	},
																	"src": "14503:83:2"
																},
																{
																	"block": {
																		"id": 1348,
																		"nodeType": "Block",
																		"src": "14593:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14619:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1344,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14612:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14612:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1347,
																				"nodeType": "ExpressionStatement",
																				"src": "14612:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1349,
																	"nodeType": "TryCatchClause",
																	"src": "14587:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "14254:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "14264:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "14270:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "14274:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "14282:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "14232:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1309,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14215:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14215:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1592,
																	"src": "14215:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14215:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1350,
															"nodeType": "TryStatement",
															"src": "14211:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13973:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14022:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14014:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14014:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14049:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14041:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14072:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14064:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "14093:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14085:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14114:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14106:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14106:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14144:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14131:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14131:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14003:152:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14164:0:2"
									},
									"scope": 1448,
									"src": "13964:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "14941:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "14956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14956:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14956:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "IfStatement",
												"src": "14952:570:2",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "14973:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1398,
																		"nodeType": "Block",
																		"src": "15130:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1387,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "15153:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1388,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "15165:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1610,
																							"src": "15165:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15165:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15153:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1397,
																				"nodeType": "IfStatement",
																				"src": "15149:159:2",
																				"trueBody": {
																					"id": 1396,
																					"nodeType": "Block",
																					"src": "15215:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1393,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15245:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1392,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15238:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1394,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15238:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1395,
																							"nodeType": "ExpressionStatement",
																							"src": "15238:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1399,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1386,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1385,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15106:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1399,
																				"src": "15099:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1384,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15099:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15080:49:2"
																	},
																	"src": "15072:251:2"
																},
																{
																	"block": {
																		"id": 1407,
																		"nodeType": "Block",
																		"src": "15358:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1404,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1401,
																							"src": "15384:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1403,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15377:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15377:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1406,
																				"nodeType": "ExpressionStatement",
																				"src": "15377:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1408,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1402,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15350:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1408,
																				"src": "15336:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15336:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15335:22:2"
																	},
																	"src": "15324:83:2"
																},
																{
																	"block": {
																		"id": 1413,
																		"nodeType": "Block",
																		"src": "15414:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1410,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15440:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1409,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15433:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15433:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1412,
																				"nodeType": "ExpressionStatement",
																				"src": "15433:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1414,
																	"nodeType": "TryCatchClause",
																	"src": "15408:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1378,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "15036:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "15046:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "15052:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1381,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "15057:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "15066:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1375,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "15009:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1374,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14992:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14992:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "14992:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14992:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1415,
															"nodeType": "TryStatement",
															"src": "14988:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14725:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14779:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14771:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14829:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14821:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14859:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14842:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1361,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14842:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1362,
													"nodeType": "ArrayTypeName",
													"src": "14842:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14873:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1364,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1365,
													"nodeType": "ArrayTypeName",
													"src": "14873:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14921:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14908:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14908:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14760:172:2"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14941:0:2"
									},
									"scope": 1448,
									"src": "14716:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "15621:114:2",
										"statements": [
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15649:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "15632:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1430,
															"nodeType": "ArrayTypeName",
															"src": "15632:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15671:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15657:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15661:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "15661:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15657:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15632:41:2"
											},
											{
												"expression": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1438,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "15684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1440,
														"indexExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15690:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15684:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1441,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "15695:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15684:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "15684:18:2"
											},
											{
												"expression": {
													"id": 1444,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1431,
													"src": "15722:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1445,
												"nodeType": "Return",
												"src": "15715:12:2"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15546:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15563:17:2"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15603:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15603:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ArrayTypeName",
													"src": "15603:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15602:18:2"
									},
									"scope": 1448,
									"src": "15537:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1449,
							"src": "574:15164:2",
							"usedErrors": []
						}
					],
					"src": "97:15643:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC165": [
							1981
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 1982,
							"src": "125:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1453,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "370:7:3"
									},
									"id": 1454,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1452,
								"nodeType": "StructuredDocumentation",
								"src": "176:170:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1570,
							"linearizedBaseContracts": [
								1570,
								1981
							],
							"name": "IERC1155",
							"nameLocation": "358:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "385:123:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1467,
									"name": "TransferSingle",
									"nameLocation": "520:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "551:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "535:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "611:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "603:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "623:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "615:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:95:3"
									},
									"src": "514:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "638:147:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1482,
									"name": "TransferBatch",
									"nameLocation": "797:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "837:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "821:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "872:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "856:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "887:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "916:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1475,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1476,
													"nodeType": "ArrayTypeName",
													"src": "916:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "950:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "940:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1479,
													"nodeType": "ArrayTypeName",
													"src": "940:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:153:3"
									},
									"src": "791:173:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "972:150:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1491,
									"name": "ApprovalForAll",
									"nameLocation": "1134:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1165:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1149:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1190:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1174:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1205:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1200:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1200:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:66:3"
									},
									"src": "1128:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1223:349:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1498,
									"name": "URI",
									"nameLocation": "1584:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1588:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1618:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1602:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:34:3"
									},
									"src": "1578:44:3"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1630:179:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1824:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1842:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1834:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1859:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1851:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:29:3"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1886:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:9:3"
									},
									"scope": 1570,
									"src": "1815:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1903:194:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2112:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2146:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2127:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2127:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1511,
													"nodeType": "ArrayTypeName",
													"src": "2127:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2175:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2156:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:53:3"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2230:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2230:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2230:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:18:3"
									},
									"scope": 1570,
									"src": "2103:145:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2256:256:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2527:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2545:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2563:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:33:3"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:3"
									},
									"scope": 1570,
									"src": "2518:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2595:139:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2774:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2766:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2791:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2783:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:35:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2824:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:6:3"
									},
									"scope": 1570,
									"src": "2740:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2838:571:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3424:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3459:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3451:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3474:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3503:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3495:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3524:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3516:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3556:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3541:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:127:3"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:3"
									},
									"scope": 1570,
									"src": "3415:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "3585:400:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4000:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4063:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4055:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4095:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4076:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4076:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1560,
													"nodeType": "ArrayTypeName",
													"src": "4076:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4128:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4109:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "4109:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4161:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4146:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:151:3"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:3"
									},
									"scope": 1570,
									"src": "3991:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1571,
							"src": "348:3837:3",
							"usedErrors": []
						}
					],
					"src": "98:4089:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 1982,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "257:7:4"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "184:41:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1981
							],
							"name": "IERC1155Receiver",
							"nameLocation": "237:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "272:828:4",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1115:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1178:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1170:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1201:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1193:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1222:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1214:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1253:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1238:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1238:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:132:4"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1283:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:8:4"
									},
									"scope": 1611,
									"src": "1106:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1299:989:4",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2303:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2344:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2336:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2371:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2363:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2405:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2386:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2386:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2438:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2419:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2419:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ArrayTypeName",
													"src": "2419:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2470:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2455:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2455:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:156:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2500:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2500:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:8:4"
									},
									"scope": 1611,
									"src": "2294:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1612,
							"src": "227:2284:4",
							"usedErrors": []
						}
					],
					"src": "106:2407:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC165": [
							1981
						]
					},
					"id": 1627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1627,
							"sourceUnit": 1571,
							"src": "147:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1616,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "410:8:5"
									},
									"id": 1617,
									"nodeType": "InheritanceSpecifier",
									"src": "410:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1615,
								"nodeType": "StructuredDocumentation",
								"src": "176:199:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1626,
							"linearizedBaseContracts": [
								1626,
								1570,
								1981
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "387:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "426:197:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "638:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "650:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "642:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:12:5"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "677:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:15:5"
									},
									"scope": 1626,
									"src": "629:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1627,
							"src": "377:318:5",
							"usedErrors": []
						}
					],
					"src": "120:577:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1923
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923
							],
							"name": "Address",
							"nameLocation": "195:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "863:321:6",
										"statements": [
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1065:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:6",
														"valueSize": 1
													}
												],
												"id": 1640,
												"nodeType": "InlineAssembly",
												"src": "1088:63:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1168:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1644,
												"nodeType": "Return",
												"src": "1161:15:6"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "817:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "857:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:6"
									},
									"scope": 1923,
									"src": "797:387:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "2190:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1657,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1655,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2234:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:6"
											},
											{
												"assignments": [
													1666,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "2288:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1667,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "2306:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2328:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "2358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:6"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2138:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2165:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:6"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:6"
									},
									"scope": 1923,
									"src": "2119:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3287:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "3318:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3326:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1690,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1697,
															1717
														],
														"referencedDeclaration": 1717,
														"src": "3305:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1695,
												"nodeType": "Return",
												"src": "3298:67:6"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3220:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3273:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:6"
									},
									"scope": 1923,
									"src": "3198:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3754:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3794:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3802:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "3811:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "3772:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1715,
												"nodeType": "Return",
												"src": "3765:59:6"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3635:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3660:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3688:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3740:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:6"
									},
									"scope": 1923,
									"src": "3603:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4354:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4394:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "4402:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4408:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "4372:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1735,
												"nodeType": "Return",
												"src": "4365:94:6"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4248:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4273:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4301:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4340:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:6"
									},
									"scope": 1923,
									"src": "4207:260:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "4907:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4951:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1764,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "5029:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1763,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5018:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:6"
											},
											{
												"assignments": [
													1770,
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5084:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5098:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "5151:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1773,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5125:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "5144:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5191:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1782,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5200:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1783,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5212:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1780,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5174:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1785,
												"nodeType": "Return",
												"src": "5167:58:6"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4789:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4817:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4841:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4893:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:6"
									},
									"scope": 1923,
									"src": "4723:510:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "5518:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "5555:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5563:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1797,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1804,
															1839
														],
														"referencedDeclaration": 1839,
														"src": "5536:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "5529:80:6"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5446:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5462:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5504:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:6"
									},
									"scope": 1923,
									"src": "5418:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "5971:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1818,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "6001:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5990:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:6"
											},
											{
												"assignments": [
													1824,
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6063:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6077:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1825,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"id": 1829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6104:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "6162:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1834,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "6171:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1835,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6183:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1832,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6145:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1837,
												"nodeType": "Return",
												"src": "6138:58:6"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5847:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5872:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5900:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5957:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:6"
									},
									"scope": 1923,
									"src": "5809:395:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "6488:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6527:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "6535:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1849,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1856,
															1891
														],
														"referencedDeclaration": 1891,
														"src": "6506:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1854,
												"nodeType": "Return",
												"src": "6499:84:6"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6421:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6437:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:6"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6474:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:6"
									},
									"scope": 1923,
									"src": "6391:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "6944:237:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1870,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "6974:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1869,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "6963:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:6"
											},
											{
												"assignments": [
													1876,
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7038:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1875,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7052:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"arguments": [
														{
															"id": 1881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "7099:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1879,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "7079:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "7139:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1886,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "7148:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1887,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "7160:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1884,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "7122:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1889,
												"nodeType": "Return",
												"src": "7115:58:6"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6825:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6850:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6878:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:6"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6930:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:6"
									},
									"scope": 1923,
									"src": "6785:396:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "7573:548:6",
										"statements": [
											{
												"condition": {
													"id": 1903,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1894,
													"src": "7588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "7647:467:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1907,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "7733:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1917,
																"nodeType": "Block",
																"src": "8048:55:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1914,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "8074:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1913,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1916,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:6"
																	}
																]
															},
															"id": 1918,
															"nodeType": "IfStatement",
															"src": "7729:374:6",
															"trueBody": {
																"id": 1912,
																"nodeType": "Block",
																"src": "7756:286:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1911,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "7584:530:6",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "7597:44:6",
													"statements": [
														{
															"expression": {
																"id": 1904,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "7619:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1902,
															"id": 1905,
															"nodeType": "Return",
															"src": "7612:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7445:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7468:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7502:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:6"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:6"
									},
									"scope": 1923,
									"src": "7409:712:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1924,
							"src": "187:7937:6",
							"usedErrors": []
						}
					],
					"src": "89:8037:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1945
						]
					},
					"id": 1946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1945,
							"linearizedBaseContracts": [
								1945
							],
							"name": "Context",
							"nameLocation": "641:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "718:36:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1931,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1933,
												"nodeType": "Return",
												"src": "729:17:7"
											}
										]
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1945,
									"src": "656:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "829:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1940,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1942,
												"nodeType": "Return",
												"src": "840:15:7"
											}
										]
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:7"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "813:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:7"
									},
									"scope": 1945,
									"src": "762:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1946,
							"src": "623:243:7",
							"usedErrors": []
						}
					],
					"src": "89:779:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1969
						],
						"IERC165": [
							1981
						]
					},
					"id": 1970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 1982,
							"src": "129:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1950,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "775:7:8"
									},
									"id": 1951,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1949,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969,
								1981
							],
							"name": "ERC165",
							"nameLocation": "765:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "945:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "963:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1962,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "983:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1961,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1981",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1966,
												"nodeType": "Return",
												"src": "956:47:8"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:8"
									},
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "881:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:8"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "939:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:8"
									},
									"scope": 1969,
									"src": "854:157:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1970,
							"src": "747:267:8",
							"usedErrors": []
						}
					],
					"src": "102:914:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1981
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1981,
							"linearizedBaseContracts": [
								1981
							],
							"name": "IERC165",
							"nameLocation": "429:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "824:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "867:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:9"
									},
									"scope": 1981,
									"src": "797:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1982,
							"src": "419:457:9",
							"usedErrors": []
						}
					],
					"src": "103:775:9"
				},
				"id": 9
			}
		}
	}
}
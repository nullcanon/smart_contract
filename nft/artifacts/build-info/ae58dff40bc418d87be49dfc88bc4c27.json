{
	"id": "ae58dff40bc418d87be49dfc88bc4c27",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/ERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\ncontract BeeItems is  ERC1155 , Ownable{\r\n\r\n    uint256 public tokenSupply;\r\n\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n    }\r\n\r\n    function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r\n            ids[i - tokenSupply] = i;\r\n            amounts[i - tokenSupply] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n        tokenSupply = tokenSupply + idsNumber;\r\n    }\r\n\r\n    function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i - start] = i;\r\n            amounts[i - start] = 1;\r\n        }\r\n        safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\");\r\n    }\r\n\r\n\r\n    function setURI(string memory newuri) public onlyOwner{\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n        tokenSupply = tokenSupply + ids.length;\r\n    }\r\n\r\n    function getTokenSupply() public view returns (uint256) {\r\n        return tokenSupply;\r\n    }\r\n\r\n    function brun(\r\n        address account,\r\n        uint256 id,\r\n        uint256 value) public {\r\n\r\n        require(\r\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        _burn(account, id, value);\r\n        --tokenSupply;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./extensions/IERC1155MetadataURI.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/Context.sol\";\r\nimport \"../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/ERC1155.sol": {
				"BeeItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "brun",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "mintBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"nft/ERC1155.sol\":269:342  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {\r... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:967  _transferOwnership */\n  tag_12\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  jump(tag_31)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {\r... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  dup1\n  mload\n  tag_16\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_12:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  swap2\n  and\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  dup3\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n  0x00\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {\r... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\ntag_17:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_23\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_26)\ntag_23:\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\n    /* \"#utility.yul\":14:394   */\ntag_21:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_33:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_34:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ac14e6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xad974f4c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x71ac14e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7824407f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9416308e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x0e89341c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x092f2dbf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":18065:18090   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":18053:18055   */\n      0x20\n        /* \"#utility.yul\":18038:18056   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":11572:11586   */\n      swap1\n      iszero\n        /* \"#utility.yul\":11565:11587   */\n      iszero\n        /* \"#utility.yul\":11547:11588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11535:11537   */\n      0x20\n        /* \"#utility.yul\":11520:11538   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      tag_28\n        /* \"#utility.yul\":11407:11594   */\n      jump\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n    tag_6:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n    tag_8:\n      tag_36\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n    tag_9:\n      tag_36\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_10:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_11:\n      tag_36\n      tag_65\n      jump\t// in\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n    tag_12:\n      tag_36\n      tag_67\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"nft/ERC1155.sol\":232:258  uint256 public tokenSupply */\n    tag_13:\n      tag_24\n      sload(0x04)\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {\r... */\n    tag_14:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      sload(0x03)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9213:9264   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9201:9203   */\n      0x20\n        /* \"#utility.yul\":9186:9204   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {\r... */\n      tag_28\n        /* \"#utility.yul\":9067:9270   */\n      jump\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r... */\n    tag_15:\n      tag_36\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_16:\n      tag_36\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {\r... */\n    tag_17:\n        /* \"nft/ERC1155.sol\":1668:1679  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {\r... */\n      jump(tag_24)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_18:\n      tag_30\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(\r... */\n    tag_19:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_20:\n      tag_36\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12855:12857   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12837:12858   */\n      mstore\n        /* \"#utility.yul\":12894:12896   */\n      0x2b\n        /* \"#utility.yul\":12874:12892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12867:12897   */\n      mstore\n        /* \"#utility.yul\":12933:12967   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":12913:12931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12906:12968   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":12984:13002   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12977:13018   */\n      mstore\n        /* \"#utility.yul\":13035:13054   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_33:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||\r... */\n      tag_105\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_107\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1381:1564  return\r... */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_113:\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      tag_117\n        /* \"nft/ERC1155.sol\":1323:1329  newuri */\n      dup2\n        /* \"nft/ERC1155.sol\":1315:1322  _setURI */\n      tag_118\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      jump\t// in\n    tag_117:\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      eq\n      dup1\n        /* \"nft/ERC1155.sol\":1823:1889  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_122\n      jumpi\n      pop\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n      tag_122\n        /* \"nft/ERC1155.sol\":1867:1874  account */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      tag_88\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n    tag_122:\n        /* \"nft/ERC1155.sol\":1801:1958  require(\r... */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      tag_127\n        /* \"nft/ERC1155.sol\":1977:1984  account */\n      dup4\n        /* \"nft/ERC1155.sol\":1986:1988  id */\n      dup4\n        /* \"nft/ERC1155.sol\":1990:1995  value */\n      dup4\n        /* \"nft/ERC1155.sol\":1971:1976  _burn */\n      tag_128\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      jump\t// in\n    tag_127:\n        /* \"nft/ERC1155.sol\":2009:2020  tokenSupply */\n      0x04\n      0x00\n        /* \"nft/ERC1155.sol\":2007:2020  --tokenSupply */\n      dup2\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n    tag_53:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_141:\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      tag_144\n        /* \"nft/ERC1155.sol\":1506:1508  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1510:1513  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1515:1522  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1524:1528  data */\n      dup5\n        /* \"nft/ERC1155.sol\":1495:1505  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"nft/ERC1155.sol\":1568:1571  ids */\n      dup3\n        /* \"nft/ERC1155.sol\":1568:1578  ids.length */\n      mload\n        /* \"nft/ERC1155.sol\":1554:1565  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1554:1578  tokenSupply + ids.length */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"nft/ERC1155.sol\":1540:1551  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":1540:1578  tokenSupply = tokenSupply + ids.length */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_151\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_151\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14895:14897   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14877:14898   */\n      mstore\n        /* \"#utility.yul\":14934:14936   */\n      0x32\n        /* \"#utility.yul\":14914:14932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14907:14937   */\n      mstore\n        /* \"#utility.yul\":14973:15007   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":14953:14971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14946:15008   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":15024:15042   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15017:15065   */\n      mstore\n        /* \"#utility.yul\":15082:15101   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      tag_102\n        /* \"#utility.yul\":14693:15107   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n    tag_153:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16900:16902   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16882:16903   */\n      mstore\n        /* \"#utility.yul\":16939:16941   */\n      0x29\n        /* \"#utility.yul\":16919:16937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16912:16942   */\n      mstore\n        /* \"#utility.yul\":16978:17012   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":16958:16976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16951:17013   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":17029:17047   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17022:17061   */\n      mstore\n        /* \"#utility.yul\":17078:17097   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_102\n        /* \"#utility.yul\":16698:17103   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_159:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n    tag_166:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      iszero\n      tag_167\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_169\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_174\n      tag_172\n      jump\t// in\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_27\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_169:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_172\n      jump\t// in\n    tag_176:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_177\n      dup2\n      tag_178\n      jump\t// in\n    tag_177:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      tag_185\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1813:1814  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1804  _transferOwnership */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_185:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"nft/ERC1155.sol\":425:445  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":462:471  idsNumber */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":448:472  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_194\n      tag_164\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_195\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_195:\n      pop\n        /* \"nft/ERC1155.sol\":425:472  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":483:507  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":524:533  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":510:534  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      tag_197\n      tag_164\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"nft/ERC1155.sol\":562:573  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":483:534  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      swap2\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n    tag_199:\n        /* \"nft/ERC1155.sol\":592:603  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_202\n      swap1\n        /* \"nft/ERC1155.sol\":580:589  idsNumber */\n      dup6\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"nft/ERC1155.sol\":575:576  i */\n      dup2\n        /* \"nft/ERC1155.sol\":575:604  i < (idsNumber + tokenSupply) */\n      lt\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n      iszero\n      tag_200\n      jumpi\n        /* \"nft/ERC1155.sol\":649:650  i */\n      dup1\n        /* \"nft/ERC1155.sol\":626:629  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":634:645  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":630:631  i */\n      dup4\n        /* \"nft/ERC1155.sol\":630:645  i - tokenSupply */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"nft/ERC1155.sol\":626:646  ids[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_172\n      jump\t// in\n    tag_206:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft/ERC1155.sol\":626:650  ids[i - tokenSupply] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":692:693  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":665:672  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":677:688  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":673:674  i */\n      dup4\n        /* \"nft/ERC1155.sol\":673:688  i - tokenSupply */\n      tag_207\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_207:\n        /* \"nft/ERC1155.sol\":665:689  amounts[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_209\n      jumpi\n      tag_209\n      tag_172\n      jump\t// in\n    tag_209:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":665:693  amounts[i - tokenSupply] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":606:609  i++ */\n      dup1\n      tag_210\n      dup2\n      tag_178\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n      jump(tag_199)\n    tag_200:\n      pop\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_211\n        /* \"nft/ERC1155.sol\":726:736  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":738:741  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":743:750  amounts */\n      dup4\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":715:725  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_211:\n        /* \"nft/ERC1155.sol\":794:803  idsNumber */\n      dup3\n        /* \"nft/ERC1155.sol\":780:791  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":780:803  tokenSupply + idsNumber */\n      tag_212\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"nft/ERC1155.sol\":766:777  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":766:803  tokenSupply = tokenSupply + idsNumber */\n      sstore\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r... */\n    tag_79:\n        /* \"nft/ERC1155.sol\":911:931  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":948:957  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":934:958  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_216\n      tag_164\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_217:\n      pop\n        /* \"nft/ERC1155.sol\":911:958  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":969:993  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":1010:1019  idsNumber */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":996:1020  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_164\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_220:\n      pop\n        /* \"nft/ERC1155.sol\":969:1020  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":1048:1053  start */\n      dup5\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n    tag_221:\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_224\n        /* \"nft/ERC1155.sol\":1072:1077  start */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1069  idsNumber */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_147\n      jump\t// in\n    tag_224:\n        /* \"nft/ERC1155.sol\":1055:1056  i */\n      dup2\n        /* \"nft/ERC1155.sol\":1055:1078  i < (idsNumber + start) */\n      lt\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n      iszero\n      tag_222\n      jumpi\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup1\n        /* \"nft/ERC1155.sol\":1100:1103  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_225\n        /* \"nft/ERC1155.sol\":1108:1113  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_204\n      jump\t// in\n    tag_225:\n        /* \"nft/ERC1155.sol\":1100:1114  ids[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_172\n      jump\t// in\n    tag_227:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1100:1118  ids[i - start] = i */\n      mstore\n        /* \"nft/ERC1155.sol\":1154:1155  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":1133:1140  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_228\n        /* \"nft/ERC1155.sol\":1145:1150  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1141:1142  i */\n      dup5\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_204\n      jump\t// in\n    tag_228:\n        /* \"nft/ERC1155.sol\":1133:1151  amounts[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_230\n      tag_172\n      jump\t// in\n    tag_230:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1133:1155  amounts[i - start] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":1080:1083  i++ */\n      dup1\n      tag_231\n      dup2\n      tag_178\n      jump\t// in\n    tag_231:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      tag_156\n        /* \"nft/ERC1155.sol\":1199:1209  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":1211:1213  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1215:1218  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1220:1227  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":1177:1198  safeBatchTransferFrom */\n      tag_57\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_83:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_234\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_236\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(\r... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_242\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_242\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_242:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(\r... */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_244:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_247\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2090  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13267:13269   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13249:13270   */\n      mstore\n        /* \"#utility.yul\":13306:13308   */\n      0x26\n        /* \"#utility.yul\":13286:13304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13279:13309   */\n      mstore\n        /* \"#utility.yul\":13345:13379   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13325:13343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13318:13380   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13396:13414   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13389:13425   */\n      mstore\n        /* \"#utility.yul\":13442:13461   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_102\n        /* \"#utility.yul\":13065:13467   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_254:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2163:2171  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2162  _transferOwnership */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {\r... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      dup1\n      mload\n      tag_234\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n      0x02\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_262\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(\r... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10691:10709  from != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15314:15316   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15296:15317   */\n      mstore\n        /* \"#utility.yul\":15353:15355   */\n      0x23\n        /* \"#utility.yul\":15333:15351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15326:15356   */\n      mstore\n        /* \"#utility.yul\":15392:15426   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":15372:15390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15365:15427   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":15443:15461   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15436:15469   */\n      mstore\n        /* \"#utility.yul\":15486:15505   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":15112:15511   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n    tag_264:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_268\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10841  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10762:10778  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      tag_269\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10873:10875  id */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10872  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      jump\t// in\n    tag_269:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      tag_271\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10896:10902  amount */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10895  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      jump\t// in\n    tag_271:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      swap1\n      mstore\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(\r... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10921:10940  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10956  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10962  _balances[id][from] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10981:11002  fromBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13656:13677   */\n      mstore\n        /* \"#utility.yul\":13713:13715   */\n      0x24\n        /* \"#utility.yul\":13693:13711   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13686:13716   */\n      mstore\n        /* \"#utility.yul\":13752:13786   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":13732:13750   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13725:13787   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":13803:13821   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13796:13830   */\n      mstore\n        /* \"#utility.yul\":13847:13866   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":13472:13872   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n    tag_273:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11088  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11092  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      dup10\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11101:11121  fromBalance - amount */\n      dup9\n      dup8\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11121  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":18275:18300   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":18316:18334   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":18309:18343   */\n      dup9\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18248:18266   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10672:11212  {\r... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9579:10314  function _mintBatch(\r... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9757:9773  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17719:17721   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17701:17722   */\n      mstore\n        /* \"#utility.yul\":17758:17760   */\n      0x21\n        /* \"#utility.yul\":17738:17756   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17731:17761   */\n      mstore\n        /* \"#utility.yul\":17797:17831   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":17777:17795   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17770:17832   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":17848:17866   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17841:17872   */\n      mstore\n        /* \"#utility.yul\":17889:17908   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":17517:17914   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9851  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9858  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9833  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9840  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9858  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9822:9903  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9916:9932  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {\r... */\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10066  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10073  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10060  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10073  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {\r... */\n      iszero\n      tag_288\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10127  amounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10128:10129  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10130  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_172\n      jump\t// in\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10104  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10108  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10109:10110  i */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10111  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_172\n      jump\t// in\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10113:10115  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10130  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_294:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10075:10078  i++ */\n      dup2\n      swap1\n      pop\n      tag_295\n      dup2\n      tag_178\n      jump\t// in\n    tag_295:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {\r... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10195:10197  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10191:10192  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10173:10181  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10199:10202  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10204:10211  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_296\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10261:10269  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10279:10280  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10283:10285  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10287:10290  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10292:10299  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10301:10305  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10260  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(\r... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_303:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n    tag_308:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_172\n      jump\t// in\n    tag_312:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_172\n      jump\t// in\n    tag_314:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_318\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {\r... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_319\n      swap1\n      tag_178\n      jump\t// in\n    tag_319:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_321\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_321:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {\r... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      swap2\n      and\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      dup3\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n      0x00\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {\r... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(\r... */\n    tag_236:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16490:16492   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16472:16493   */\n      mstore\n        /* \"#utility.yul\":16529:16531   */\n      0x29\n        /* \"#utility.yul\":16509:16527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16502:16532   */\n      mstore\n        /* \"#utility.yul\":16568:16602   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":16548:16566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16541:16603   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":16619:16637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16612:16651   */\n      mstore\n        /* \"#utility.yul\":16668:16687   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_102\n        /* \"#utility.yul\":16288:16693   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":11547:11588   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":11520:11538   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(\r... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_329:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_332\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_333\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_333:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_332:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_335:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_337\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_337:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18275:18300   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":18331:18333   */\n      0x20\n        /* \"#utility.yul\":18316:18334   */\n      dup2\n      add\n        /* \"#utility.yul\":18309:18343   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18248:18266   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_339\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_340\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_339:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {\r... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n    tag_270:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_172\n      jump\t// in\n    tag_346:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(\r... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {\r... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_352\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_353\n      jump\t// in\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_354:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_356\n      swap2\n      dup2\n      add\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n      0x01\n    tag_355:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n      tag_358\n      jumpi\n      tag_362\n      tag_363\n      jump\t// in\n    tag_362:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_361\n      jumpi\n      pop\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      dup1\n      tag_366\n      jumpi\n      pop\n      jump(tag_360)\n    tag_366:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_361:\n      pop\n    tag_360:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12025:12027   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12007:12028   */\n      mstore\n        /* \"#utility.yul\":12064:12066   */\n      0x34\n        /* \"#utility.yul\":12044:12062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12037:12067   */\n      mstore\n        /* \"#utility.yul\":12103:12137   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":12083:12101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12076:12138   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":12154:12172   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12147:12197   */\n      mstore\n        /* \"#utility.yul\":12214:12233   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_102\n        /* \"#utility.yul\":11823:12239   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_358:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_373\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(\r... */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {\r... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_377\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_378\n      jump\t// in\n    tag_377:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_379\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_379:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_381\n      swap2\n      dup2\n      add\n      swap1\n      tag_357\n      jump\t// in\n    tag_381:\n      0x01\n    tag_380:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n      tag_382\n      jumpi\n      tag_362\n      tag_363\n      jump\t// in\n    tag_382:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_373\n      jump\t// in\n    tag_262:\n      dup3\n      dup1\n      sload\n      tag_395\n      swap1\n      tag_133\n      jump\t// in\n    tag_395:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_397\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_400)\n    tag_397:\n      dup3\n      0x1f\n      lt\n      tag_398\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_400)\n    tag_398:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_400\n      jumpi\n      swap2\n      dup3\n      add\n    tag_399:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_400\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_399)\n    tag_400:\n      pop\n      tag_401\n      swap3\n      swap2\n      pop\n      tag_402\n      jump\t// in\n    tag_401:\n      pop\n      swap1\n      jump\t// out\n    tag_402:\n    tag_403:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_403)\n        /* \"#utility.yul\":14:482   */\n    tag_406:\n        /* \"#utility.yul\":78:83   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":104:110   */\n      dup4\n        /* \"#utility.yul\":101:131   */\n      gt\n        /* \"#utility.yul\":98:154   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":134:152   */\n      tag_409\n      tag_164\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":183:185   */\n      0x40\n        /* \"#utility.yul\":177:186   */\n      mload\n        /* \"#utility.yul\":195:264   */\n      tag_410\n        /* \"#utility.yul\":252:254   */\n      0x1f\n        /* \"#utility.yul\":231:246   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":227:256   */\n      and\n        /* \"#utility.yul\":258:262   */\n      0x20\n        /* \"#utility.yul\":223:263   */\n      add\n        /* \"#utility.yul\":177:186   */\n      dup3\n        /* \"#utility.yul\":195:264   */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":282:288   */\n      dup1\n        /* \"#utility.yul\":273:288   */\n      swap2\n      pop\n        /* \"#utility.yul\":312:318   */\n      dup4\n        /* \"#utility.yul\":304:310   */\n      dup2\n        /* \"#utility.yul\":297:319   */\n      mstore\n        /* \"#utility.yul\":352:355   */\n      dup5\n        /* \"#utility.yul\":343:349   */\n      dup5\n        /* \"#utility.yul\":338:341   */\n      dup5\n        /* \"#utility.yul\":334:350   */\n      add\n        /* \"#utility.yul\":331:356   */\n      gt\n        /* \"#utility.yul\":328:373   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":366:367   */\n      dup1\n        /* \"#utility.yul\":359:371   */\n      revert\n        /* \"#utility.yul\":328:373   */\n    tag_412:\n        /* \"#utility.yul\":419:425   */\n      dup4\n        /* \"#utility.yul\":414:417   */\n      dup4\n        /* \"#utility.yul\":407:411   */\n      0x20\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:412   */\n      add\n        /* \"#utility.yul\":382:426   */\n      calldatacopy\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":467:471   */\n      0x20\n        /* \"#utility.yul\":458:464   */\n      dup6\n        /* \"#utility.yul\":450:456   */\n      dup4\n        /* \"#utility.yul\":446:465   */\n      add\n        /* \"#utility.yul\":442:472   */\n      add\n        /* \"#utility.yul\":435:476   */\n      mstore\n      pop\n        /* \"#utility.yul\":14:482   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:660   */\n    tag_413:\n        /* \"#utility.yul\":555:575   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":604:635   */\n      dup2\n      and\n        /* \"#utility.yul\":594:636   */\n      dup2\n      eq\n        /* \"#utility.yul\":584:654   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":650:651   */\n      0x00\n        /* \"#utility.yul\":647:648   */\n      dup1\n        /* \"#utility.yul\":640:652   */\n      revert\n        /* \"#utility.yul\":584:654   */\n    tag_415:\n        /* \"#utility.yul\":487:660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:1400   */\n    tag_416:\n        /* \"#utility.yul\":719:724   */\n      0x00\n        /* \"#utility.yul\":772:775   */\n      dup3\n        /* \"#utility.yul\":765:769   */\n      0x1f\n        /* \"#utility.yul\":757:763   */\n      dup4\n        /* \"#utility.yul\":753:770   */\n      add\n        /* \"#utility.yul\":749:776   */\n      slt\n        /* \"#utility.yul\":739:794   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":790:791   */\n      0x00\n        /* \"#utility.yul\":787:788   */\n      dup1\n        /* \"#utility.yul\":780:792   */\n      revert\n        /* \"#utility.yul\":739:794   */\n    tag_418:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":813:833   */\n      calldataload\n        /* \"#utility.yul\":852:856   */\n      0x20\n        /* \"#utility.yul\":875:918   */\n      tag_419\n        /* \"#utility.yul\":915:917   */\n      dup3\n        /* \"#utility.yul\":875:918   */\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":947:949   */\n      0x40\n        /* \"#utility.yul\":941:950   */\n      mload\n        /* \"#utility.yul\":959:990   */\n      tag_421\n        /* \"#utility.yul\":987:989   */\n      dup3\n        /* \"#utility.yul\":979:985   */\n      dup3\n        /* \"#utility.yul\":959:990   */\n      tag_411\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1025:1043   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1059:1074   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1094:1109   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1144:1145   */\n      0x05\n        /* \"#utility.yul\":1140:1150   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1128:1151   */\n      dup8\n      add\n        /* \"#utility.yul\":1124:1156   */\n      dup5\n      add\n        /* \"#utility.yul\":1121:1162   */\n      dup9\n      lt\n        /* \"#utility.yul\":1118:1179   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1175:1176   */\n      0x00\n        /* \"#utility.yul\":1172:1173   */\n      dup1\n        /* \"#utility.yul\":1165:1177   */\n      revert\n        /* \"#utility.yul\":1118:1179   */\n    tag_422:\n        /* \"#utility.yul\":1197:1198   */\n      0x00\n        /* \"#utility.yul\":1207:1370   */\n    tag_423:\n        /* \"#utility.yul\":1221:1223   */\n      dup6\n        /* \"#utility.yul\":1218:1219   */\n      dup2\n        /* \"#utility.yul\":1215:1224   */\n      lt\n        /* \"#utility.yul\":1207:1370   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":1278:1295   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1266:1296   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1316:1328   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1348:1360   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1239:1240   */\n      0x01\n        /* \"#utility.yul\":1232:1241   */\n      add\n        /* \"#utility.yul\":1207:1370   */\n      jump(tag_423)\n    tag_425:\n      pop\n        /* \"#utility.yul\":1388:1394   */\n      swap1\n      swap8\n        /* \"#utility.yul\":665:1400   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1405:1625   */\n    tag_426:\n        /* \"#utility.yul\":1447:1452   */\n      0x00\n        /* \"#utility.yul\":1500:1503   */\n      dup3\n        /* \"#utility.yul\":1493:1497   */\n      0x1f\n        /* \"#utility.yul\":1485:1491   */\n      dup4\n        /* \"#utility.yul\":1481:1498   */\n      add\n        /* \"#utility.yul\":1477:1504   */\n      slt\n        /* \"#utility.yul\":1467:1522   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":1518:1519   */\n      0x00\n        /* \"#utility.yul\":1515:1516   */\n      dup1\n        /* \"#utility.yul\":1508:1520   */\n      revert\n        /* \"#utility.yul\":1467:1522   */\n    tag_428:\n        /* \"#utility.yul\":1540:1619   */\n      tag_429\n        /* \"#utility.yul\":1615:1618   */\n      dup4\n        /* \"#utility.yul\":1606:1612   */\n      dup4\n        /* \"#utility.yul\":1593:1613   */\n      calldataload\n        /* \"#utility.yul\":1586:1590   */\n      0x20\n        /* \"#utility.yul\":1578:1584   */\n      dup6\n        /* \"#utility.yul\":1574:1591   */\n      add\n        /* \"#utility.yul\":1540:1619   */\n      tag_406\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1531:1619   */\n      swap4\n        /* \"#utility.yul\":1405:1625   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:1816   */\n    tag_98:\n        /* \"#utility.yul\":1689:1695   */\n      0x00\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1730:1739   */\n      dup3\n        /* \"#utility.yul\":1721:1728   */\n      dup5\n        /* \"#utility.yul\":1717:1740   */\n      sub\n        /* \"#utility.yul\":1713:1745   */\n      slt\n        /* \"#utility.yul\":1710:1762   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":1758:1759   */\n      0x00\n        /* \"#utility.yul\":1755:1756   */\n      dup1\n        /* \"#utility.yul\":1748:1760   */\n      revert\n        /* \"#utility.yul\":1710:1762   */\n    tag_431:\n        /* \"#utility.yul\":1781:1810   */\n      tag_429\n        /* \"#utility.yul\":1800:1809   */\n      dup3\n        /* \"#utility.yul\":1781:1810   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":1821:2081   */\n    tag_89:\n        /* \"#utility.yul\":1889:1895   */\n      0x00\n        /* \"#utility.yul\":1897:1903   */\n      dup1\n        /* \"#utility.yul\":1950:1952   */\n      0x40\n        /* \"#utility.yul\":1938:1947   */\n      dup4\n        /* \"#utility.yul\":1929:1936   */\n      dup6\n        /* \"#utility.yul\":1925:1948   */\n      sub\n        /* \"#utility.yul\":1921:1953   */\n      slt\n        /* \"#utility.yul\":1918:1970   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1963:1964   */\n      dup1\n        /* \"#utility.yul\":1956:1968   */\n      revert\n        /* \"#utility.yul\":1918:1970   */\n    tag_434:\n        /* \"#utility.yul\":1989:2018   */\n      tag_435\n        /* \"#utility.yul\":2008:2017   */\n      dup4\n        /* \"#utility.yul\":1989:2018   */\n      tag_413\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1979:2018   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2075   */\n      tag_436\n        /* \"#utility.yul\":2071:2073   */\n      0x20\n        /* \"#utility.yul\":2060:2069   */\n      dup5\n        /* \"#utility.yul\":2056:2074   */\n      add\n        /* \"#utility.yul\":2037:2075   */\n      tag_413\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":2027:2075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1821:2081   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:3029   */\n    tag_56:\n        /* \"#utility.yul\":2240:2246   */\n      0x00\n        /* \"#utility.yul\":2248:2254   */\n      dup1\n        /* \"#utility.yul\":2256:2262   */\n      0x00\n        /* \"#utility.yul\":2264:2270   */\n      dup1\n        /* \"#utility.yul\":2272:2278   */\n      0x00\n        /* \"#utility.yul\":2325:2328   */\n      0xa0\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2304:2311   */\n      dup9\n        /* \"#utility.yul\":2300:2323   */\n      sub\n        /* \"#utility.yul\":2296:2329   */\n      slt\n        /* \"#utility.yul\":2293:2346   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":2342:2343   */\n      0x00\n        /* \"#utility.yul\":2339:2340   */\n      dup1\n        /* \"#utility.yul\":2332:2344   */\n      revert\n        /* \"#utility.yul\":2293:2346   */\n    tag_438:\n        /* \"#utility.yul\":2365:2394   */\n      tag_439\n        /* \"#utility.yul\":2384:2393   */\n      dup7\n        /* \"#utility.yul\":2365:2394   */\n      tag_413\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2355:2394   */\n      swap5\n      pop\n        /* \"#utility.yul\":2413:2451   */\n      tag_440\n        /* \"#utility.yul\":2447:2449   */\n      0x20\n        /* \"#utility.yul\":2436:2445   */\n      dup8\n        /* \"#utility.yul\":2432:2450   */\n      add\n        /* \"#utility.yul\":2413:2451   */\n      tag_413\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2403:2451   */\n      swap4\n      pop\n        /* \"#utility.yul\":2502:2504   */\n      0x40\n        /* \"#utility.yul\":2491:2500   */\n      dup7\n        /* \"#utility.yul\":2487:2505   */\n      add\n        /* \"#utility.yul\":2474:2506   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2566:2568   */\n      dup1\n        /* \"#utility.yul\":2558:2564   */\n      dup3\n        /* \"#utility.yul\":2555:2569   */\n      gt\n        /* \"#utility.yul\":2552:2586   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2579:2580   */\n      dup1\n        /* \"#utility.yul\":2572:2584   */\n      revert\n        /* \"#utility.yul\":2552:2586   */\n    tag_441:\n        /* \"#utility.yul\":2605:2666   */\n      tag_442\n        /* \"#utility.yul\":2658:2665   */\n      dup10\n        /* \"#utility.yul\":2649:2655   */\n      dup4\n        /* \"#utility.yul\":2638:2647   */\n      dup11\n        /* \"#utility.yul\":2634:2656   */\n      add\n        /* \"#utility.yul\":2605:2666   */\n      tag_416\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2595:2666   */\n      swap5\n      pop\n        /* \"#utility.yul\":2719:2721   */\n      0x60\n        /* \"#utility.yul\":2708:2717   */\n      dup9\n        /* \"#utility.yul\":2704:2722   */\n      add\n        /* \"#utility.yul\":2691:2723   */\n      calldataload\n        /* \"#utility.yul\":2675:2723   */\n      swap2\n      pop\n        /* \"#utility.yul\":2748:2750   */\n      dup1\n        /* \"#utility.yul\":2738:2746   */\n      dup3\n        /* \"#utility.yul\":2735:2751   */\n      gt\n        /* \"#utility.yul\":2732:2768   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":2764:2765   */\n      0x00\n        /* \"#utility.yul\":2761:2762   */\n      dup1\n        /* \"#utility.yul\":2754:2766   */\n      revert\n        /* \"#utility.yul\":2732:2768   */\n    tag_443:\n        /* \"#utility.yul\":2787:2850   */\n      tag_444\n        /* \"#utility.yul\":2842:2849   */\n      dup10\n        /* \"#utility.yul\":2831:2839   */\n      dup4\n        /* \"#utility.yul\":2820:2829   */\n      dup11\n        /* \"#utility.yul\":2816:2840   */\n      add\n        /* \"#utility.yul\":2787:2850   */\n      tag_416\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2777:2850   */\n      swap4\n      pop\n        /* \"#utility.yul\":2903:2906   */\n      0x80\n        /* \"#utility.yul\":2892:2901   */\n      dup9\n        /* \"#utility.yul\":2888:2907   */\n      add\n        /* \"#utility.yul\":2875:2908   */\n      calldataload\n        /* \"#utility.yul\":2859:2908   */\n      swap2\n      pop\n        /* \"#utility.yul\":2933:2935   */\n      dup1\n        /* \"#utility.yul\":2923:2931   */\n      dup3\n        /* \"#utility.yul\":2920:2936   */\n      gt\n        /* \"#utility.yul\":2917:2953   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2946:2947   */\n      dup1\n        /* \"#utility.yul\":2939:2951   */\n      revert\n        /* \"#utility.yul\":2917:2953   */\n    tag_445:\n      pop\n        /* \"#utility.yul\":2972:3023   */\n      tag_446\n        /* \"#utility.yul\":3015:3022   */\n      dup9\n        /* \"#utility.yul\":3004:3012   */\n      dup3\n        /* \"#utility.yul\":2993:3002   */\n      dup10\n        /* \"#utility.yul\":2989:3013   */\n      add\n        /* \"#utility.yul\":2972:3023   */\n      tag_426\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2962:3023   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2086:3029   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3640   */\n    tag_94:\n        /* \"#utility.yul\":3138:3144   */\n      0x00\n        /* \"#utility.yul\":3146:3152   */\n      dup1\n        /* \"#utility.yul\":3154:3160   */\n      0x00\n        /* \"#utility.yul\":3162:3168   */\n      dup1\n        /* \"#utility.yul\":3170:3176   */\n      0x00\n        /* \"#utility.yul\":3223:3226   */\n      0xa0\n        /* \"#utility.yul\":3211:3220   */\n      dup7\n        /* \"#utility.yul\":3202:3209   */\n      dup9\n        /* \"#utility.yul\":3198:3221   */\n      sub\n        /* \"#utility.yul\":3194:3227   */\n      slt\n        /* \"#utility.yul\":3191:3244   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3240:3241   */\n      0x00\n        /* \"#utility.yul\":3237:3238   */\n      dup1\n        /* \"#utility.yul\":3230:3242   */\n      revert\n        /* \"#utility.yul\":3191:3244   */\n    tag_448:\n        /* \"#utility.yul\":3263:3292   */\n      tag_449\n        /* \"#utility.yul\":3282:3291   */\n      dup7\n        /* \"#utility.yul\":3263:3292   */\n      tag_413\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":3253:3292   */\n      swap5\n      pop\n        /* \"#utility.yul\":3311:3349   */\n      tag_450\n        /* \"#utility.yul\":3345:3347   */\n      0x20\n        /* \"#utility.yul\":3334:3343   */\n      dup8\n        /* \"#utility.yul\":3330:3348   */\n      add\n        /* \"#utility.yul\":3311:3349   */\n      tag_413\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3301:3349   */\n      swap4\n      pop\n        /* \"#utility.yul\":3396:3398   */\n      0x40\n        /* \"#utility.yul\":3385:3394   */\n      dup7\n        /* \"#utility.yul\":3381:3399   */\n      add\n        /* \"#utility.yul\":3368:3400   */\n      calldataload\n        /* \"#utility.yul\":3358:3400   */\n      swap3\n      pop\n        /* \"#utility.yul\":3447:3449   */\n      0x60\n        /* \"#utility.yul\":3436:3445   */\n      dup7\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3419:3451   */\n      calldataload\n        /* \"#utility.yul\":3409:3451   */\n      swap2\n      pop\n        /* \"#utility.yul\":3502:3505   */\n      0x80\n        /* \"#utility.yul\":3491:3500   */\n      dup7\n        /* \"#utility.yul\":3487:3506   */\n      add\n        /* \"#utility.yul\":3474:3507   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3522:3528   */\n      dup2\n        /* \"#utility.yul\":3519:3549   */\n      gt\n        /* \"#utility.yul\":3516:3566   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3516:3566   */\n    tag_451:\n        /* \"#utility.yul\":3585:3634   */\n      tag_446\n        /* \"#utility.yul\":3626:3633   */\n      dup9\n        /* \"#utility.yul\":3617:3623   */\n      dup3\n        /* \"#utility.yul\":3606:3615   */\n      dup10\n        /* \"#utility.yul\":3602:3624   */\n      add\n        /* \"#utility.yul\":3585:3634   */\n      tag_426\n      jump\t// in\n        /* \"#utility.yul\":3645:4513   */\n    tag_52:\n        /* \"#utility.yul\":3790:3796   */\n      0x00\n        /* \"#utility.yul\":3798:3804   */\n      dup1\n        /* \"#utility.yul\":3806:3812   */\n      0x00\n        /* \"#utility.yul\":3814:3820   */\n      dup1\n        /* \"#utility.yul\":3867:3870   */\n      0x80\n        /* \"#utility.yul\":3855:3864   */\n      dup6\n        /* \"#utility.yul\":3846:3853   */\n      dup8\n        /* \"#utility.yul\":3842:3865   */\n      sub\n        /* \"#utility.yul\":3838:3871   */\n      slt\n        /* \"#utility.yul\":3835:3888   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3884:3885   */\n      0x00\n        /* \"#utility.yul\":3881:3882   */\n      dup1\n        /* \"#utility.yul\":3874:3886   */\n      revert\n        /* \"#utility.yul\":3835:3888   */\n    tag_454:\n        /* \"#utility.yul\":3907:3936   */\n      tag_455\n        /* \"#utility.yul\":3926:3935   */\n      dup6\n        /* \"#utility.yul\":3907:3936   */\n      tag_413\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3897:3936   */\n      swap4\n      pop\n        /* \"#utility.yul\":3987:3989   */\n      0x20\n        /* \"#utility.yul\":3976:3985   */\n      dup6\n        /* \"#utility.yul\":3972:3990   */\n      add\n        /* \"#utility.yul\":3959:3991   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4051:4053   */\n      dup1\n        /* \"#utility.yul\":4043:4049   */\n      dup3\n        /* \"#utility.yul\":4040:4054   */\n      gt\n        /* \"#utility.yul\":4037:4071   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4067:4068   */\n      0x00\n        /* \"#utility.yul\":4064:4065   */\n      dup1\n        /* \"#utility.yul\":4057:4069   */\n      revert\n        /* \"#utility.yul\":4037:4071   */\n    tag_456:\n        /* \"#utility.yul\":4090:4151   */\n      tag_457\n        /* \"#utility.yul\":4143:4150   */\n      dup9\n        /* \"#utility.yul\":4134:4140   */\n      dup4\n        /* \"#utility.yul\":4123:4132   */\n      dup10\n        /* \"#utility.yul\":4119:4141   */\n      add\n        /* \"#utility.yul\":4090:4151   */\n      tag_416\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4080:4151   */\n      swap5\n      pop\n        /* \"#utility.yul\":4204:4206   */\n      0x40\n        /* \"#utility.yul\":4193:4202   */\n      dup8\n        /* \"#utility.yul\":4189:4207   */\n      add\n        /* \"#utility.yul\":4176:4208   */\n      calldataload\n        /* \"#utility.yul\":4160:4208   */\n      swap2\n      pop\n        /* \"#utility.yul\":4233:4235   */\n      dup1\n        /* \"#utility.yul\":4223:4231   */\n      dup3\n        /* \"#utility.yul\":4220:4236   */\n      gt\n        /* \"#utility.yul\":4217:4253   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4217:4253   */\n    tag_458:\n        /* \"#utility.yul\":4272:4335   */\n      tag_459\n        /* \"#utility.yul\":4327:4334   */\n      dup9\n        /* \"#utility.yul\":4316:4324   */\n      dup4\n        /* \"#utility.yul\":4305:4314   */\n      dup10\n        /* \"#utility.yul\":4301:4325   */\n      add\n        /* \"#utility.yul\":4272:4335   */\n      tag_416\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4262:4335   */\n      swap4\n      pop\n        /* \"#utility.yul\":4388:4390   */\n      0x60\n        /* \"#utility.yul\":4377:4386   */\n      dup8\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4360:4392   */\n      calldataload\n        /* \"#utility.yul\":4344:4392   */\n      swap2\n      pop\n        /* \"#utility.yul\":4417:4419   */\n      dup1\n        /* \"#utility.yul\":4407:4415   */\n      dup3\n        /* \"#utility.yul\":4404:4420   */\n      gt\n        /* \"#utility.yul\":4401:4437   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":4433:4434   */\n      0x00\n        /* \"#utility.yul\":4430:4431   */\n      dup1\n        /* \"#utility.yul\":4423:4435   */\n      revert\n        /* \"#utility.yul\":4401:4437   */\n    tag_460:\n      pop\n        /* \"#utility.yul\":4456:4507   */\n      tag_461\n        /* \"#utility.yul\":4499:4506   */\n      dup8\n        /* \"#utility.yul\":4488:4496   */\n      dup3\n        /* \"#utility.yul\":4477:4486   */\n      dup9\n        /* \"#utility.yul\":4473:4497   */\n      add\n        /* \"#utility.yul\":4456:4507   */\n      tag_426\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4446:4507   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3645:4513   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4518:4865   */\n    tag_82:\n        /* \"#utility.yul\":4583:4589   */\n      0x00\n        /* \"#utility.yul\":4591:4597   */\n      dup1\n        /* \"#utility.yul\":4644:4646   */\n      0x40\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4623:4630   */\n      dup6\n        /* \"#utility.yul\":4619:4642   */\n      sub\n        /* \"#utility.yul\":4615:4647   */\n      slt\n        /* \"#utility.yul\":4612:4664   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":4660:4661   */\n      0x00\n        /* \"#utility.yul\":4657:4658   */\n      dup1\n        /* \"#utility.yul\":4650:4662   */\n      revert\n        /* \"#utility.yul\":4612:4664   */\n    tag_463:\n        /* \"#utility.yul\":4683:4712   */\n      tag_464\n        /* \"#utility.yul\":4702:4711   */\n      dup4\n        /* \"#utility.yul\":4683:4712   */\n      tag_413\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4673:4712   */\n      swap2\n      pop\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup4\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4734:4766   */\n      calldataload\n        /* \"#utility.yul\":4809:4814   */\n      dup1\n        /* \"#utility.yul\":4802:4815   */\n      iszero\n        /* \"#utility.yul\":4795:4816   */\n      iszero\n        /* \"#utility.yul\":4788:4793   */\n      dup2\n        /* \"#utility.yul\":4785:4817   */\n      eq\n        /* \"#utility.yul\":4775:4835   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":4831:4832   */\n      0x00\n        /* \"#utility.yul\":4828:4829   */\n      dup1\n        /* \"#utility.yul\":4821:4833   */\n      revert\n        /* \"#utility.yul\":4775:4835   */\n    tag_465:\n        /* \"#utility.yul\":4854:4859   */\n      dup1\n        /* \"#utility.yul\":4844:4859   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4518:4865   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5124   */\n    tag_26:\n        /* \"#utility.yul\":4938:4944   */\n      0x00\n        /* \"#utility.yul\":4946:4952   */\n      dup1\n        /* \"#utility.yul\":4999:5001   */\n      0x40\n        /* \"#utility.yul\":4987:4996   */\n      dup4\n        /* \"#utility.yul\":4978:4985   */\n      dup6\n        /* \"#utility.yul\":4974:4997   */\n      sub\n        /* \"#utility.yul\":4970:5002   */\n      slt\n        /* \"#utility.yul\":4967:5019   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5012:5013   */\n      dup1\n        /* \"#utility.yul\":5005:5017   */\n      revert\n        /* \"#utility.yul\":4967:5019   */\n    tag_467:\n        /* \"#utility.yul\":5038:5067   */\n      tag_468\n        /* \"#utility.yul\":5057:5066   */\n      dup4\n        /* \"#utility.yul\":5038:5067   */\n      tag_413\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5028:5067   */\n      swap5\n        /* \"#utility.yul\":5114:5116   */\n      0x20\n        /* \"#utility.yul\":5099:5117   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5086:5118   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4870:5124   */\n      jump\t// out\n        /* \"#utility.yul\":5129:5451   */\n    tag_42:\n        /* \"#utility.yul\":5206:5212   */\n      0x00\n        /* \"#utility.yul\":5214:5220   */\n      dup1\n        /* \"#utility.yul\":5222:5228   */\n      0x00\n        /* \"#utility.yul\":5275:5277   */\n      0x60\n        /* \"#utility.yul\":5263:5272   */\n      dup5\n        /* \"#utility.yul\":5254:5261   */\n      dup7\n        /* \"#utility.yul\":5250:5273   */\n      sub\n        /* \"#utility.yul\":5246:5278   */\n      slt\n        /* \"#utility.yul\":5243:5295   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5291:5292   */\n      0x00\n        /* \"#utility.yul\":5288:5289   */\n      dup1\n        /* \"#utility.yul\":5281:5293   */\n      revert\n        /* \"#utility.yul\":5243:5295   */\n    tag_470:\n        /* \"#utility.yul\":5314:5343   */\n      tag_471\n        /* \"#utility.yul\":5333:5342   */\n      dup5\n        /* \"#utility.yul\":5314:5343   */\n      tag_413\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5304:5343   */\n      swap6\n        /* \"#utility.yul\":5390:5392   */\n      0x20\n        /* \"#utility.yul\":5375:5393   */\n      dup6\n      add\n        /* \"#utility.yul\":5362:5394   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5441:5443   */\n      0x40\n        /* \"#utility.yul\":5426:5444   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5413:5445   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5129:5451   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5456:6675   */\n    tag_60:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5582:5588   */\n      dup1\n        /* \"#utility.yul\":5635:5637   */\n      0x40\n        /* \"#utility.yul\":5623:5632   */\n      dup4\n        /* \"#utility.yul\":5614:5621   */\n      dup6\n        /* \"#utility.yul\":5610:5633   */\n      sub\n        /* \"#utility.yul\":5606:5638   */\n      slt\n        /* \"#utility.yul\":5603:5655   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":5651:5652   */\n      0x00\n        /* \"#utility.yul\":5648:5649   */\n      dup1\n        /* \"#utility.yul\":5641:5653   */\n      revert\n        /* \"#utility.yul\":5603:5655   */\n    tag_473:\n        /* \"#utility.yul\":5691:5700   */\n      dup3\n        /* \"#utility.yul\":5678:5701   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5761:5763   */\n      dup1\n        /* \"#utility.yul\":5753:5759   */\n      dup3\n        /* \"#utility.yul\":5750:5764   */\n      gt\n        /* \"#utility.yul\":5747:5781   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":5777:5778   */\n      0x00\n        /* \"#utility.yul\":5774:5775   */\n      dup1\n        /* \"#utility.yul\":5767:5779   */\n      revert\n        /* \"#utility.yul\":5747:5781   */\n    tag_474:\n        /* \"#utility.yul\":5815:5821   */\n      dup2\n        /* \"#utility.yul\":5804:5813   */\n      dup6\n        /* \"#utility.yul\":5800:5822   */\n      add\n        /* \"#utility.yul\":5790:5822   */\n      swap2\n      pop\n        /* \"#utility.yul\":5860:5867   */\n      dup6\n        /* \"#utility.yul\":5853:5857   */\n      0x1f\n        /* \"#utility.yul\":5849:5851   */\n      dup4\n        /* \"#utility.yul\":5845:5858   */\n      add\n        /* \"#utility.yul\":5841:5868   */\n      slt\n        /* \"#utility.yul\":5831:5886   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5882:5883   */\n      0x00\n        /* \"#utility.yul\":5879:5880   */\n      dup1\n        /* \"#utility.yul\":5872:5884   */\n      revert\n        /* \"#utility.yul\":5831:5886   */\n    tag_475:\n        /* \"#utility.yul\":5918:5920   */\n      dup2\n        /* \"#utility.yul\":5905:5921   */\n      calldataload\n        /* \"#utility.yul\":5940:5944   */\n      0x20\n        /* \"#utility.yul\":5963:6006   */\n      tag_476\n        /* \"#utility.yul\":6003:6005   */\n      dup3\n        /* \"#utility.yul\":5963:6006   */\n      tag_420\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6035:6037   */\n      0x40\n        /* \"#utility.yul\":6029:6038   */\n      mload\n        /* \"#utility.yul\":6047:6078   */\n      tag_477\n        /* \"#utility.yul\":6075:6077   */\n      dup3\n        /* \"#utility.yul\":6067:6073   */\n      dup3\n        /* \"#utility.yul\":6047:6078   */\n      tag_411\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6113:6131   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6147:6162   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":6182:6193   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":6224:6225   */\n      0x05\n        /* \"#utility.yul\":6220:6230   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6212:6231   */\n      dup8\n      add\n        /* \"#utility.yul\":6208:6236   */\n      dup5\n      add\n        /* \"#utility.yul\":6205:6246   */\n      dup12\n      lt\n        /* \"#utility.yul\":6202:6263   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6259:6260   */\n      0x00\n        /* \"#utility.yul\":6256:6257   */\n      dup1\n        /* \"#utility.yul\":6249:6261   */\n      revert\n        /* \"#utility.yul\":6202:6263   */\n    tag_478:\n        /* \"#utility.yul\":6281:6282   */\n      0x00\n        /* \"#utility.yul\":6272:6282   */\n      swap7\n      pop\n        /* \"#utility.yul\":6291:6460   */\n    tag_479:\n        /* \"#utility.yul\":6305:6307   */\n      dup5\n        /* \"#utility.yul\":6302:6303   */\n      dup8\n        /* \"#utility.yul\":6299:6308   */\n      lt\n        /* \"#utility.yul\":6291:6460   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":6362:6385   */\n      tag_482\n        /* \"#utility.yul\":6381:6384   */\n      dup2\n        /* \"#utility.yul\":6362:6385   */\n      tag_413\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6350:6386   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6323:6324   */\n      0x01\n        /* \"#utility.yul\":6316:6325   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":6406:6418   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":6438:6450   */\n      dup4\n      add\n        /* \"#utility.yul\":6291:6460   */\n      jump(tag_479)\n    tag_481:\n      pop\n        /* \"#utility.yul\":6479:6485   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6523:6541   */\n      dup7\n      add\n        /* \"#utility.yul\":6510:6542   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6554:6570   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6551:6587   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6583:6584   */\n      0x00\n        /* \"#utility.yul\":6580:6581   */\n      dup1\n        /* \"#utility.yul\":6573:6585   */\n      revert\n        /* \"#utility.yul\":6551:6587   */\n    tag_483:\n      pop\n        /* \"#utility.yul\":6606:6669   */\n      tag_484\n        /* \"#utility.yul\":6661:6668   */\n      dup6\n        /* \"#utility.yul\":6650:6658   */\n      dup3\n        /* \"#utility.yul\":6639:6648   */\n      dup7\n        /* \"#utility.yul\":6635:6659   */\n      add\n        /* \"#utility.yul\":6606:6669   */\n      tag_416\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6596:6669   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5456:6675   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:6925   */\n    tag_32:\n        /* \"#utility.yul\":6738:6744   */\n      0x00\n        /* \"#utility.yul\":6791:6793   */\n      0x20\n        /* \"#utility.yul\":6779:6788   */\n      dup3\n        /* \"#utility.yul\":6770:6777   */\n      dup5\n        /* \"#utility.yul\":6766:6789   */\n      sub\n        /* \"#utility.yul\":6762:6794   */\n      slt\n        /* \"#utility.yul\":6759:6811   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":6807:6808   */\n      0x00\n        /* \"#utility.yul\":6804:6805   */\n      dup1\n        /* \"#utility.yul\":6797:6809   */\n      revert\n        /* \"#utility.yul\":6759:6811   */\n    tag_486:\n        /* \"#utility.yul\":6846:6855   */\n      dup2\n        /* \"#utility.yul\":6833:6856   */\n      calldataload\n        /* \"#utility.yul\":6865:6895   */\n      tag_429\n        /* \"#utility.yul\":6889:6894   */\n      dup2\n        /* \"#utility.yul\":6865:6895   */\n      tag_488\n      jump\t// in\n        /* \"#utility.yul\":6930:7179   */\n    tag_357:\n        /* \"#utility.yul\":6999:7005   */\n      0x00\n        /* \"#utility.yul\":7052:7054   */\n      0x20\n        /* \"#utility.yul\":7040:7049   */\n      dup3\n        /* \"#utility.yul\":7031:7038   */\n      dup5\n        /* \"#utility.yul\":7027:7050   */\n      sub\n        /* \"#utility.yul\":7023:7055   */\n      slt\n        /* \"#utility.yul\":7020:7072   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":7068:7069   */\n      0x00\n        /* \"#utility.yul\":7065:7066   */\n      dup1\n        /* \"#utility.yul\":7058:7070   */\n      revert\n        /* \"#utility.yul\":7020:7072   */\n    tag_490:\n        /* \"#utility.yul\":7100:7109   */\n      dup2\n        /* \"#utility.yul\":7094:7110   */\n      mload\n        /* \"#utility.yul\":7119:7149   */\n      tag_429\n        /* \"#utility.yul\":7143:7148   */\n      dup2\n        /* \"#utility.yul\":7119:7149   */\n      tag_488\n      jump\t// in\n        /* \"#utility.yul\":7184:7634   */\n    tag_38:\n        /* \"#utility.yul\":7253:7259   */\n      0x00\n        /* \"#utility.yul\":7306:7308   */\n      0x20\n        /* \"#utility.yul\":7294:7303   */\n      dup3\n        /* \"#utility.yul\":7285:7292   */\n      dup5\n        /* \"#utility.yul\":7281:7304   */\n      sub\n        /* \"#utility.yul\":7277:7309   */\n      slt\n        /* \"#utility.yul\":7274:7326   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":7322:7323   */\n      0x00\n        /* \"#utility.yul\":7319:7320   */\n      dup1\n        /* \"#utility.yul\":7312:7324   */\n      revert\n        /* \"#utility.yul\":7274:7326   */\n    tag_493:\n        /* \"#utility.yul\":7362:7371   */\n      dup2\n        /* \"#utility.yul\":7349:7372   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7387:7393   */\n      dup2\n        /* \"#utility.yul\":7384:7414   */\n      gt\n        /* \"#utility.yul\":7381:7431   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7427:7428   */\n      0x00\n        /* \"#utility.yul\":7424:7425   */\n      dup1\n        /* \"#utility.yul\":7417:7429   */\n      revert\n        /* \"#utility.yul\":7381:7431   */\n    tag_494:\n        /* \"#utility.yul\":7450:7472   */\n      dup3\n      add\n        /* \"#utility.yul\":7503:7507   */\n      0x1f\n        /* \"#utility.yul\":7495:7508   */\n      dup2\n      add\n        /* \"#utility.yul\":7491:7518   */\n      dup5\n      sgt\n        /* \"#utility.yul\":7481:7536   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":7532:7533   */\n      0x00\n        /* \"#utility.yul\":7529:7530   */\n      dup1\n        /* \"#utility.yul\":7522:7534   */\n      revert\n        /* \"#utility.yul\":7481:7536   */\n    tag_495:\n        /* \"#utility.yul\":7555:7628   */\n      tag_496\n        /* \"#utility.yul\":7620:7627   */\n      dup5\n        /* \"#utility.yul\":7615:7617   */\n      dup3\n        /* \"#utility.yul\":7602:7618   */\n      calldataload\n        /* \"#utility.yul\":7597:7599   */\n      0x20\n        /* \"#utility.yul\":7593:7595   */\n      dup5\n        /* \"#utility.yul\":7589:7600   */\n      add\n        /* \"#utility.yul\":7555:7628   */\n      tag_406\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7545:7628   */\n      swap5\n        /* \"#utility.yul\":7184:7634   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7639:7819   */\n    tag_46:\n        /* \"#utility.yul\":7698:7704   */\n      0x00\n        /* \"#utility.yul\":7751:7753   */\n      0x20\n        /* \"#utility.yul\":7739:7748   */\n      dup3\n        /* \"#utility.yul\":7730:7737   */\n      dup5\n        /* \"#utility.yul\":7726:7749   */\n      sub\n        /* \"#utility.yul\":7722:7754   */\n      slt\n        /* \"#utility.yul\":7719:7771   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":7767:7768   */\n      0x00\n        /* \"#utility.yul\":7764:7765   */\n      dup1\n        /* \"#utility.yul\":7757:7769   */\n      revert\n        /* \"#utility.yul\":7719:7771   */\n    tag_498:\n      pop\n        /* \"#utility.yul\":7790:7813   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":7639:7819   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7824:8146   */\n    tag_78:\n        /* \"#utility.yul\":7901:7907   */\n      0x00\n        /* \"#utility.yul\":7909:7915   */\n      dup1\n        /* \"#utility.yul\":7917:7923   */\n      0x00\n        /* \"#utility.yul\":7970:7972   */\n      0x60\n        /* \"#utility.yul\":7958:7967   */\n      dup5\n        /* \"#utility.yul\":7949:7956   */\n      dup7\n        /* \"#utility.yul\":7945:7968   */\n      sub\n        /* \"#utility.yul\":7941:7973   */\n      slt\n        /* \"#utility.yul\":7938:7990   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":7986:7987   */\n      0x00\n        /* \"#utility.yul\":7983:7984   */\n      dup1\n        /* \"#utility.yul\":7976:7988   */\n      revert\n        /* \"#utility.yul\":7938:7990   */\n    tag_500:\n        /* \"#utility.yul\":8022:8031   */\n      dup4\n        /* \"#utility.yul\":8009:8032   */\n      calldataload\n        /* \"#utility.yul\":7999:8032   */\n      swap3\n      pop\n        /* \"#utility.yul\":8079:8081   */\n      0x20\n        /* \"#utility.yul\":8068:8077   */\n      dup5\n        /* \"#utility.yul\":8064:8082   */\n      add\n        /* \"#utility.yul\":8051:8083   */\n      calldataload\n        /* \"#utility.yul\":8041:8083   */\n      swap2\n      pop\n        /* \"#utility.yul\":8102:8140   */\n      tag_501\n        /* \"#utility.yul\":8136:8138   */\n      0x40\n        /* \"#utility.yul\":8125:8134   */\n      dup6\n        /* \"#utility.yul\":8121:8139   */\n      add\n        /* \"#utility.yul\":8102:8140   */\n      tag_413\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8092:8140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7824:8146   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8151:8586   */\n    tag_502:\n        /* \"#utility.yul\":8204:8207   */\n      0x00\n        /* \"#utility.yul\":8242:8247   */\n      dup2\n        /* \"#utility.yul\":8236:8248   */\n      mload\n        /* \"#utility.yul\":8269:8275   */\n      dup1\n        /* \"#utility.yul\":8264:8267   */\n      dup5\n        /* \"#utility.yul\":8257:8276   */\n      mstore\n        /* \"#utility.yul\":8295:8299   */\n      0x20\n        /* \"#utility.yul\":8324:8326   */\n      dup1\n        /* \"#utility.yul\":8319:8322   */\n      dup6\n        /* \"#utility.yul\":8315:8327   */\n      add\n        /* \"#utility.yul\":8308:8327   */\n      swap5\n      pop\n        /* \"#utility.yul\":8361:8363   */\n      dup1\n        /* \"#utility.yul\":8354:8359   */\n      dup5\n        /* \"#utility.yul\":8350:8364   */\n      add\n        /* \"#utility.yul\":8382:8383   */\n      0x00\n        /* \"#utility.yul\":8392:8561   */\n    tag_504:\n        /* \"#utility.yul\":8406:8412   */\n      dup4\n        /* \"#utility.yul\":8403:8404   */\n      dup2\n        /* \"#utility.yul\":8400:8413   */\n      lt\n        /* \"#utility.yul\":8392:8561   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8467:8480   */\n      dup2\n      mload\n        /* \"#utility.yul\":8455:8481   */\n      dup8\n      mstore\n        /* \"#utility.yul\":8501:8513   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":8536:8551   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8428:8429   */\n      0x01\n        /* \"#utility.yul\":8421:8430   */\n      add\n        /* \"#utility.yul\":8392:8561   */\n      jump(tag_504)\n    tag_506:\n      pop\n        /* \"#utility.yul\":8577:8580   */\n      swap5\n      swap6\n        /* \"#utility.yul\":8151:8586   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8591:9062   */\n    tag_507:\n        /* \"#utility.yul\":8632:8635   */\n      0x00\n        /* \"#utility.yul\":8670:8675   */\n      dup2\n        /* \"#utility.yul\":8664:8676   */\n      mload\n        /* \"#utility.yul\":8697:8703   */\n      dup1\n        /* \"#utility.yul\":8692:8695   */\n      dup5\n        /* \"#utility.yul\":8685:8704   */\n      mstore\n        /* \"#utility.yul\":8722:8723   */\n      0x00\n        /* \"#utility.yul\":8732:8894   */\n    tag_509:\n        /* \"#utility.yul\":8746:8752   */\n      dup2\n        /* \"#utility.yul\":8743:8744   */\n      dup2\n        /* \"#utility.yul\":8740:8753   */\n      lt\n        /* \"#utility.yul\":8732:8894   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":8808:8812   */\n      0x20\n        /* \"#utility.yul\":8864:8877   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":8860:8882   */\n      dup2\n      add\n        /* \"#utility.yul\":8854:8883   */\n      mload\n        /* \"#utility.yul\":8836:8847   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":8832:8852   */\n      dup3\n      add\n        /* \"#utility.yul\":8825:8884   */\n      mstore\n        /* \"#utility.yul\":8761:8773   */\n      add\n        /* \"#utility.yul\":8732:8894   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":8912:8918   */\n      dup2\n        /* \"#utility.yul\":8909:8910   */\n      dup2\n        /* \"#utility.yul\":8906:8919   */\n      gt\n        /* \"#utility.yul\":8903:8990   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8971:8975   */\n      0x20\n        /* \"#utility.yul\":8962:8968   */\n      dup4\n        /* \"#utility.yul\":8957:8960   */\n      dup8\n        /* \"#utility.yul\":8953:8969   */\n      add\n        /* \"#utility.yul\":8949:8976   */\n      add\n        /* \"#utility.yul\":8942:8980   */\n      mstore\n        /* \"#utility.yul\":8903:8990   */\n    tag_512:\n      pop\n        /* \"#utility.yul\":9044:9046   */\n      0x1f\n        /* \"#utility.yul\":9023:9038   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9019:9048   */\n      and\n        /* \"#utility.yul\":9010:9049   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":9051:9055   */\n      0x20\n        /* \"#utility.yul\":9006:9056   */\n      add\n      swap3\n        /* \"#utility.yul\":8591:9062   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9275:10101   */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9672:9687   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9654:9688   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9724:9739   */\n      dup6\n      and\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9704:9722   */\n      dup3\n      add\n        /* \"#utility.yul\":9697:9740   */\n      mstore\n        /* \"#utility.yul\":9634:9637   */\n      0xa0\n        /* \"#utility.yul\":9771:9773   */\n      0x40\n        /* \"#utility.yul\":9756:9774   */\n      dup3\n      add\n        /* \"#utility.yul\":9749:9780   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9597:9601   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9803:9860   */\n      tag_515\n      swap1\n        /* \"#utility.yul\":9840:9859   */\n      dup4\n      add\n        /* \"#utility.yul\":9832:9838   */\n      dup7\n        /* \"#utility.yul\":9803:9860   */\n      tag_502\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9908:9917   */\n      dup3\n        /* \"#utility.yul\":9900:9906   */\n      dup2\n        /* \"#utility.yul\":9896:9918   */\n      sub\n        /* \"#utility.yul\":9891:9893   */\n      0x60\n        /* \"#utility.yul\":9880:9889   */\n      dup5\n        /* \"#utility.yul\":9876:9894   */\n      add\n        /* \"#utility.yul\":9869:9919   */\n      mstore\n        /* \"#utility.yul\":9942:9986   */\n      tag_516\n        /* \"#utility.yul\":9979:9985   */\n      dup2\n        /* \"#utility.yul\":9971:9977   */\n      dup7\n        /* \"#utility.yul\":9942:9986   */\n      tag_502\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9928:9986   */\n      swap1\n      pop\n        /* \"#utility.yul\":10035:10044   */\n      dup3\n        /* \"#utility.yul\":10027:10033   */\n      dup2\n        /* \"#utility.yul\":10023:10045   */\n      sub\n        /* \"#utility.yul\":10017:10020   */\n      0x80\n        /* \"#utility.yul\":10006:10015   */\n      dup5\n        /* \"#utility.yul\":10002:10021   */\n      add\n        /* \"#utility.yul\":9995:10046   */\n      mstore\n        /* \"#utility.yul\":10063:10095   */\n      tag_517\n        /* \"#utility.yul\":10088:10094   */\n      dup2\n        /* \"#utility.yul\":10080:10086   */\n      dup6\n        /* \"#utility.yul\":10063:10095   */\n      tag_507\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10055:10095   */\n      swap9\n        /* \"#utility.yul\":9275:10101   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10106:10666   */\n    tag_378:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10403:10418   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10385:10419   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10455:10470   */\n      dup6\n      and\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"#utility.yul\":10435:10453   */\n      dup3\n      add\n        /* \"#utility.yul\":10428:10471   */\n      mstore\n        /* \"#utility.yul\":10502:10504   */\n      0x40\n        /* \"#utility.yul\":10487:10505   */\n      dup2\n      add\n        /* \"#utility.yul\":10480:10514   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10545:10547   */\n      0x60\n        /* \"#utility.yul\":10530:10548   */\n      dup2\n      add\n        /* \"#utility.yul\":10523:10557   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10365:10368   */\n      0xa0\n        /* \"#utility.yul\":10588:10591   */\n      0x80\n        /* \"#utility.yul\":10573:10592   */\n      dup3\n      add\n        /* \"#utility.yul\":10566:10598   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10328:10332   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10615:10660   */\n      tag_519\n      swap1\n        /* \"#utility.yul\":10640:10659   */\n      dup4\n      add\n        /* \"#utility.yul\":10632:10638   */\n      dup5\n        /* \"#utility.yul\":10615:10660   */\n      tag_507\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10607:10660   */\n      swap8\n        /* \"#utility.yul\":10106:10666   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10671:10932   */\n    tag_63:\n        /* \"#utility.yul\":10850:10852   */\n      0x20\n        /* \"#utility.yul\":10839:10848   */\n      dup2\n        /* \"#utility.yul\":10832:10853   */\n      mstore\n        /* \"#utility.yul\":10813:10817   */\n      0x00\n        /* \"#utility.yul\":10870:10926   */\n      tag_429\n        /* \"#utility.yul\":10922:10924   */\n      0x20\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10925   */\n      add\n        /* \"#utility.yul\":10899:10905   */\n      dup5\n        /* \"#utility.yul\":10870:10926   */\n      tag_502\n      jump\t// in\n        /* \"#utility.yul\":10937:11402   */\n    tag_297:\n        /* \"#utility.yul\":11194:11196   */\n      0x40\n        /* \"#utility.yul\":11183:11192   */\n      dup2\n        /* \"#utility.yul\":11176:11197   */\n      mstore\n        /* \"#utility.yul\":11157:11161   */\n      0x00\n        /* \"#utility.yul\":11220:11276   */\n      tag_523\n        /* \"#utility.yul\":11272:11274   */\n      0x40\n        /* \"#utility.yul\":11261:11270   */\n      dup4\n        /* \"#utility.yul\":11257:11275   */\n      add\n        /* \"#utility.yul\":11249:11255   */\n      dup6\n        /* \"#utility.yul\":11220:11276   */\n      tag_502\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11324:11333   */\n      dup3\n        /* \"#utility.yul\":11316:11322   */\n      dup2\n        /* \"#utility.yul\":11312:11334   */\n      sub\n        /* \"#utility.yul\":11307:11309   */\n      0x20\n        /* \"#utility.yul\":11296:11305   */\n      dup5\n        /* \"#utility.yul\":11292:11310   */\n      add\n        /* \"#utility.yul\":11285:11335   */\n      mstore\n        /* \"#utility.yul\":11352:11396   */\n      tag_524\n        /* \"#utility.yul\":11389:11395   */\n      dup2\n        /* \"#utility.yul\":11381:11387   */\n      dup6\n        /* \"#utility.yul\":11352:11396   */\n      tag_502\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11344:11396   */\n      swap6\n        /* \"#utility.yul\":10937:11402   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11599:11818   */\n    tag_49:\n        /* \"#utility.yul\":11748:11750   */\n      0x20\n        /* \"#utility.yul\":11737:11746   */\n      dup2\n        /* \"#utility.yul\":11730:11751   */\n      mstore\n        /* \"#utility.yul\":11711:11715   */\n      0x00\n        /* \"#utility.yul\":11768:11812   */\n      tag_429\n        /* \"#utility.yul\":11808:11810   */\n      0x20\n        /* \"#utility.yul\":11797:11806   */\n      dup4\n        /* \"#utility.yul\":11793:11811   */\n      add\n        /* \"#utility.yul\":11785:11791   */\n      dup5\n        /* \"#utility.yul\":11768:11812   */\n      tag_507\n      jump\t// in\n        /* \"#utility.yul\":12244:12648   */\n    tag_373:\n        /* \"#utility.yul\":12446:12448   */\n      0x20\n        /* \"#utility.yul\":12428:12449   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12485:12487   */\n      0x28\n        /* \"#utility.yul\":12465:12483   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12458:12488   */\n      mstore\n        /* \"#utility.yul\":12524:12558   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":12519:12521   */\n      0x40\n        /* \"#utility.yul\":12504:12522   */\n      dup3\n      add\n        /* \"#utility.yul\":12497:12559   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":12590:12592   */\n      0x60\n        /* \"#utility.yul\":12575:12593   */\n      dup3\n      add\n        /* \"#utility.yul\":12568:12606   */\n      mstore\n        /* \"#utility.yul\":12638:12641   */\n      0x80\n        /* \"#utility.yul\":12623:12642   */\n      add\n      swap1\n        /* \"#utility.yul\":12244:12648   */\n      jump\t// out\n        /* \"#utility.yul\":13877:14282   */\n    tag_126:\n        /* \"#utility.yul\":14079:14081   */\n      0x20\n        /* \"#utility.yul\":14061:14082   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14118:14120   */\n      0x29\n        /* \"#utility.yul\":14098:14116   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14091:14121   */\n      mstore\n        /* \"#utility.yul\":14157:14191   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":14152:14154   */\n      0x40\n        /* \"#utility.yul\":14137:14155   */\n      dup3\n      add\n        /* \"#utility.yul\":14130:14192   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":14223:14225   */\n      0x60\n        /* \"#utility.yul\":14208:14226   */\n      dup3\n      add\n        /* \"#utility.yul\":14201:14240   */\n      mstore\n        /* \"#utility.yul\":14272:14275   */\n      0x80\n        /* \"#utility.yul\":14257:14276   */\n      add\n      swap1\n        /* \"#utility.yul\":13877:14282   */\n      jump\t// out\n        /* \"#utility.yul\":14287:14688   */\n    tag_305:\n        /* \"#utility.yul\":14489:14491   */\n      0x20\n        /* \"#utility.yul\":14471:14492   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14528:14530   */\n      0x25\n        /* \"#utility.yul\":14508:14526   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14501:14531   */\n      mstore\n        /* \"#utility.yul\":14567:14601   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":14562:14564   */\n      0x40\n        /* \"#utility.yul\":14547:14565   */\n      dup3\n      add\n        /* \"#utility.yul\":14540:14602   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":14633:14635   */\n      0x60\n        /* \"#utility.yul\":14618:14636   */\n      dup3\n      add\n        /* \"#utility.yul\":14611:14646   */\n      mstore\n        /* \"#utility.yul\":14678:14681   */\n      0x80\n        /* \"#utility.yul\":14663:14682   */\n      add\n      swap1\n        /* \"#utility.yul\":14287:14688   */\n      jump\t// out\n        /* \"#utility.yul\":15516:15922   */\n    tag_317:\n        /* \"#utility.yul\":15718:15720   */\n      0x20\n        /* \"#utility.yul\":15700:15721   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15757:15759   */\n      0x2a\n        /* \"#utility.yul\":15737:15755   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15730:15760   */\n      mstore\n        /* \"#utility.yul\":15796:15830   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":15791:15793   */\n      0x40\n        /* \"#utility.yul\":15776:15794   */\n      dup3\n      add\n        /* \"#utility.yul\":15769:15831   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":15862:15864   */\n      0x60\n        /* \"#utility.yul\":15847:15865   */\n      dup3\n      add\n        /* \"#utility.yul\":15840:15880   */\n      mstore\n        /* \"#utility.yul\":15912:15915   */\n      0x80\n        /* \"#utility.yul\":15897:15916   */\n      add\n      swap1\n        /* \"#utility.yul\":15516:15922   */\n      jump\t// out\n        /* \"#utility.yul\":15927:16283   */\n    tag_115:\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16111:16132   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16148:16166   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16141:16171   */\n      mstore\n        /* \"#utility.yul\":16207:16241   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16202:16204   */\n      0x40\n        /* \"#utility.yul\":16187:16205   */\n      dup3\n      add\n        /* \"#utility.yul\":16180:16242   */\n      mstore\n        /* \"#utility.yul\":16274:16276   */\n      0x60\n        /* \"#utility.yul\":16259:16277   */\n      add\n      swap1\n        /* \"#utility.yul\":15927:16283   */\n      jump\t// out\n        /* \"#utility.yul\":17108:17512   */\n    tag_284:\n        /* \"#utility.yul\":17310:17312   */\n      0x20\n        /* \"#utility.yul\":17292:17313   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17349:17351   */\n      0x28\n        /* \"#utility.yul\":17329:17347   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17322:17352   */\n      mstore\n        /* \"#utility.yul\":17388:17422   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":17383:17385   */\n      0x40\n        /* \"#utility.yul\":17368:17386   */\n      dup3\n      add\n        /* \"#utility.yul\":17361:17423   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":17454:17456   */\n      0x60\n        /* \"#utility.yul\":17439:17457   */\n      dup3\n      add\n        /* \"#utility.yul\":17432:17470   */\n      mstore\n        /* \"#utility.yul\":17502:17505   */\n      0x80\n        /* \"#utility.yul\":17487:17506   */\n      add\n      swap1\n        /* \"#utility.yul\":17108:17512   */\n      jump\t// out\n        /* \"#utility.yul\":18354:18537   */\n    tag_420:\n        /* \"#utility.yul\":18414:18418   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":18439:18445   */\n      dup3\n        /* \"#utility.yul\":18436:18466   */\n      gt\n        /* \"#utility.yul\":18433:18489   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":18469:18487   */\n      tag_547\n      tag_164\n      jump\t// in\n    tag_547:\n      pop\n        /* \"#utility.yul\":18514:18515   */\n      0x05\n        /* \"#utility.yul\":18510:18524   */\n      shl\n        /* \"#utility.yul\":18526:18530   */\n      0x20\n        /* \"#utility.yul\":18506:18531   */\n      add\n      swap1\n        /* \"#utility.yul\":18354:18537   */\n      jump\t// out\n        /* \"#utility.yul\":18542:18670   */\n    tag_147:\n        /* \"#utility.yul\":18582:18585   */\n      0x00\n        /* \"#utility.yul\":18613:18614   */\n      dup3\n        /* \"#utility.yul\":18609:18615   */\n      not\n        /* \"#utility.yul\":18606:18607   */\n      dup3\n        /* \"#utility.yul\":18603:18616   */\n      gt\n        /* \"#utility.yul\":18600:18639   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":18619:18637   */\n      tag_550\n      tag_551\n      jump\t// in\n    tag_550:\n      pop\n        /* \"#utility.yul\":18655:18664   */\n      add\n      swap1\n        /* \"#utility.yul\":18542:18670   */\n      jump\t// out\n        /* \"#utility.yul\":18675:18800   */\n    tag_204:\n        /* \"#utility.yul\":18715:18719   */\n      0x00\n        /* \"#utility.yul\":18743:18744   */\n      dup3\n        /* \"#utility.yul\":18740:18741   */\n      dup3\n        /* \"#utility.yul\":18737:18745   */\n      lt\n        /* \"#utility.yul\":18734:18768   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":18748:18766   */\n      tag_554\n      tag_551\n      jump\t// in\n    tag_554:\n      pop\n        /* \"#utility.yul\":18785:18794   */\n      sub\n      swap1\n        /* \"#utility.yul\":18675:18800   */\n      jump\t// out\n        /* \"#utility.yul\":18805:18941   */\n    tag_130:\n        /* \"#utility.yul\":18844:18847   */\n      0x00\n        /* \"#utility.yul\":18872:18877   */\n      dup2\n        /* \"#utility.yul\":18862:18901   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":18881:18899   */\n      tag_557\n      tag_551\n      jump\t// in\n    tag_557:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":18917:18935   */\n      add\n      swap1\n        /* \"#utility.yul\":18805:18941   */\n      jump\t// out\n        /* \"#utility.yul\":18946:19326   */\n    tag_133:\n        /* \"#utility.yul\":19025:19026   */\n      0x01\n        /* \"#utility.yul\":19021:19033   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":19068:19080   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":19089:19150   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":19143:19147   */\n      0x7f\n        /* \"#utility.yul\":19135:19141   */\n      dup3\n        /* \"#utility.yul\":19131:19148   */\n      and\n        /* \"#utility.yul\":19121:19148   */\n      swap2\n      pop\n        /* \"#utility.yul\":19089:19150   */\n    tag_559:\n        /* \"#utility.yul\":19196:19198   */\n      0x20\n        /* \"#utility.yul\":19188:19194   */\n      dup3\n        /* \"#utility.yul\":19185:19199   */\n      lt\n        /* \"#utility.yul\":19165:19183   */\n      dup2\n        /* \"#utility.yul\":19162:19200   */\n      eq\n        /* \"#utility.yul\":19159:19320   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":19242:19252   */\n      0x4e487b71\n        /* \"#utility.yul\":19237:19240   */\n      0xe0\n        /* \"#utility.yul\":19233:19253   */\n      shl\n        /* \"#utility.yul\":19230:19231   */\n      0x00\n        /* \"#utility.yul\":19223:19254   */\n      mstore\n        /* \"#utility.yul\":19277:19281   */\n      0x22\n        /* \"#utility.yul\":19274:19275   */\n      0x04\n        /* \"#utility.yul\":19267:19282   */\n      mstore\n        /* \"#utility.yul\":19305:19309   */\n      0x24\n        /* \"#utility.yul\":19302:19303   */\n      0x00\n        /* \"#utility.yul\":19295:19310   */\n      revert\n        /* \"#utility.yul\":19159:19320   */\n    tag_560:\n      pop\n        /* \"#utility.yul\":18946:19326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19331:19580   */\n    tag_411:\n        /* \"#utility.yul\":19441:19443   */\n      0x1f\n        /* \"#utility.yul\":19422:19435   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":19418:19445   */\n      and\n        /* \"#utility.yul\":19406:19446   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":19461:19495   */\n      dup2\n      gt\n        /* \"#utility.yul\":19497:19519   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":19458:19520   */\n      or\n        /* \"#utility.yul\":19455:19543   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":19523:19541   */\n      tag_563\n      tag_164\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19559:19561   */\n      0x40\n        /* \"#utility.yul\":19552:19574   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":19331:19580   */\n      jump\t// out\n        /* \"#utility.yul\":19585:19720   */\n    tag_178:\n        /* \"#utility.yul\":19624:19627   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":19645:19662   */\n      dup3\n      eq\n        /* \"#utility.yul\":19642:19685   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":19665:19683   */\n      tag_566\n      tag_551\n      jump\t// in\n    tag_566:\n      pop\n        /* \"#utility.yul\":19712:19713   */\n      0x01\n        /* \"#utility.yul\":19701:19714   */\n      add\n      swap1\n        /* \"#utility.yul\":19585:19720   */\n      jump\t// out\n        /* \"#utility.yul\":19725:19852   */\n    tag_551:\n        /* \"#utility.yul\":19786:19796   */\n      0x4e487b71\n        /* \"#utility.yul\":19781:19784   */\n      0xe0\n        /* \"#utility.yul\":19777:19797   */\n      shl\n        /* \"#utility.yul\":19774:19775   */\n      0x00\n        /* \"#utility.yul\":19767:19798   */\n      mstore\n        /* \"#utility.yul\":19817:19821   */\n      0x11\n        /* \"#utility.yul\":19814:19815   */\n      0x04\n        /* \"#utility.yul\":19807:19822   */\n      mstore\n        /* \"#utility.yul\":19841:19845   */\n      0x24\n        /* \"#utility.yul\":19838:19839   */\n      0x00\n        /* \"#utility.yul\":19831:19846   */\n      revert\n        /* \"#utility.yul\":19857:19984   */\n    tag_172:\n        /* \"#utility.yul\":19918:19928   */\n      0x4e487b71\n        /* \"#utility.yul\":19913:19916   */\n      0xe0\n        /* \"#utility.yul\":19909:19929   */\n      shl\n        /* \"#utility.yul\":19906:19907   */\n      0x00\n        /* \"#utility.yul\":19899:19930   */\n      mstore\n        /* \"#utility.yul\":19949:19953   */\n      0x32\n        /* \"#utility.yul\":19946:19947   */\n      0x04\n        /* \"#utility.yul\":19939:19954   */\n      mstore\n        /* \"#utility.yul\":19973:19977   */\n      0x24\n        /* \"#utility.yul\":19970:19971   */\n      0x00\n        /* \"#utility.yul\":19963:19978   */\n      revert\n        /* \"#utility.yul\":19989:20116   */\n    tag_164:\n        /* \"#utility.yul\":20050:20060   */\n      0x4e487b71\n        /* \"#utility.yul\":20045:20048   */\n      0xe0\n        /* \"#utility.yul\":20041:20061   */\n      shl\n        /* \"#utility.yul\":20038:20039   */\n      0x00\n        /* \"#utility.yul\":20031:20062   */\n      mstore\n        /* \"#utility.yul\":20081:20085   */\n      0x41\n        /* \"#utility.yul\":20078:20079   */\n      0x04\n        /* \"#utility.yul\":20071:20086   */\n      mstore\n        /* \"#utility.yul\":20105:20109   */\n      0x24\n        /* \"#utility.yul\":20102:20103   */\n      0x00\n        /* \"#utility.yul\":20095:20110   */\n      revert\n        /* \"#utility.yul\":20121:20300   */\n    tag_363:\n        /* \"#utility.yul\":20156:20159   */\n      0x00\n        /* \"#utility.yul\":20198:20199   */\n      0x03\n        /* \"#utility.yul\":20180:20196   */\n      returndatasize\n        /* \"#utility.yul\":20177:20200   */\n      gt\n        /* \"#utility.yul\":20174:20294   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":20244:20245   */\n      0x04\n        /* \"#utility.yul\":20241:20242   */\n      0x00\n        /* \"#utility.yul\":20238:20239   */\n      dup1\n        /* \"#utility.yul\":20223:20246   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":20281:20282   */\n      0x00\n        /* \"#utility.yul\":20275:20283   */\n      mload\n        /* \"#utility.yul\":20270:20273   */\n      0xe0\n        /* \"#utility.yul\":20266:20284   */\n      shr\n        /* \"#utility.yul\":20174:20294   */\n    tag_571:\n        /* \"#utility.yul\":20121:20300   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20305:20976   */\n    tag_365:\n        /* \"#utility.yul\":20344:20347   */\n      0x00\n        /* \"#utility.yul\":20386:20390   */\n      0x44\n        /* \"#utility.yul\":20368:20384   */\n      returndatasize\n        /* \"#utility.yul\":20365:20391   */\n      lt\n        /* \"#utility.yul\":20362:20401   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":20305:20976   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20362:20401   */\n    tag_573:\n        /* \"#utility.yul\":20428:20430   */\n      0x40\n        /* \"#utility.yul\":20422:20431   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":20493:20509   */\n      returndatasize\n        /* \"#utility.yul\":20489:20514   */\n      dup2\n      add\n        /* \"#utility.yul\":20486:20487   */\n      0x04\n        /* \"#utility.yul\":20422:20431   */\n      dup4\n        /* \"#utility.yul\":20465:20515   */\n      returndatacopy\n        /* \"#utility.yul\":20544:20548   */\n      dup2\n        /* \"#utility.yul\":20538:20549   */\n      mload\n        /* \"#utility.yul\":20568:20584   */\n      returndatasize\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":20674:20676   */\n      dup2\n        /* \"#utility.yul\":20667:20671   */\n      0x24\n        /* \"#utility.yul\":20659:20665   */\n      dup5\n        /* \"#utility.yul\":20655:20672   */\n      add\n        /* \"#utility.yul\":20652:20677   */\n      gt\n        /* \"#utility.yul\":20647:20649   */\n      dup2\n        /* \"#utility.yul\":20639:20645   */\n      dup5\n        /* \"#utility.yul\":20636:20650   */\n      gt\n        /* \"#utility.yul\":20633:20678   */\n      or\n        /* \"#utility.yul\":20630:20688   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":20681:20686   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20305:20976   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20630:20688   */\n    tag_574:\n        /* \"#utility.yul\":20718:20724   */\n      dup3\n        /* \"#utility.yul\":20712:20716   */\n      dup6\n        /* \"#utility.yul\":20708:20725   */\n      add\n        /* \"#utility.yul\":20697:20725   */\n      swap2\n      pop\n        /* \"#utility.yul\":20754:20757   */\n      dup2\n        /* \"#utility.yul\":20748:20758   */\n      mload\n        /* \"#utility.yul\":20781:20783   */\n      dup2\n        /* \"#utility.yul\":20773:20779   */\n      dup2\n        /* \"#utility.yul\":20770:20784   */\n      gt\n        /* \"#utility.yul\":20767:20794   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":20787:20792   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20305:20976   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20767:20794   */\n    tag_575:\n        /* \"#utility.yul\":20871:20873   */\n      dup5\n        /* \"#utility.yul\":20852:20868   */\n      returndatasize\n        /* \"#utility.yul\":20846:20850   */\n      dup8\n        /* \"#utility.yul\":20842:20869   */\n      add\n        /* \"#utility.yul\":20838:20874   */\n      add\n        /* \"#utility.yul\":20831:20835   */\n      0x20\n        /* \"#utility.yul\":20822:20828   */\n      dup3\n        /* \"#utility.yul\":20817:20820   */\n      dup6\n        /* \"#utility.yul\":20813:20829   */\n      add\n        /* \"#utility.yul\":20809:20836   */\n      add\n        /* \"#utility.yul\":20806:20875   */\n      gt\n        /* \"#utility.yul\":20803:20885   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":20878:20883   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20305:20976   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20803:20885   */\n    tag_576:\n        /* \"#utility.yul\":20894:20951   */\n      tag_577\n        /* \"#utility.yul\":20945:20949   */\n      0x20\n        /* \"#utility.yul\":20936:20942   */\n      dup3\n        /* \"#utility.yul\":20928:20934   */\n      dup7\n        /* \"#utility.yul\":20924:20943   */\n      add\n        /* \"#utility.yul\":20920:20950   */\n      add\n        /* \"#utility.yul\":20914:20918   */\n      dup8\n        /* \"#utility.yul\":20894:20951   */\n      tag_411\n      jump\t// in\n    tag_577:\n      pop\n        /* \"#utility.yul\":20967:20970   */\n      swap1\n      swap6\n        /* \"#utility.yul\":20305:20976   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20981:21112   */\n    tag_488:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":21055:21087   */\n      dup2\n      and\n        /* \"#utility.yul\":21045:21088   */\n      dup2\n      eq\n        /* \"#utility.yul\":21035:21106   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":21102:21103   */\n      0x00\n        /* \"#utility.yul\":21099:21100   */\n      dup1\n        /* \"#utility.yul\":21092:21104   */\n      revert\n\n    auxdata: 0xa2646970667358221220775d34866ffe9410ac6e08d93eb10739944d4e11b0e70c656dcdf374a641c2e264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_271": {
									"entryPoint": null,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_876": {
									"entryPoint": 73,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 98,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:10"
															},
															"nodeType": "YulIf",
															"src": "157:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:10"
															},
															"nodeType": "YulIf",
															"src": "227:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:10",
														"type": ""
													}
												],
												"src": "14:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051806060016040528060278152602001620020d260279139620000378162000049565b50620000433362000062565b62000197565b80516200005e906002906020840190620000b4565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b600181811c908216806200016f57607f821691505b602082108114156200019157634e487b7160e01b600052602260045260246000fd5b50919050565b611f2b80620001a76000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c806371ac14e6116100a2578063a22cb46511610071578063a22cb46514610243578063ad974f4c14610256578063e985e9c51461025e578063f242432a1461029a578063f2fde38b146102ad57600080fd5b806371ac14e6146101f95780637824407f1461020c5780638da5cb5b146102155780639416308e1461023057600080fd5b80630e89341c116100e95780630e89341c1461018b5780631f7fdffa146101ab5780632eb2c2d6146101be5780634e1273f4146101d1578063715018a6146101f157600080fd5b8062fdd58e1461011a57806301ffc9a71461014057806302fe530514610163578063092f2dbf14610178575b600080fd5b61012d6101283660046117ec565b6102c0565b6040519081526020015b60405180910390f35b61015361014e366004611919565b610357565b6040519015158152602001610137565b610176610171366004611953565b6103a9565b005b610176610186366004611816565b6103df565b61019e6101993660046119a3565b61043a565b6040516101379190611b5d565b6101766101b9366004611718565b6104ce565b6101766101cc36600461160b565b61051c565b6101e46101df366004611849565b6105b3565b6040516101379190611b1c565b6101766106dc565b6101766102073660046119a3565b610712565b61012d60045481565b6003546040516001600160a01b039091168152602001610137565b61017661023e3660046119bc565b61087d565b6101766102513660046117b0565b61099a565b60045461012d565b61015361026c3660046115d8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101766102a83660046116b4565b6109a9565b6101766102bb3660046115bd565b6109ee565b60006001600160a01b0383166103315760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061038857506001600160e01b031982166303a24d0760e21b145b806103a357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103d35760405162461bcd60e51b815260040161032890611c90565b6103dc81610a86565b50565b6001600160a01b0383163314806103fb57506103fb833361026c565b6104175760405162461bcd60e51b815260040161032890611bb8565b610422838383610a99565b60046000815461043190611d5f565b90915550505050565b60606002805461044990611d76565b80601f016020809104026020016040519081016040528092919081815260200182805461047590611d76565b80156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b50505050509050919050565b6003546001600160a01b031633146104f85760405162461bcd60e51b815260040161032890611c90565b61050484848484610c13565b82516004546105139190611d30565b60045550505050565b6001600160a01b0385163314806105385750610538853361026c565b61059f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610328565b6105ac8585858585610d98565b5050505050565b606081518351146106185760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610328565b600083516001600160401b0381111561063357610633611e24565b60405190808252806020026020018201604052801561065c578160200160208202803683370190505b50905060005b84518110156106d4576106a785828151811061068057610680611e0e565b602002602001015185838151811061069a5761069a611e0e565b60200260200101516102c0565b8282815181106106b9576106b9611e0e565b60209081029190910101526106cd81611ddd565b9050610662565b509392505050565b6003546001600160a01b031633146107065760405162461bcd60e51b815260040161032890611c90565b6107106000610f34565b565b6003546001600160a01b0316331461073c5760405162461bcd60e51b815260040161032890611c90565b6000816001600160401b0381111561075657610756611e24565b60405190808252806020026020018201604052801561077f578160200160208202803683370190505b5090506000826001600160401b0381111561079c5761079c611e24565b6040519080825280602002602001820160405280156107c5578160200160208202803683370190505b506004549091505b6004546107da9085611d30565b81101561084b578083600454836107f19190611d48565b8151811061080157610801611e0e565b6020026020010181815250506001826004548361081e9190611d48565b8151811061082e5761082e611e0e565b60209081029190910101528061084381611ddd565b9150506107cd565b5061086733838360405180602001604052806000815250610c13565b826004546108759190611d30565b600455505050565b6000826001600160401b0381111561089757610897611e24565b6040519080825280602002602001820160405280156108c0578160200160208202803683370190505b5090506000836001600160401b038111156108dd576108dd611e24565b604051908082528060200260200182016040528015610906578160200160208202803683370190505b509050845b6109158686611d30565b81101561097d5780836109288883611d48565b8151811061093857610938611e0e565b60209081029190910101526001826109508884611d48565b8151811061096057610960611e0e565b60209081029190910101528061097581611ddd565b91505061090b565b506105ac338484846040518060200160405280600081525061051c565b6109a5338383610f86565b5050565b6001600160a01b0385163314806109c557506109c5853361026c565b6109e15760405162461bcd60e51b815260040161032890611bb8565b6105ac8585858585611067565b6003546001600160a01b03163314610a185760405162461bcd60e51b815260040161032890611c90565b6001600160a01b038116610a7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610328565b6103dc81610f34565b80516109a590600290602084019061140d565b6001600160a01b038316610afb5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610328565b33610b2b81856000610b0c8761118d565b610b158761118d565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610ba85760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610328565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038416610c735760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610328565b8151835114610c945760405162461bcd60e51b815260040161032890611cc5565b3360005b8451811015610d3057838181518110610cb357610cb3611e0e565b6020026020010151600080878481518110610cd057610cd0611e0e565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d189190611d30565b90915550819050610d2881611ddd565b915050610c98565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d81929190611b2f565b60405180910390a46105ac816000878787876111d8565b8151835114610db95760405162461bcd60e51b815260040161032890611cc5565b6001600160a01b038416610ddf5760405162461bcd60e51b815260040161032890611c01565b3360005b8451811015610ec6576000858281518110610e0057610e00611e0e565b602002602001015190506000858381518110610e1e57610e1e611e0e565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610e6e5760405162461bcd60e51b815260040161032890611c46565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610eab908490611d30565b9250508190555050505080610ebf90611ddd565b9050610de3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f16929190611b2f565b60405180910390a4610f2c8187878787876111d8565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610ffa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610328565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661108d5760405162461bcd60e51b815260040161032890611c01565b336110a681878761109d8861118d565b6105ac8861118d565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156110e75760405162461bcd60e51b815260040161032890611c46565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611124908490611d30565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611184828888888888611343565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106111c7576111c7611e0e565b602090810291909101015292915050565b6001600160a01b0384163b15610f2c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061121c9089908990889088908890600401611a79565b602060405180830381600087803b15801561123657600080fd5b505af1925050508015611266575060408051601f3d908101601f1916820190925261126391810190611936565b60015b61131357611272611e3a565b806308c379a014156112ac5750611287611e56565b8061129257506112ae565b8060405162461bcd60e51b81526004016103289190611b5d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610328565b6001600160e01b0319811663bc197c8160e01b146111845760405162461bcd60e51b815260040161032890611b70565b6001600160a01b0384163b15610f2c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113879089908990889088908890600401611ad7565b602060405180830381600087803b1580156113a157600080fd5b505af19250505080156113d1575060408051601f3d908101601f191682019092526113ce91810190611936565b60015b6113dd57611272611e3a565b6001600160e01b0319811663f23a6e6160e01b146111845760405162461bcd60e51b815260040161032890611b70565b82805461141990611d76565b90600052602060002090601f01602090048101928261143b5760008555611481565b82601f1061145457805160ff1916838001178555611481565b82800160010185558215611481579182015b82811115611481578251825591602001919060010190611466565b5061148d929150611491565b5090565b5b8082111561148d5760008155600101611492565b60006001600160401b038311156114bf576114bf611e24565b6040516114d6601f8501601f191660200182611db1565b8091508381528484840111156114eb57600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461151a57600080fd5b919050565b600082601f83011261153057600080fd5b8135602061153d82611d0d565b60405161154a8282611db1565b8381528281019150858301600585901b8701840188101561156a57600080fd5b60005b858110156115895781358452928401929084019060010161156d565b5090979650505050505050565b600082601f8301126115a757600080fd5b6115b6838335602085016114a6565b9392505050565b6000602082840312156115cf57600080fd5b6115b682611503565b600080604083850312156115eb57600080fd5b6115f483611503565b915061160260208401611503565b90509250929050565b600080600080600060a0868803121561162357600080fd5b61162c86611503565b945061163a60208701611503565b935060408601356001600160401b038082111561165657600080fd5b61166289838a0161151f565b9450606088013591508082111561167857600080fd5b61168489838a0161151f565b9350608088013591508082111561169a57600080fd5b506116a788828901611596565b9150509295509295909350565b600080600080600060a086880312156116cc57600080fd5b6116d586611503565b94506116e360208701611503565b9350604086013592506060860135915060808601356001600160401b0381111561170c57600080fd5b6116a788828901611596565b6000806000806080858703121561172e57600080fd5b61173785611503565b935060208501356001600160401b038082111561175357600080fd5b61175f8883890161151f565b9450604087013591508082111561177557600080fd5b6117818883890161151f565b9350606087013591508082111561179757600080fd5b506117a487828801611596565b91505092959194509250565b600080604083850312156117c357600080fd5b6117cc83611503565b9150602083013580151581146117e157600080fd5b809150509250929050565b600080604083850312156117ff57600080fd5b61180883611503565b946020939093013593505050565b60008060006060848603121561182b57600080fd5b61183484611503565b95602085013595506040909401359392505050565b6000806040838503121561185c57600080fd5b82356001600160401b038082111561187357600080fd5b818501915085601f83011261188757600080fd5b8135602061189482611d0d565b6040516118a18282611db1565b8381528281019150858301600585901b870184018b10156118c157600080fd5b600096505b848710156118eb576118d781611503565b8352600196909601959183019183016118c6565b509650508601359250508082111561190257600080fd5b5061190f8582860161151f565b9150509250929050565b60006020828403121561192b57600080fd5b81356115b681611edf565b60006020828403121561194857600080fd5b81516115b681611edf565b60006020828403121561196557600080fd5b81356001600160401b0381111561197b57600080fd5b8201601f8101841361198c57600080fd5b61199b848235602084016114a6565b949350505050565b6000602082840312156119b557600080fd5b5035919050565b6000806000606084860312156119d157600080fd5b83359250602084013591506119e860408501611503565b90509250925092565b600081518084526020808501945080840160005b83811015611a2157815187529582019590820190600101611a05565b509495945050505050565b6000815180845260005b81811015611a5257602081850181015186830182015201611a36565b81811115611a64576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611aa5908301866119f1565b8281036060840152611ab781866119f1565b90508281036080840152611acb8185611a2c565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611b1190830184611a2c565b979650505050505050565b6020815260006115b660208301846119f1565b604081526000611b4260408301856119f1565b8281036020840152611b5481856119f1565b95945050505050565b6020815260006115b66020830184611a2c565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60006001600160401b03821115611d2657611d26611e24565b5060051b60200190565b60008219821115611d4357611d43611df8565b500190565b600082821015611d5a57611d5a611df8565b500390565b600081611d6e57611d6e611df8565b506000190190565b600181811c90821680611d8a57607f821691505b60208210811415611dab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b0381118282101715611dd657611dd6611e24565b6040525050565b6000600019821415611df157611df1611df8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611e535760046000803e5060005160e01c5b90565b600060443d1015611e645790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715611e9357505050505090565b8285019150815181811115611eab5750505050505090565b843d8701016020828501011115611ec55750505050505090565b611ed460208286010187611db1565b509095945050505050565b6001600160e01b0319811681146103dc57600080fdfea2646970667358221220775d34866ffe9410ac6e08d93eb10739944d4e11b0e70c656dcdf374a641c2e264736f6c6343000807003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x20D2 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x49 JUMP JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0x62 JUMP JUMPDEST PUSH3 0x197 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5E SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xC2 SWAP1 PUSH3 0x15A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xE6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x131 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x101 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x131 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x131 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x131 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x114 JUMP JUMPDEST POP PUSH3 0x13F SWAP3 SWAP2 POP PUSH3 0x143 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x144 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x16F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x191 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2B DUP1 PUSH3 0x1A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x388 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xA86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x422 DUP4 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x504 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x538 JUMPI POP PUSH2 0x538 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x633 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6A7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CD DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x0 PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79C PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DA SWAP1 DUP6 PUSH2 0x1D30 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84B JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82E PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x843 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CD JUMP JUMPDEST POP PUSH2 0x867 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC13 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x906 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x915 DUP7 DUP7 PUSH2 0x1D30 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97D JUMPI DUP1 DUP4 PUSH2 0x928 DUP9 DUP4 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x950 DUP9 DUP5 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x975 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0x5AC CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51C JUMP JUMPDEST PUSH2 0x9A5 CALLER DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xF34 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9A5 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB2B DUP2 DUP6 PUSH1 0x0 PUSH2 0xB0C DUP8 PUSH2 0x118D JUMP JUMPDEST PUSH2 0xB15 DUP8 PUSH2 0x118D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AC DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D8 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEAB SWAP1 DUP5 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEBF SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF2C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST CALLER PUSH2 0x10A6 DUP2 DUP8 DUP8 PUSH2 0x109D DUP9 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x5AC DUP9 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1124 SWAP1 DUP5 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1184 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1343 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x121C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1266 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1263 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1313 JUMPI PUSH2 0x1272 PUSH2 0x1E3A JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x12AC JUMPI POP PUSH2 0x1287 PUSH2 0x1E56 JUMP JUMPDEST DUP1 PUSH2 0x1292 JUMPI POP PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1387 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13D1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13CE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13DD JUMPI PUSH2 0x1272 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1419 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x143B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1481 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1454 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1481 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1481 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1481 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1466 JUMP JUMPDEST POP PUSH2 0x148D SWAP3 SWAP2 POP PUSH2 0x1491 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x148D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BF PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D6 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x151A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x153D DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154A DUP3 DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1589 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x156D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B6 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B6 DUP3 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F4 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 PUSH1 0x20 DUP5 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162C DUP7 PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH2 0x163A PUSH1 0x20 DUP8 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1662 DUP10 DUP4 DUP11 ADD PUSH2 0x151F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1684 DUP10 DUP4 DUP11 ADD PUSH2 0x151F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP7 PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH2 0x16E3 PUSH1 0x20 DUP8 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP6 PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175F DUP9 DUP4 DUP10 ADD PUSH2 0x151F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1781 DUP9 DUP4 DUP10 ADD PUSH2 0x151F JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A4 DUP8 DUP3 DUP9 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CC DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1808 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1834 DUP5 PUSH2 0x1503 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1894 DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A1 DUP3 DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18D7 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18C6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190F DUP6 DUP3 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B6 DUP2 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15B6 DUP2 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x197B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x198C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x199B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19E8 PUSH1 0x40 DUP6 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A05 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1A36 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AA5 SWAP1 DUP4 ADD DUP7 PUSH2 0x19F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1AB7 DUP2 DUP7 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1ACB DUP2 DUP6 PUSH2 0x1A2C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B11 SWAP1 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B42 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B54 DUP2 DUP6 PUSH2 0x19F1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D26 PUSH2 0x1E24 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D43 PUSH2 0x1DF8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D5A PUSH2 0x1DF8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D6E JUMPI PUSH2 0x1D6E PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D8A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1DD6 JUMPI PUSH2 0x1DD6 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DF1 JUMPI PUSH2 0x1DF1 PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E64 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1E93 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EAB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EC5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1ED4 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1DB1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5D34866FFE9410AC6E08D93EB10739944D4E11B0E70C656D 0xCD RETURN PUSH21 0xA641C2E264736F6C6343000807003368747470733A 0x2F 0x2F PUSH8 0x616D652E6578616D PUSH17 0x6C652F6170692F6974656D2F7B69647D2E PUSH11 0x736F6E0000000000000000 ",
							"sourceMap": "184:1847:0:-:0;;;269:73;;;;;;;;;;1126:64:2;;;;;;;;;;;;;;;;;1169:13;1177:4;1169:7;:13::i;:::-;-1:-1:-1;949:32:1;736:10:7;949:18:1;:32::i;:::-;184:1847:0;;8180:88:2;8247:13;;;;:4;;:13;;;;;:::i;:::-;;8180:88;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;184:1847:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;184:1847:0;;;-1:-1:-1;184:1847:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;184:1847:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 4493,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burn_1129": {
									"entryPoint": 2713,
									"id": 1129,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 4568,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 4931,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1050": {
									"entryPoint": 3091,
									"id": 1050,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 3480,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 4199,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 3974,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 2694,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 3892,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 1459,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 704,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@brun_246": {
									"entryPoint": 991,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getTokenSupply_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatchWithNumber_91": {
									"entryPoint": 1810,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintBatch_205": {
									"entryPoint": 1230,
									"id": 205,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_308": {
									"entryPoint": 1756,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 1308,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 2473,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 2458,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_175": {
									"entryPoint": 937,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 855,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_331": {
									"entryPoint": 2542,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithNumber_163": {
									"entryPoint": 2173,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@uri_440": {
									"entryPoint": 1082,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 7766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21114:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:394:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "132:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "134:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "134:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "134:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "104:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "112:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "101:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:30:10"
															},
															"nodeType": "YulIf",
															"src": "98:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "163:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "183:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "177:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "167:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "215:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "235:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "243:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "227:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "227:29:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "223:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "223:40:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "195:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:69:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "273:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "282:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "273:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "312:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "297:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "338:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "343:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "334:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "352:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "331:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "331:25:10"
															},
															"nodeType": "YulIf",
															"src": "328:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "399:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "407:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "395:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "414:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "382:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "450:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "458:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "467:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "435:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:10",
														"type": ""
													}
												],
												"src": "14:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "536:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "546:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "568:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "555:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "546:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "650:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "640:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "640:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "640:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "597:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "608:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "623:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "628:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "619:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "619:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "632:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "615:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "615:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "604:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "604:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "594:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "594:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:50:10"
															},
															"nodeType": "YulIf",
															"src": "584:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "515:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "526:5:10",
														"type": ""
													}
												],
												"src": "487:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "729:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "778:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "787:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "790:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "757:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "765:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "753:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "772:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:35:10"
															},
															"nodeType": "YulIf",
															"src": "739:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "803:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "813:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "807:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "842:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "852:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "846:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "865:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "915:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "875:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "869:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "947:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "941:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "931:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "979:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "959:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "999:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1010:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1003:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1032:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1040:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1063:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1071:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1052:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1083:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1106:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1087:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1163:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1172:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1165:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1165:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1165:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1132:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1144:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1147:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1140:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1140:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1128:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1128:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1153:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1158:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:41:10"
															},
															"nodeType": "YulIf",
															"src": "1118:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1188:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1197:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1192:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1252:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1273:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1291:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1278:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1278:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1266:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1309:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1325:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1316:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1316:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1309:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1341:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1352:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1357:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1348:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1341:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1218:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1221:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1215:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1225:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1227:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1236:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1232:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1227:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1211:3:10",
																"statements": []
															},
															"src": "1207:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1379:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1388:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1379:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "703:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "711:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "719:5:10",
														"type": ""
													}
												],
												"src": "665:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1457:168:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1506:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1515:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1518:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1508:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1508:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1485:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1493:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1500:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:35:10"
															},
															"nodeType": "YulIf",
															"src": "1467:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1531:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1578:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1586:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1574:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1606:6:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1593:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:20:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1615:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1540:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1531:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1431:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1439:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1447:5:10",
														"type": ""
													}
												],
												"src": "1405:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1700:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1746:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1758:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1721:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1730:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1713:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1713:32:10"
															},
															"nodeType": "YulIf",
															"src": "1710:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1771:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1800:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1781:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1666:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1677:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1689:6:10",
														"type": ""
													}
												],
												"src": "1630:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1954:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1956:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1956:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1956:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1929:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1938:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1925:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1921:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:32:10"
															},
															"nodeType": "YulIf",
															"src": "1918:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1979:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2008:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1989:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2027:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2071:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2037:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1866:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1877:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1889:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1897:6:10",
														"type": ""
													}
												],
												"src": "1821:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2342:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2332:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:33:10"
															},
															"nodeType": "YulIf",
															"src": "2293:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2355:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2365:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2355:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2403:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2436:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2447:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2413:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2460:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2502:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2474:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2464:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2515:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2525:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2519:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2570:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2572:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2558:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2566:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2555:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:14:10"
															},
															"nodeType": "YulIf",
															"src": "2552:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2595:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2638:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2649:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2658:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2605:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2675:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2708:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2704:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2704:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2691:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2679:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2752:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2738:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2748:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2735:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:16:10"
															},
															"nodeType": "YulIf",
															"src": "2732:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2820:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2831:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2842:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2787:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2859:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2892:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2903:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2888:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2875:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2863:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2937:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2949:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2939:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2923:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2933:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2920:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:16:10"
															},
															"nodeType": "YulIf",
															"src": "2917:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2962:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3004:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3015:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2972:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2217:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2228:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2240:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2248:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2256:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2264:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2272:6:10",
														"type": ""
													}
												],
												"src": "2086:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3228:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3237:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3240:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3230:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3230:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3230:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3202:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3211:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3194:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:33:10"
															},
															"nodeType": "YulIf",
															"src": "3191:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3253:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3263:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3301:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3334:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3345:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3330:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3311:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3358:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3368:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3409:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3419:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3460:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3502:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3474:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3464:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3522:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3519:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:30:10"
															},
															"nodeType": "YulIf",
															"src": "3516:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3575:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3617:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3626:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3585:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3115:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3126:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3138:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3146:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3154:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3162:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3170:6:10",
														"type": ""
													}
												],
												"src": "3034:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3825:688:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3872:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3881:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3874:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3874:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3874:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3846:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3842:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3867:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:33:10"
															},
															"nodeType": "YulIf",
															"src": "3835:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3897:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3926:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3907:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3897:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3945:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3959:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3949:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4000:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4010:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4004:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4055:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4064:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4067:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4057:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4057:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4043:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4051:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4040:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:14:10"
															},
															"nodeType": "YulIf",
															"src": "4037:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4080:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4123:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4119:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4143:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4090:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:61:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4160:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4193:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4204:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4176:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4164:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4223:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4233:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4220:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:16:10"
															},
															"nodeType": "YulIf",
															"src": "4217:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4262:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4305:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4316:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4301:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4327:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4272:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:63:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4344:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4377:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4388:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4373:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4360:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4348:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4421:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4423:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4423:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4407:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4417:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4404:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:16:10"
															},
															"nodeType": "YulIf",
															"src": "4401:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4446:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4477:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4488:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4473:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4499:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4456:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:51:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4446:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3767:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3778:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3790:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3798:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3806:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3814:6:10",
														"type": ""
													}
												],
												"src": "3645:868:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4602:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4648:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4657:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4660:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4650:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4650:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4650:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4623:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4619:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4619:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:32:10"
															},
															"nodeType": "YulIf",
															"src": "4612:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4673:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4683:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4673:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4721:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4751:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4762:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4747:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4734:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4725:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4819:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4828:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4831:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4788:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4809:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4802:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4802:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4795:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4795:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4785:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4785:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4778:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4778:40:10"
															},
															"nodeType": "YulIf",
															"src": "4775:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4844:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4854:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4560:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4571:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4583:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4591:6:10",
														"type": ""
													}
												],
												"src": "4518:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5003:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5012:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5015:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5005:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5005:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5005:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4978:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4987:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:32:10"
															},
															"nodeType": "YulIf",
															"src": "4967:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5028:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5057:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5038:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5076:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5103:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5114:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5099:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5099:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5086:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4915:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4926:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4938:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4946:6:10",
														"type": ""
													}
												],
												"src": "4870:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5233:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5288:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5291:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5281:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5254:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5246:32:10"
															},
															"nodeType": "YulIf",
															"src": "5243:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5304:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5333:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5314:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5352:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5390:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5430:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5441:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5426:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5413:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5403:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5183:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5194:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5206:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5214:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5222:6:10",
														"type": ""
													}
												],
												"src": "5129:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5593:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5614:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5623:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5635:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5606:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:32:10"
															},
															"nodeType": "YulIf",
															"src": "5603:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5664:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5691:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5678:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5668:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5710:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5720:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5714:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5765:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5774:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5777:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5767:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5767:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5767:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5753:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5761:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:14:10"
															},
															"nodeType": "YulIf",
															"src": "5747:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5790:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5794:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5870:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5879:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5882:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5872:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5872:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5872:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5849:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5853:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5845:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5845:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5841:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5841:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5834:35:10"
															},
															"nodeType": "YulIf",
															"src": "5831:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5895:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5918:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5905:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5899:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5930:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5940:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5934:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5953:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6003:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5963:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5957:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6015:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6029:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6019:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6067:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6075:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6047:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6047:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6087:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6098:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6091:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6120:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6128:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6113:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6140:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6151:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6159:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6147:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6140:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6171:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6186:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6190:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6182:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6175:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6247:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6256:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6259:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6249:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6249:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6249:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6216:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6224:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "6227:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6220:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6220:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6212:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6212:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6233:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6238:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6205:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:41:10"
															},
															"nodeType": "YulIf",
															"src": "6202:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6272:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6281:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6276:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6336:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6357:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6381:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6362:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6362:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6350:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6350:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6350:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6399:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6410:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6415:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6406:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6406:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6431:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6442:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6447:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6438:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6438:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6431:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6302:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6305:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6299:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6309:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6311:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6320:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6323:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6316:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6316:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6311:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6295:3:10",
																"statements": []
															},
															"src": "6291:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6469:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6479:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6469:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6494:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6527:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6538:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6510:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6498:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6571:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6580:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6583:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6573:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6573:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6573:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6557:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6567:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6554:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:16:10"
															},
															"nodeType": "YulIf",
															"src": "6551:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6596:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6639:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6650:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6661:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6606:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6606:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6596:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5582:6:10",
														"type": ""
													}
												],
												"src": "5456:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6749:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6795:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6804:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6807:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6797:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6797:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6797:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6770:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6779:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6766:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:32:10"
															},
															"nodeType": "YulIf",
															"src": "6759:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6820:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6846:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6833:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6824:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6889:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6865:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6865:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6865:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6904:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6914:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6904:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6715:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6726:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6738:6:10",
														"type": ""
													}
												],
												"src": "6680:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7010:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7056:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7065:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7068:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7058:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7058:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7058:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7031:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7040:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7027:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7052:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:32:10"
															},
															"nodeType": "YulIf",
															"src": "7020:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7081:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7094:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7094:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7085:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7143:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "7119:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7119:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7158:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7168:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6976:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6987:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6999:6:10",
														"type": ""
													}
												],
												"src": "6930:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7264:370:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7310:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7319:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7312:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7312:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7312:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7285:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7294:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7281:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:32:10"
															},
															"nodeType": "YulIf",
															"src": "7274:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7335:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7362:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7349:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7339:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7424:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7427:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7417:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:10"
															},
															"nodeType": "YulIf",
															"src": "7381:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7440:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7454:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7465:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7450:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7444:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7520:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7529:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7532:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7522:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7522:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7522:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7499:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7503:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7495:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7495:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7510:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7491:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7491:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7484:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:35:10"
															},
															"nodeType": "YulIf",
															"src": "7481:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7545:83:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7615:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7602:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7620:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7555:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7555:73:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7545:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7230:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7241:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7253:6:10",
														"type": ""
													}
												],
												"src": "7184:450:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7709:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7755:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7764:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7767:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7757:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7757:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7730:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7739:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7726:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7751:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:32:10"
															},
															"nodeType": "YulIf",
															"src": "7719:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7780:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7803:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7790:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7675:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7686:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7698:6:10",
														"type": ""
													}
												],
												"src": "7639:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7928:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7974:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7983:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7986:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7976:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7976:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7976:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7949:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7958:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7945:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7941:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7941:32:10"
															},
															"nodeType": "YulIf",
															"src": "7938:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7999:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8022:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8009:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7999:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8041:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8068:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8079:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8064:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8064:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8051:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8041:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8092:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8102:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8102:38:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7878:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7889:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7901:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7909:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7917:6:10",
														"type": ""
													}
												],
												"src": "7824:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8212:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8222:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8242:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8236:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8226:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8264:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8269:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8257:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8257:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8285:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8295:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8289:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8308:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8319:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8324:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8308:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8336:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8354:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8361:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8350:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8340:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8373:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8382:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8377:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8441:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8462:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8473:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8467:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8467:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8455:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8455:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8494:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8505:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8510:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8501:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8501:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8494:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8526:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8540:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8548:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8536:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8536:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8526:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8403:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8406:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8400:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8414:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8416:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8425:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8428:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8421:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8421:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8416:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8396:3:10",
																"statements": []
															},
															"src": "8392:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8577:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8189:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8196:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8204:3:10",
														"type": ""
													}
												],
												"src": "8151:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8640:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8650:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8670:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8664:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8654:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8692:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8697:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8713:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8722:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8717:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8784:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8798:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8808:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8802:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8840:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8845:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8836:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8836:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "8849:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8832:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8832:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "8868:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "8875:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "8864:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8864:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "8879:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8860:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8860:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8854:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8854:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8825:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8825:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8825:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8743:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8746:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8740:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8754:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8756:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8765:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8768:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8761:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8761:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8756:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8736:3:10",
																"statements": []
															},
															"src": "8732:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8928:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8957:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "8962:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8953:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8953:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8971:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8949:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8949:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8942:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8942:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8909:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8912:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8906:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8906:13:10"
															},
															"nodeType": "YulIf",
															"src": "8903:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8999:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9014:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9027:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9035:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9023:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9023:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9044:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9040:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9040:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9019:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9019:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9010:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9051:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8617:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8624:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8632:3:10",
														"type": ""
													}
												],
												"src": "8591:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9190:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9178:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9220:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9235:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9251:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9256:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9247:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9247:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9260:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9243:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9243:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9231:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9213:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9213:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9137:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9148:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9159:4:10",
														"type": ""
													}
												],
												"src": "9067:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9606:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9616:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9634:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9639:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9630:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9643:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9626:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9620:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9661:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9676:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9684:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9672:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9654:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9654:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9708:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9719:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9704:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9704:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9728:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9736:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9724:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9697:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9697:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9697:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9789:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9832:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9855:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9803:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9793:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9880:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9891:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9876:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9900:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9908:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9869:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9928:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9971:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9979:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9942:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "9932:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10017:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10002:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "10027:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10035:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10023:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9995:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9995:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10080:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "10088:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10063:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10063:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10055:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9543:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9554:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9562:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9570:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9578:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9586:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9597:4:10",
														"type": ""
													}
												],
												"src": "9275:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10337:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10347:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10365:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10370:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10361:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10374:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10357:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10357:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10351:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10392:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10407:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10415:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10403:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10403:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10385:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10385:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10439:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10450:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10435:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10435:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10459:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10467:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10455:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10428:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10502:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10487:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10507:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10480:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10545:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10530:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10550:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10523:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10523:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10577:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10588:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10573:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10594:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10566:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10566:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10607:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10632:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10644:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10655:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10640:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10615:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10615:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10607:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10274:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10285:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10293:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10301:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10309:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10317:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10328:4:10",
														"type": ""
													}
												],
												"src": "10106:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10839:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10862:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10899:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10870:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10862:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10791:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10802:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10813:4:10",
														"type": ""
													}
												],
												"src": "10671:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11166:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11183:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11194:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11176:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11206:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11249:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11272:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11257:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11220:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11220:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11210:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11296:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11307:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11292:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11285:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11285:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11344:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11381:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11389:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11352:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11352:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11127:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11138:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11146:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11157:4:10",
														"type": ""
													}
												],
												"src": "10937:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11502:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11512:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11524:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11535:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11520:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11512:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11554:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11579:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11572:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11572:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11565:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11565:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11547:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11547:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11471:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11482:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11493:4:10",
														"type": ""
													}
												],
												"src": "11407:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11720:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11737:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11730:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11760:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11785:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11797:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11808:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11793:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11768:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11760:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11689:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11700:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11711:4:10",
														"type": ""
													}
												],
												"src": "11599:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11997:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12014:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12025:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12007:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12007:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12007:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12048:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12059:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12044:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12037:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12037:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12087:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12098:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12083:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12083:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12103:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12076:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12076:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12158:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12169:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12154:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12154:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12174:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12147:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12147:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12147:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12206:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12218:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12229:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12214:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12206:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11974:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11988:4:10",
														"type": ""
													}
												],
												"src": "11823:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12418:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12435:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12446:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12428:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12428:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12428:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12480:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12465:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12485:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12458:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12458:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12519:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12504:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12524:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12497:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12497:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12497:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12579:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12590:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12575:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12595:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12568:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12568:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12568:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12615:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12627:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12638:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12623:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12623:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12615:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12395:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12409:4:10",
														"type": ""
													}
												],
												"src": "12244:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12827:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12844:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12855:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12837:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12837:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12837:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12878:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12889:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12874:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12874:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12894:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12867:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12867:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12867:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12917:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12928:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12913:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12913:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12933:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12906:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12988:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12999:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12984:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12984:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13004:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12977:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12977:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12977:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13027:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13039:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13050:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13035:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13027:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12804:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12818:4:10",
														"type": ""
													}
												],
												"src": "12653:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13239:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13256:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13267:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13249:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13249:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13290:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13301:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13286:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13306:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13279:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13279:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13279:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13329:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13340:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13325:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13345:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13318:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13318:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13400:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13411:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13396:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13416:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13389:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13389:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13434:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13446:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13457:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13442:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13442:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13434:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13216:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13230:4:10",
														"type": ""
													}
												],
												"src": "13065:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13646:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13663:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13674:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13656:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13697:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13708:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13713:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13686:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13736:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13747:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13732:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13732:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13752:34:10",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13725:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13725:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13725:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13807:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13818:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13803:18:10"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13823:6:10",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13796:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13796:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13796:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13839:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13851:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13862:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13847:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13839:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13623:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13637:4:10",
														"type": ""
													}
												],
												"src": "13472:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14068:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14079:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14061:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14061:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14061:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14102:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14113:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14098:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14098:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14118:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14091:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14091:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14091:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14141:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14152:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14137:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14137:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14157:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14130:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14212:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14223:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14208:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14208:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14228:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14201:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14201:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14249:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14261:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14272:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14257:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14257:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14249:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14028:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14042:4:10",
														"type": ""
													}
												],
												"src": "13877:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14461:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14478:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14471:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14471:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14471:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14512:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14523:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14508:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14508:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14528:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14501:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14501:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14501:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14562:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14547:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14547:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14567:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14540:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14540:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14622:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14633:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14618:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14618:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14638:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14611:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14611:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14655:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14667:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14678:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14663:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14663:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14655:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14438:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14452:4:10",
														"type": ""
													}
												],
												"src": "14287:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14867:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14884:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14895:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14877:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14877:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14877:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14918:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14929:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14914:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14914:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14934:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14907:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14907:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14907:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14957:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14968:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14953:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14953:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14973:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14946:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14946:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15028:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15039:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15024:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15024:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15044:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15017:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15017:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15017:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15074:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15086:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15097:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15082:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15082:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14844:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14858:4:10",
														"type": ""
													}
												],
												"src": "14693:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15286:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15303:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15314:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15296:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15296:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15337:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15348:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15333:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15353:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15326:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15376:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15387:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15372:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15372:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15392:34:10",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15365:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15365:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15365:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15447:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15458:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15443:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15443:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15463:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15436:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15436:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15478:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15490:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15501:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15486:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15486:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15478:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15263:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15277:4:10",
														"type": ""
													}
												],
												"src": "15112:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15690:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15707:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15718:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15700:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15700:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15741:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15752:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15737:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15737:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15757:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15730:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15730:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15780:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15791:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15776:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15776:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15796:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15769:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15769:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15769:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15851:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15862:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15847:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15867:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15840:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15840:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15889:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15901:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15912:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15897:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15889:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15667:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15681:4:10",
														"type": ""
													}
												],
												"src": "15516:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16101:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16118:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16111:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16111:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16152:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16163:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16148:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16168:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16141:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16141:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16141:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16191:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16202:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16187:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16187:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16207:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16180:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16180:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16251:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16263:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16274:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16259:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16259:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16251:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16078:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16092:4:10",
														"type": ""
													}
												],
												"src": "15927:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16462:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16479:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16490:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16472:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16472:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16472:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16513:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16524:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16509:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16529:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16502:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16502:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16502:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16552:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16563:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16548:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16548:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16568:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16541:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16541:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16623:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16634:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16619:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16619:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16639:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16612:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16612:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16660:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16672:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16683:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16668:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16668:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16660:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16439:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16453:4:10",
														"type": ""
													}
												],
												"src": "16288:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16872:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16889:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16900:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16882:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16882:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16923:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16934:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16919:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16919:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16939:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16912:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16912:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16912:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16962:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16973:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16958:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16958:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16978:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16951:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16951:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16951:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17033:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17044:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17029:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17029:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17049:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17022:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17022:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17022:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17070:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17082:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17093:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17078:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17078:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17070:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16849:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16863:4:10",
														"type": ""
													}
												],
												"src": "16698:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17282:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17299:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17310:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17292:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17292:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17333:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17344:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17329:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17329:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17349:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17322:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17322:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17372:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17383:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17368:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17388:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17361:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17361:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17361:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17443:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17454:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17439:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17439:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17459:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17432:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17432:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17479:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17491:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17502:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17487:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17487:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17479:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17259:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17273:4:10",
														"type": ""
													}
												],
												"src": "17108:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17691:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17708:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17719:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17701:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17701:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17701:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17742:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17753:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17738:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17758:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17731:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17731:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17731:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17781:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17792:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17777:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17797:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17770:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17770:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17770:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17852:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17863:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17848:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17868:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17841:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17841:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17841:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17881:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17893:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17904:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17889:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17889:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17881:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17668:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17682:4:10",
														"type": ""
													}
												],
												"src": "17517:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18020:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18030:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18042:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18053:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18038:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18038:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18030:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18072:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18083:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18065:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18065:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17989:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18000:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18011:4:10",
														"type": ""
													}
												],
												"src": "17919:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18230:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18240:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18252:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18263:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18248:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18248:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18240:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18282:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18293:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18275:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18275:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18275:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18331:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18316:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18336:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18309:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18309:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18191:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18202:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18210:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18221:4:10",
														"type": ""
													}
												],
												"src": "18101:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18423:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18467:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18469:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18469:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18469:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18439:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18447:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18436:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18436:30:10"
															},
															"nodeType": "YulIf",
															"src": "18433:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18498:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18514:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18517:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18510:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18526:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18506:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18498:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18403:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18414:4:10",
														"type": ""
													}
												],
												"src": "18354:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18590:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18617:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18619:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18619:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18619:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18606:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18613:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18609:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18603:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18603:13:10"
															},
															"nodeType": "YulIf",
															"src": "18600:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18648:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18659:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18662:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18655:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18655:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18648:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18573:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18576:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18582:3:10",
														"type": ""
													}
												],
												"src": "18542:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18724:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18746:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18748:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18748:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18748:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18740:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18743:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18737:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18737:8:10"
															},
															"nodeType": "YulIf",
															"src": "18734:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18777:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18789:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18792:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18785:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18785:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18777:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18706:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18709:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18715:4:10",
														"type": ""
													}
												],
												"src": "18675:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18852:89:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18879:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18881:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18881:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18881:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18872:5:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18865:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18865:13:10"
															},
															"nodeType": "YulIf",
															"src": "18862:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18910:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18921:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18932:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18928:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18928:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18917:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18917:18:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18910:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18834:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18844:3:10",
														"type": ""
													}
												],
												"src": "18805:136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19001:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19011:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19025:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19028:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "19021:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19021:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19011:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19042:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19072:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19078:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19068:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19068:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "19046:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19119:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19121:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "19135:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19143:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "19131:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19131:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19121:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19099:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19092:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19092:26:10"
															},
															"nodeType": "YulIf",
															"src": "19089:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19209:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19237:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19242:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "19233:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19233:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19223:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19223:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19274:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19277:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19267:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19267:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19267:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19302:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19305:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19295:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19295:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19295:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19165:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19188:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19196:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19185:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19185:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19162:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19162:38:10"
															},
															"nodeType": "YulIf",
															"src": "19159:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18981:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18990:6:10",
														"type": ""
													}
												],
												"src": "18946:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19378:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19388:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "19410:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "19426:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19432:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19422:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19422:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19441:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "19437:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19437:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19418:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19406:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19406:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "19392:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19521:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "19523:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19523:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19523:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19464:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19476:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19461:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19461:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19500:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19512:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19497:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19497:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19458:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19458:62:10"
															},
															"nodeType": "YulIf",
															"src": "19455:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19559:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "19563:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19552:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19552:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19360:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "19368:4:10",
														"type": ""
													}
												],
												"src": "19331:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19632:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19663:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19665:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19665:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19665:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19648:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19659:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19655:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19655:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19645:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19645:17:10"
															},
															"nodeType": "YulIf",
															"src": "19642:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19694:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19705:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19712:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19701:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19701:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19694:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19614:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19624:3:10",
														"type": ""
													}
												],
												"src": "19585:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19757:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19774:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19781:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19786:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19777:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19767:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19767:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19814:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19817:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19807:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19807:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19807:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19838:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19841:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19831:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19831:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19725:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19889:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19906:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19913:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19918:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19909:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19899:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19899:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19899:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19946:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19949:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19939:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19939:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19970:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19973:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19963:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19963:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19963:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19857:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20021:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20038:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20045:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20050:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20041:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20031:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20031:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20078:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20081:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20071:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20071:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20071:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20102:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20105:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20095:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20095:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20095:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "19989:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20164:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20209:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20238:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20241:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20244:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "20223:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20223:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20223:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20259:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20270:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20281:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20275:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20275:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "20266:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20266:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "20259:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20180:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20180:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20198:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20177:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20177:23:10"
															},
															"nodeType": "YulIf",
															"src": "20174:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "20156:3:10",
														"type": ""
													}
												],
												"src": "20121:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20352:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20392:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20394:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20368:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20368:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20386:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20365:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20365:26:10"
															},
															"nodeType": "YulIf",
															"src": "20362:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20410:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20428:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20422:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20422:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "20414:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20440:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20454:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "20450:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20450:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20444:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20480:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20486:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20493:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20493:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20511:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20489:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20489:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "20465:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20465:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20465:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20524:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20544:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20538:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20538:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "20528:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20558:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "20568:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20568:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "20562:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20593:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20603:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "20597:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20679:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20681:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20639:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "20647:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20636:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20636:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20659:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20667:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20655:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "20674:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20652:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20652:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20633:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20633:45:10"
															},
															"nodeType": "YulIf",
															"src": "20630:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20697:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20712:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20718:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20708:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20708:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "20701:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20734:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "20754:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20748:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20748:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20738:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20785:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20787:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20773:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "20781:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20770:14:10"
															},
															"nodeType": "YulIf",
															"src": "20767:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20876:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20878:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "20817:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20822:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20813:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20813:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20831:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20809:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20809:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "20846:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "20852:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20852:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20842:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20842:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20871:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20838:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20806:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20806:69:10"
															},
															"nodeType": "YulIf",
															"src": "20803:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20914:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20928:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20936:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20924:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20924:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20945:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20920:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20920:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "20894:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20894:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20894:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20960:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "20967:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20960:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20344:3:10",
														"type": ""
													}
												],
												"src": "20305:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21025:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21090:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21099:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21102:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21092:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21092:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21092:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21048:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21059:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21070:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21075:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "21066:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21066:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21055:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21055:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21045:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21045:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21038:51:10"
															},
															"nodeType": "YulIf",
															"src": "21035:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21014:5:10",
														"type": ""
													}
												],
												"src": "20981:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101155760003560e01c806371ac14e6116100a2578063a22cb46511610071578063a22cb46514610243578063ad974f4c14610256578063e985e9c51461025e578063f242432a1461029a578063f2fde38b146102ad57600080fd5b806371ac14e6146101f95780637824407f1461020c5780638da5cb5b146102155780639416308e1461023057600080fd5b80630e89341c116100e95780630e89341c1461018b5780631f7fdffa146101ab5780632eb2c2d6146101be5780634e1273f4146101d1578063715018a6146101f157600080fd5b8062fdd58e1461011a57806301ffc9a71461014057806302fe530514610163578063092f2dbf14610178575b600080fd5b61012d6101283660046117ec565b6102c0565b6040519081526020015b60405180910390f35b61015361014e366004611919565b610357565b6040519015158152602001610137565b610176610171366004611953565b6103a9565b005b610176610186366004611816565b6103df565b61019e6101993660046119a3565b61043a565b6040516101379190611b5d565b6101766101b9366004611718565b6104ce565b6101766101cc36600461160b565b61051c565b6101e46101df366004611849565b6105b3565b6040516101379190611b1c565b6101766106dc565b6101766102073660046119a3565b610712565b61012d60045481565b6003546040516001600160a01b039091168152602001610137565b61017661023e3660046119bc565b61087d565b6101766102513660046117b0565b61099a565b60045461012d565b61015361026c3660046115d8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101766102a83660046116b4565b6109a9565b6101766102bb3660046115bd565b6109ee565b60006001600160a01b0383166103315760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061038857506001600160e01b031982166303a24d0760e21b145b806103a357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103d35760405162461bcd60e51b815260040161032890611c90565b6103dc81610a86565b50565b6001600160a01b0383163314806103fb57506103fb833361026c565b6104175760405162461bcd60e51b815260040161032890611bb8565b610422838383610a99565b60046000815461043190611d5f565b90915550505050565b60606002805461044990611d76565b80601f016020809104026020016040519081016040528092919081815260200182805461047590611d76565b80156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b50505050509050919050565b6003546001600160a01b031633146104f85760405162461bcd60e51b815260040161032890611c90565b61050484848484610c13565b82516004546105139190611d30565b60045550505050565b6001600160a01b0385163314806105385750610538853361026c565b61059f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610328565b6105ac8585858585610d98565b5050505050565b606081518351146106185760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610328565b600083516001600160401b0381111561063357610633611e24565b60405190808252806020026020018201604052801561065c578160200160208202803683370190505b50905060005b84518110156106d4576106a785828151811061068057610680611e0e565b602002602001015185838151811061069a5761069a611e0e565b60200260200101516102c0565b8282815181106106b9576106b9611e0e565b60209081029190910101526106cd81611ddd565b9050610662565b509392505050565b6003546001600160a01b031633146107065760405162461bcd60e51b815260040161032890611c90565b6107106000610f34565b565b6003546001600160a01b0316331461073c5760405162461bcd60e51b815260040161032890611c90565b6000816001600160401b0381111561075657610756611e24565b60405190808252806020026020018201604052801561077f578160200160208202803683370190505b5090506000826001600160401b0381111561079c5761079c611e24565b6040519080825280602002602001820160405280156107c5578160200160208202803683370190505b506004549091505b6004546107da9085611d30565b81101561084b578083600454836107f19190611d48565b8151811061080157610801611e0e565b6020026020010181815250506001826004548361081e9190611d48565b8151811061082e5761082e611e0e565b60209081029190910101528061084381611ddd565b9150506107cd565b5061086733838360405180602001604052806000815250610c13565b826004546108759190611d30565b600455505050565b6000826001600160401b0381111561089757610897611e24565b6040519080825280602002602001820160405280156108c0578160200160208202803683370190505b5090506000836001600160401b038111156108dd576108dd611e24565b604051908082528060200260200182016040528015610906578160200160208202803683370190505b509050845b6109158686611d30565b81101561097d5780836109288883611d48565b8151811061093857610938611e0e565b60209081029190910101526001826109508884611d48565b8151811061096057610960611e0e565b60209081029190910101528061097581611ddd565b91505061090b565b506105ac338484846040518060200160405280600081525061051c565b6109a5338383610f86565b5050565b6001600160a01b0385163314806109c557506109c5853361026c565b6109e15760405162461bcd60e51b815260040161032890611bb8565b6105ac8585858585611067565b6003546001600160a01b03163314610a185760405162461bcd60e51b815260040161032890611c90565b6001600160a01b038116610a7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610328565b6103dc81610f34565b80516109a590600290602084019061140d565b6001600160a01b038316610afb5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610328565b33610b2b81856000610b0c8761118d565b610b158761118d565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610ba85760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610328565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038416610c735760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610328565b8151835114610c945760405162461bcd60e51b815260040161032890611cc5565b3360005b8451811015610d3057838181518110610cb357610cb3611e0e565b6020026020010151600080878481518110610cd057610cd0611e0e565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d189190611d30565b90915550819050610d2881611ddd565b915050610c98565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d81929190611b2f565b60405180910390a46105ac816000878787876111d8565b8151835114610db95760405162461bcd60e51b815260040161032890611cc5565b6001600160a01b038416610ddf5760405162461bcd60e51b815260040161032890611c01565b3360005b8451811015610ec6576000858281518110610e0057610e00611e0e565b602002602001015190506000858381518110610e1e57610e1e611e0e565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610e6e5760405162461bcd60e51b815260040161032890611c46565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610eab908490611d30565b9250508190555050505080610ebf90611ddd565b9050610de3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f16929190611b2f565b60405180910390a4610f2c8187878787876111d8565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610ffa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610328565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661108d5760405162461bcd60e51b815260040161032890611c01565b336110a681878761109d8861118d565b6105ac8861118d565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156110e75760405162461bcd60e51b815260040161032890611c46565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611124908490611d30565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611184828888888888611343565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106111c7576111c7611e0e565b602090810291909101015292915050565b6001600160a01b0384163b15610f2c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061121c9089908990889088908890600401611a79565b602060405180830381600087803b15801561123657600080fd5b505af1925050508015611266575060408051601f3d908101601f1916820190925261126391810190611936565b60015b61131357611272611e3a565b806308c379a014156112ac5750611287611e56565b8061129257506112ae565b8060405162461bcd60e51b81526004016103289190611b5d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610328565b6001600160e01b0319811663bc197c8160e01b146111845760405162461bcd60e51b815260040161032890611b70565b6001600160a01b0384163b15610f2c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113879089908990889088908890600401611ad7565b602060405180830381600087803b1580156113a157600080fd5b505af19250505080156113d1575060408051601f3d908101601f191682019092526113ce91810190611936565b60015b6113dd57611272611e3a565b6001600160e01b0319811663f23a6e6160e01b146111845760405162461bcd60e51b815260040161032890611b70565b82805461141990611d76565b90600052602060002090601f01602090048101928261143b5760008555611481565b82601f1061145457805160ff1916838001178555611481565b82800160010185558215611481579182015b82811115611481578251825591602001919060010190611466565b5061148d929150611491565b5090565b5b8082111561148d5760008155600101611492565b60006001600160401b038311156114bf576114bf611e24565b6040516114d6601f8501601f191660200182611db1565b8091508381528484840111156114eb57600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461151a57600080fd5b919050565b600082601f83011261153057600080fd5b8135602061153d82611d0d565b60405161154a8282611db1565b8381528281019150858301600585901b8701840188101561156a57600080fd5b60005b858110156115895781358452928401929084019060010161156d565b5090979650505050505050565b600082601f8301126115a757600080fd5b6115b6838335602085016114a6565b9392505050565b6000602082840312156115cf57600080fd5b6115b682611503565b600080604083850312156115eb57600080fd5b6115f483611503565b915061160260208401611503565b90509250929050565b600080600080600060a0868803121561162357600080fd5b61162c86611503565b945061163a60208701611503565b935060408601356001600160401b038082111561165657600080fd5b61166289838a0161151f565b9450606088013591508082111561167857600080fd5b61168489838a0161151f565b9350608088013591508082111561169a57600080fd5b506116a788828901611596565b9150509295509295909350565b600080600080600060a086880312156116cc57600080fd5b6116d586611503565b94506116e360208701611503565b9350604086013592506060860135915060808601356001600160401b0381111561170c57600080fd5b6116a788828901611596565b6000806000806080858703121561172e57600080fd5b61173785611503565b935060208501356001600160401b038082111561175357600080fd5b61175f8883890161151f565b9450604087013591508082111561177557600080fd5b6117818883890161151f565b9350606087013591508082111561179757600080fd5b506117a487828801611596565b91505092959194509250565b600080604083850312156117c357600080fd5b6117cc83611503565b9150602083013580151581146117e157600080fd5b809150509250929050565b600080604083850312156117ff57600080fd5b61180883611503565b946020939093013593505050565b60008060006060848603121561182b57600080fd5b61183484611503565b95602085013595506040909401359392505050565b6000806040838503121561185c57600080fd5b82356001600160401b038082111561187357600080fd5b818501915085601f83011261188757600080fd5b8135602061189482611d0d565b6040516118a18282611db1565b8381528281019150858301600585901b870184018b10156118c157600080fd5b600096505b848710156118eb576118d781611503565b8352600196909601959183019183016118c6565b509650508601359250508082111561190257600080fd5b5061190f8582860161151f565b9150509250929050565b60006020828403121561192b57600080fd5b81356115b681611edf565b60006020828403121561194857600080fd5b81516115b681611edf565b60006020828403121561196557600080fd5b81356001600160401b0381111561197b57600080fd5b8201601f8101841361198c57600080fd5b61199b848235602084016114a6565b949350505050565b6000602082840312156119b557600080fd5b5035919050565b6000806000606084860312156119d157600080fd5b83359250602084013591506119e860408501611503565b90509250925092565b600081518084526020808501945080840160005b83811015611a2157815187529582019590820190600101611a05565b509495945050505050565b6000815180845260005b81811015611a5257602081850181015186830182015201611a36565b81811115611a64576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611aa5908301866119f1565b8281036060840152611ab781866119f1565b90508281036080840152611acb8185611a2c565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611b1190830184611a2c565b979650505050505050565b6020815260006115b660208301846119f1565b604081526000611b4260408301856119f1565b8281036020840152611b5481856119f1565b95945050505050565b6020815260006115b66020830184611a2c565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60006001600160401b03821115611d2657611d26611e24565b5060051b60200190565b60008219821115611d4357611d43611df8565b500190565b600082821015611d5a57611d5a611df8565b500390565b600081611d6e57611d6e611df8565b506000190190565b600181811c90821680611d8a57607f821691505b60208210811415611dab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b0381118282101715611dd657611dd6611e24565b6040525050565b6000600019821415611df157611df1611df8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611e535760046000803e5060005160e01c5b90565b600060443d1015611e645790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715611e9357505050505090565b8285019150815181811115611eab5750505050505090565b843d8701016020828501011115611ec55750505050505090565b611ed460208286010187611db1565b509095945050505050565b6001600160e01b0319811681146103dc57600080fdfea2646970667358221220775d34866ffe9410ac6e08d93eb10739944d4e11b0e70c656dcdf374a641c2e264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x388 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xA86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x422 DUP4 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x504 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x538 JUMPI POP PUSH2 0x538 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x633 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6A7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CD DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x0 PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79C PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DA SWAP1 DUP6 PUSH2 0x1D30 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84B JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82E PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x843 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CD JUMP JUMPDEST POP PUSH2 0x867 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC13 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x897 JUMPI PUSH2 0x897 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x906 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x915 DUP7 DUP7 PUSH2 0x1D30 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97D JUMPI DUP1 DUP4 PUSH2 0x928 DUP9 DUP4 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x950 DUP9 DUP5 PUSH2 0x1D48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x975 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0x5AC CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51C JUMP JUMPDEST PUSH2 0x9A5 CALLER DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x5AC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0xF34 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9A5 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB2B DUP2 DUP6 PUSH1 0x0 PUSH2 0xB0C DUP8 PUSH2 0x118D JUMP JUMPDEST PUSH2 0xB15 DUP8 PUSH2 0x118D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AC DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D8 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEAB SWAP1 DUP5 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEBF SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF2C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST CALLER PUSH2 0x10A6 DUP2 DUP8 DUP8 PUSH2 0x109D DUP9 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x5AC DUP9 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1124 SWAP1 DUP5 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1184 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1343 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x121C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1266 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1263 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1313 JUMPI PUSH2 0x1272 PUSH2 0x1E3A JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x12AC JUMPI POP PUSH2 0x1287 PUSH2 0x1E56 JUMP JUMPDEST DUP1 PUSH2 0x1292 JUMPI POP PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1387 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13D1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13CE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13DD JUMPI PUSH2 0x1272 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1419 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x143B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1481 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1454 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1481 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1481 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1481 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1466 JUMP JUMPDEST POP PUSH2 0x148D SWAP3 SWAP2 POP PUSH2 0x1491 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x148D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BF PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D6 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x151A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x153D DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154A DUP3 DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1589 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x156D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B6 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B6 DUP3 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F4 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 PUSH1 0x20 DUP5 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162C DUP7 PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH2 0x163A PUSH1 0x20 DUP8 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1662 DUP10 DUP4 DUP11 ADD PUSH2 0x151F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1684 DUP10 DUP4 DUP11 ADD PUSH2 0x151F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP7 PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH2 0x16E3 PUSH1 0x20 DUP8 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP6 PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175F DUP9 DUP4 DUP10 ADD PUSH2 0x151F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1781 DUP9 DUP4 DUP10 ADD PUSH2 0x151F JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A4 DUP8 DUP3 DUP9 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CC DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1808 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1834 DUP5 PUSH2 0x1503 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1894 DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A1 DUP3 DUP3 PUSH2 0x1DB1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18D7 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18C6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190F DUP6 DUP3 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B6 DUP2 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15B6 DUP2 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x197B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x198C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x199B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19E8 PUSH1 0x40 DUP6 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A05 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1A36 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AA5 SWAP1 DUP4 ADD DUP7 PUSH2 0x19F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1AB7 DUP2 DUP7 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1ACB DUP2 DUP6 PUSH2 0x1A2C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B11 SWAP1 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B42 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B54 DUP2 DUP6 PUSH2 0x19F1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D26 PUSH2 0x1E24 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D43 PUSH2 0x1DF8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D5A PUSH2 0x1DF8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D6E JUMPI PUSH2 0x1D6E PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D8A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1DD6 JUMPI PUSH2 0x1DD6 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DF1 JUMPI PUSH2 0x1DF1 PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E64 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1E93 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EAB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EC5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1ED4 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1DB1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5D34866FFE9410AC6E08D93EB10739944D4E11B0E70C656D 0xCD RETURN PUSH21 0xA641C2E264736F6C63430008070033000000000000 ",
							"sourceMap": "184:1847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231:2;;;;;;:::i;:::-;;:::i;:::-;;;18065:25:10;;;18053:2;18038:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;11572:14:10;;11565:22;11547:41;;11535:2;11520:18;1262:310:2;11407:187:10;1250:88:0;;;;;;:::i;:::-;;:::i;:::-;;1695:333;;;;;;:::i;:::-;;:::i;1983:105:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1346:240:0:-;;;;;;:::i;:::-;;:::i;4178:442:2:-;;;;;;:::i;:::-;;:::i;2636:524::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1721:103:1:-;;;:::i;350:461:0:-;;;;;;:::i;:::-;;:::i;232:26::-;;;;;;1070:87:1;1143:6;;1070:87;;-1:-1:-1;;;;;1143:6:1;;;9213:51:10;;9201:2;9186:18;1070:87:1;9067:203:10;819:421:0;;;;;;:::i;:::-;;:::i;3233:155:2:-;;;;;;:::i;:::-;;:::i;1594:93:0:-;1668:11;;1594:93;;3460:168:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;1979:201:1:-;;;;;;:::i;:::-;;:::i;2239:231:2:-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;12855:2:10;2345:77:2;;;12837:21:10;12894:2;12874:18;;;12867:30;12933:34;12913:18;;;12906:62;-1:-1:-1;;;12984:18:10;;;12977:41;13035:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;;;2239:231::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;1381:183;1262:310;-1:-1:-1;;1262:310:2:o;1250:88:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1315:15:0::1;1323:6;1315:7;:15::i;:::-;1250:88:::0;:::o;1695:333::-;-1:-1:-1;;;;;1823:23:0;;736:10:7;1823:23:0;;:66;;-1:-1:-1;1850:39:0;1867:7;736:10:7;3460:168:2;:::i;1850:39:0:-;1801:157;;;;-1:-1:-1;;;1801:157:0;;;;;;;:::i;:::-;1971:25;1977:7;1986:2;1990:5;1971;:25::i;:::-;2009:11;;2007:13;;;;;:::i;:::-;;;;-1:-1:-1;;;;1695:333:0:o;1983:105:2:-;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;1346:240:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1495:34:0::1;1506:2;1510:3;1515:7;1524:4;1495:10;:34::i;:::-;1568:3;:10;1554:11;;:24;;;;:::i;:::-;1540:11;:38:::0;-1:-1:-1;;;;1346:240:0:o;4178:442:2:-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;14895:2:10;4389:160:2;;;14877:21:10;14934:2;14914:18;;;14907:30;14973:34;14953:18;;;14946:62;-1:-1:-1;;;15024:18:10;;;15017:48;15082:19;;4389:160:2;14693:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;16900:2:10;2826:83:2;;;16882:21:10;16939:2;16919:18;;;16912:30;16978:34;16958:18;;;16951:62;-1:-1:-1;;;17029:18:10;;;17022:39;17078:19;;2826:83:2;16698:405:10;2826:83:2;2922:30;2969:8;:15;-1:-1:-1;;;;;2955:30:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;1721:103:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;350:461:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;425:20:0::1;462:9;-1:-1:-1::0;;;;;448:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;448:24:0::1;;425:47;;483:24;524:9;-1:-1:-1::0;;;;;510:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;510:24:0::1;-1:-1:-1::0;562:11:0::1;::::0;483:51;;-1:-1:-1;545:160:0::1;592:11;::::0;580:23:::1;::::0;:9;:23:::1;:::i;:::-;575:1;:29;545:160;;;649:1;626:3;634:11;;630:1;:15;;;;:::i;:::-;626:20;;;;;;;;:::i;:::-;;;;;;:24;;;::::0;::::1;692:1;665:7;677:11;;673:1;:15;;;;:::i;:::-;665:24;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:28;606:3;::::1;::::0;::::1;:::i;:::-;;;;545:160;;;;715:40;726:10;738:3;743:7;715:40;;;;;;;;;;;::::0;:10:::1;:40::i;:::-;794:9;780:11;;:23;;;;:::i;:::-;766:11;:37:::0;-1:-1:-1;;;350:461:0:o;819:421::-;911:20;948:9;-1:-1:-1;;;;;934:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:24:0;;911:47;;969:24;1010:9;-1:-1:-1;;;;;996:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;996:24:0;-1:-1:-1;969:51:0;-1:-1:-1;1048:5:0;1031:136;1060:17;1072:5;1060:9;:17;:::i;:::-;1055:1;:23;1031:136;;;1117:1;1100:3;1104:9;1108:5;1117:1;1104:9;:::i;:::-;1100:14;;;;;;;;:::i;:::-;;;;;;;;;;:18;1154:1;1133:7;1141:9;1145:5;1141:1;:9;:::i;:::-;1133:18;;;;;;;;:::i;:::-;;;;;;;;;;:22;1080:3;;;;:::i;:::-;;;;1031:136;;;;1177:55;1199:10;1211:2;1215:3;1220:7;1177:55;;;;;;;;;;;;:21;:55::i;3233:155:2:-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;;;;;;:::i;:::-;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;1979:201:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2068:22:1;::::1;2060:73;;;::::0;-1:-1:-1;;;2060:73:1;;13267:2:10;2060:73:1::1;::::0;::::1;13249:21:10::0;13306:2;13286:18;;;13279:30;13345:34;13325:18;;;13318:62;-1:-1:-1;;;13396:18:10;;;13389:36;13442:19;;2060:73:1::1;13065:402:10::0;2060:73:1::1;2144:28;2163:8;2144:18;:28::i;8180:88:2:-:0;8247:13;;;;:4;;:13;;;;;:::i;10564:648::-;-1:-1:-1;;;;;10691:18:2;;10683:66;;;;-1:-1:-1;;;10683:66:2;;15314:2:10;10683:66:2;;;15296:21:10;15353:2;15333:18;;;15326:30;15392:34;15372:18;;;15365:62;-1:-1:-1;;;15443:18:10;;;15436:33;15486:19;;10683:66:2;15112:399:10;10683:66:2;736:10:7;10806:102:2;736:10:7;10837:4:2;10762:16;10855:21;10873:2;10855:17;:21::i;:::-;10878:25;10896:6;10878:17;:25::i;:::-;-1:-1:-1;;10806:102:2;;;;;;;;;-1:-1:-1;10806:102:2;;-1:-1:-1;;;6262:1074:2;10806:102;10921:19;10943:13;;;;;;;;;;;-1:-1:-1;;;;;10943:19:2;;;;;;;;;;10981:21;;;;10973:70;;;;-1:-1:-1;;;10973:70:2;;13674:2:10;10973:70:2;;;13656:21:10;13713:2;13693:18;;;13686:30;13752:34;13732:18;;;13725:62;-1:-1:-1;;;13803:18:10;;;13796:34;13847:19;;10973:70:2;13472:400:10;10973:70:2;11079:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11079:19:2;;;;;;;;;;;;11101:20;;;11079:42;;11150:54;;18275:25:10;;;18316:18;;;18309:34;;;11079:19:2;;11150:54;;;;;;18248:18:10;11150:54:2;;;;;;;10672:540;;10564:648;;;:::o;9579:735::-;-1:-1:-1;;;;;9757:16:2;;9749:62;;;;-1:-1:-1;;;9749:62:2;;17719:2:10;9749:62:2;;;17701:21:10;17758:2;17738:18;;;17731:30;17797:34;17777:18;;;17770:62;-1:-1:-1;;;17848:18:10;;;17841:31;17889:19;;9749:62:2;17517:397:10;9749:62:2;9844:7;:14;9830:3;:10;:28;9822:81;;;;-1:-1:-1;;;9822:81:2;;;;;;;:::i;:::-;736:10:7;9916:16:2;10039:103;10063:3;:10;10059:1;:14;10039:103;;;10120:7;10128:1;10120:10;;;;;;;;:::i;:::-;;;;;;;10095:9;:17;10105:3;10109:1;10105:6;;;;;;;;:::i;:::-;;;;;;;10095:17;;;;;;;;;;;:21;10113:2;-1:-1:-1;;;;;10095:21:2;-1:-1:-1;;;;;10095:21:2;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10075:3:2;;-1:-1:-1;10075:3:2;;;:::i;:::-;;;;10039:103;;;;10195:2;-1:-1:-1;;;;;10159:53:2;10191:1;-1:-1:-1;;;;;10159:53:2;10173:8;-1:-1:-1;;;;;10159:53:2;;10199:3;10204:7;10159:53;;;;;;;:::i;:::-;;;;;;;;10225:81;10261:8;10279:1;10283:2;10287:3;10292:7;10301:4;10225:35;:81::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;12448:331:2:-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;;12586:71;;;;-1:-1:-1;;;12586:71:2;;16490:2:10;12586:71:2;;;16472:21:10;16529:2;16509:18;;;16502:30;16568:34;16548:18;;;16541:62;-1:-1:-1;;;16619:18:10;;;16612:39;16668:19;;12586:71:2;16288:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;11547::10;;;12730::2;;11520:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;18275:25:10;;;18331:2;18316:18;;18309:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;18248:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;12025:2:10;15433:62:2;;;12007:21:10;12064:2;12044:18;;;12037:30;12103:34;12083:18;;;12076:62;-1:-1:-1;;;12154:18:10;;;12147:50;12214:19;;15433:62:2;11823:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:468:10;78:5;-1:-1:-1;;;;;104:6:10;101:30;98:56;;;134:18;;:::i;:::-;183:2;177:9;195:69;252:2;231:15;;-1:-1:-1;;227:29:10;258:4;223:40;177:9;195:69;:::i;:::-;282:6;273:15;;312:6;304;297:22;352:3;343:6;338:3;334:16;331:25;328:45;;;369:1;366;359:12;328:45;419:6;414:3;407:4;399:6;395:17;382:44;474:1;467:4;458:6;450;446:19;442:30;435:41;;14:468;;;;;:::o;487:173::-;555:20;;-1:-1:-1;;;;;604:31:10;;594:42;;584:70;;650:1;647;640:12;584:70;487:173;;;:::o;665:735::-;719:5;772:3;765:4;757:6;753:17;749:27;739:55;;790:1;787;780:12;739:55;826:6;813:20;852:4;875:43;915:2;875:43;:::i;:::-;947:2;941:9;959:31;987:2;979:6;959:31;:::i;:::-;1025:18;;;1059:15;;;;-1:-1:-1;1094:15:10;;;1144:1;1140:10;;;1128:23;;1124:32;;1121:41;-1:-1:-1;1118:61:10;;;1175:1;1172;1165:12;1118:61;1197:1;1207:163;1221:2;1218:1;1215:9;1207:163;;;1278:17;;1266:30;;1316:12;;;;1348;;;;1239:1;1232:9;1207:163;;;-1:-1:-1;1388:6:10;;665:735;-1:-1:-1;;;;;;;665:735:10:o;1405:220::-;1447:5;1500:3;1493:4;1485:6;1481:17;1477:27;1467:55;;1518:1;1515;1508:12;1467:55;1540:79;1615:3;1606:6;1593:20;1586:4;1578:6;1574:17;1540:79;:::i;:::-;1531:88;1405:220;-1:-1:-1;;;1405:220:10:o;1630:186::-;1689:6;1742:2;1730:9;1721:7;1717:23;1713:32;1710:52;;;1758:1;1755;1748:12;1710:52;1781:29;1800:9;1781:29;:::i;1821:260::-;1889:6;1897;1950:2;1938:9;1929:7;1925:23;1921:32;1918:52;;;1966:1;1963;1956:12;1918:52;1989:29;2008:9;1989:29;:::i;:::-;1979:39;;2037:38;2071:2;2060:9;2056:18;2037:38;:::i;:::-;2027:48;;1821:260;;;;;:::o;2086:943::-;2240:6;2248;2256;2264;2272;2325:3;2313:9;2304:7;2300:23;2296:33;2293:53;;;2342:1;2339;2332:12;2293:53;2365:29;2384:9;2365:29;:::i;:::-;2355:39;;2413:38;2447:2;2436:9;2432:18;2413:38;:::i;:::-;2403:48;;2502:2;2491:9;2487:18;2474:32;-1:-1:-1;;;;;2566:2:10;2558:6;2555:14;2552:34;;;2582:1;2579;2572:12;2552:34;2605:61;2658:7;2649:6;2638:9;2634:22;2605:61;:::i;:::-;2595:71;;2719:2;2708:9;2704:18;2691:32;2675:48;;2748:2;2738:8;2735:16;2732:36;;;2764:1;2761;2754:12;2732:36;2787:63;2842:7;2831:8;2820:9;2816:24;2787:63;:::i;:::-;2777:73;;2903:3;2892:9;2888:19;2875:33;2859:49;;2933:2;2923:8;2920:16;2917:36;;;2949:1;2946;2939:12;2917:36;;2972:51;3015:7;3004:8;2993:9;2989:24;2972:51;:::i;:::-;2962:61;;;2086:943;;;;;;;;:::o;3034:606::-;3138:6;3146;3154;3162;3170;3223:3;3211:9;3202:7;3198:23;3194:33;3191:53;;;3240:1;3237;3230:12;3191:53;3263:29;3282:9;3263:29;:::i;:::-;3253:39;;3311:38;3345:2;3334:9;3330:18;3311:38;:::i;:::-;3301:48;;3396:2;3385:9;3381:18;3368:32;3358:42;;3447:2;3436:9;3432:18;3419:32;3409:42;;3502:3;3491:9;3487:19;3474:33;-1:-1:-1;;;;;3522:6:10;3519:30;3516:50;;;3562:1;3559;3552:12;3516:50;3585:49;3626:7;3617:6;3606:9;3602:22;3585:49;:::i;3645:868::-;3790:6;3798;3806;3814;3867:3;3855:9;3846:7;3842:23;3838:33;3835:53;;;3884:1;3881;3874:12;3835:53;3907:29;3926:9;3907:29;:::i;:::-;3897:39;;3987:2;3976:9;3972:18;3959:32;-1:-1:-1;;;;;4051:2:10;4043:6;4040:14;4037:34;;;4067:1;4064;4057:12;4037:34;4090:61;4143:7;4134:6;4123:9;4119:22;4090:61;:::i;:::-;4080:71;;4204:2;4193:9;4189:18;4176:32;4160:48;;4233:2;4223:8;4220:16;4217:36;;;4249:1;4246;4239:12;4217:36;4272:63;4327:7;4316:8;4305:9;4301:24;4272:63;:::i;:::-;4262:73;;4388:2;4377:9;4373:18;4360:32;4344:48;;4417:2;4407:8;4404:16;4401:36;;;4433:1;4430;4423:12;4401:36;;4456:51;4499:7;4488:8;4477:9;4473:24;4456:51;:::i;:::-;4446:61;;;3645:868;;;;;;;:::o;4518:347::-;4583:6;4591;4644:2;4632:9;4623:7;4619:23;4615:32;4612:52;;;4660:1;4657;4650:12;4612:52;4683:29;4702:9;4683:29;:::i;:::-;4673:39;;4762:2;4751:9;4747:18;4734:32;4809:5;4802:13;4795:21;4788:5;4785:32;4775:60;;4831:1;4828;4821:12;4775:60;4854:5;4844:15;;;4518:347;;;;;:::o;4870:254::-;4938:6;4946;4999:2;4987:9;4978:7;4974:23;4970:32;4967:52;;;5015:1;5012;5005:12;4967:52;5038:29;5057:9;5038:29;:::i;:::-;5028:39;5114:2;5099:18;;;;5086:32;;-1:-1:-1;;;4870:254:10:o;5129:322::-;5206:6;5214;5222;5275:2;5263:9;5254:7;5250:23;5246:32;5243:52;;;5291:1;5288;5281:12;5243:52;5314:29;5333:9;5314:29;:::i;:::-;5304:39;5390:2;5375:18;;5362:32;;-1:-1:-1;5441:2:10;5426:18;;;5413:32;;5129:322;-1:-1:-1;;;5129:322:10:o;5456:1219::-;5574:6;5582;5635:2;5623:9;5614:7;5610:23;5606:32;5603:52;;;5651:1;5648;5641:12;5603:52;5691:9;5678:23;-1:-1:-1;;;;;5761:2:10;5753:6;5750:14;5747:34;;;5777:1;5774;5767:12;5747:34;5815:6;5804:9;5800:22;5790:32;;5860:7;5853:4;5849:2;5845:13;5841:27;5831:55;;5882:1;5879;5872:12;5831:55;5918:2;5905:16;5940:4;5963:43;6003:2;5963:43;:::i;:::-;6035:2;6029:9;6047:31;6075:2;6067:6;6047:31;:::i;:::-;6113:18;;;6147:15;;;;-1:-1:-1;6182:11:10;;;6224:1;6220:10;;;6212:19;;6208:28;;6205:41;-1:-1:-1;6202:61:10;;;6259:1;6256;6249:12;6202:61;6281:1;6272:10;;6291:169;6305:2;6302:1;6299:9;6291:169;;;6362:23;6381:3;6362:23;:::i;:::-;6350:36;;6323:1;6316:9;;;;;6406:12;;;;6438;;6291:169;;;-1:-1:-1;6479:6:10;-1:-1:-1;;6523:18:10;;6510:32;;-1:-1:-1;;6554:16:10;;;6551:36;;;6583:1;6580;6573:12;6551:36;;6606:63;6661:7;6650:8;6639:9;6635:24;6606:63;:::i;:::-;6596:73;;;5456:1219;;;;;:::o;6680:245::-;6738:6;6791:2;6779:9;6770:7;6766:23;6762:32;6759:52;;;6807:1;6804;6797:12;6759:52;6846:9;6833:23;6865:30;6889:5;6865:30;:::i;6930:249::-;6999:6;7052:2;7040:9;7031:7;7027:23;7023:32;7020:52;;;7068:1;7065;7058:12;7020:52;7100:9;7094:16;7119:30;7143:5;7119:30;:::i;7184:450::-;7253:6;7306:2;7294:9;7285:7;7281:23;7277:32;7274:52;;;7322:1;7319;7312:12;7274:52;7362:9;7349:23;-1:-1:-1;;;;;7387:6:10;7384:30;7381:50;;;7427:1;7424;7417:12;7381:50;7450:22;;7503:4;7495:13;;7491:27;-1:-1:-1;7481:55:10;;7532:1;7529;7522:12;7481:55;7555:73;7620:7;7615:2;7602:16;7597:2;7593;7589:11;7555:73;:::i;:::-;7545:83;7184:450;-1:-1:-1;;;;7184:450:10:o;7639:180::-;7698:6;7751:2;7739:9;7730:7;7726:23;7722:32;7719:52;;;7767:1;7764;7757:12;7719:52;-1:-1:-1;7790:23:10;;7639:180;-1:-1:-1;7639:180:10:o;7824:322::-;7901:6;7909;7917;7970:2;7958:9;7949:7;7945:23;7941:32;7938:52;;;7986:1;7983;7976:12;7938:52;8022:9;8009:23;7999:33;;8079:2;8068:9;8064:18;8051:32;8041:42;;8102:38;8136:2;8125:9;8121:18;8102:38;:::i;:::-;8092:48;;7824:322;;;;;:::o;8151:435::-;8204:3;8242:5;8236:12;8269:6;8264:3;8257:19;8295:4;8324:2;8319:3;8315:12;8308:19;;8361:2;8354:5;8350:14;8382:1;8392:169;8406:6;8403:1;8400:13;8392:169;;;8467:13;;8455:26;;8501:12;;;;8536:15;;;;8428:1;8421:9;8392:169;;;-1:-1:-1;8577:3:10;;8151:435;-1:-1:-1;;;;;8151:435:10:o;8591:471::-;8632:3;8670:5;8664:12;8697:6;8692:3;8685:19;8722:1;8732:162;8746:6;8743:1;8740:13;8732:162;;;8808:4;8864:13;;;8860:22;;8854:29;8836:11;;;8832:20;;8825:59;8761:12;8732:162;;;8912:6;8909:1;8906:13;8903:87;;;8978:1;8971:4;8962:6;8957:3;8953:16;8949:27;8942:38;8903:87;-1:-1:-1;9044:2:10;9023:15;-1:-1:-1;;9019:29:10;9010:39;;;;9051:4;9006:50;;8591:471;-1:-1:-1;;8591:471:10:o;9275:826::-;-1:-1:-1;;;;;9672:15:10;;;9654:34;;9724:15;;9719:2;9704:18;;9697:43;9634:3;9771:2;9756:18;;9749:31;;;9597:4;;9803:57;;9840:19;;9832:6;9803:57;:::i;:::-;9908:9;9900:6;9896:22;9891:2;9880:9;9876:18;9869:50;9942:44;9979:6;9971;9942:44;:::i;:::-;9928:58;;10035:9;10027:6;10023:22;10017:3;10006:9;10002:19;9995:51;10063:32;10088:6;10080;10063:32;:::i;:::-;10055:40;9275:826;-1:-1:-1;;;;;;;;9275:826:10:o;10106:560::-;-1:-1:-1;;;;;10403:15:10;;;10385:34;;10455:15;;10450:2;10435:18;;10428:43;10502:2;10487:18;;10480:34;;;10545:2;10530:18;;10523:34;;;10365:3;10588;10573:19;;10566:32;;;10328:4;;10615:45;;10640:19;;10632:6;10615:45;:::i;:::-;10607:53;10106:560;-1:-1:-1;;;;;;;10106:560:10:o;10671:261::-;10850:2;10839:9;10832:21;10813:4;10870:56;10922:2;10911:9;10907:18;10899:6;10870:56;:::i;10937:465::-;11194:2;11183:9;11176:21;11157:4;11220:56;11272:2;11261:9;11257:18;11249:6;11220:56;:::i;:::-;11324:9;11316:6;11312:22;11307:2;11296:9;11292:18;11285:50;11352:44;11389:6;11381;11352:44;:::i;:::-;11344:52;10937:465;-1:-1:-1;;;;;10937:465:10:o;11599:219::-;11748:2;11737:9;11730:21;11711:4;11768:44;11808:2;11797:9;11793:18;11785:6;11768:44;:::i;12244:404::-;12446:2;12428:21;;;12485:2;12465:18;;;12458:30;12524:34;12519:2;12504:18;;12497:62;-1:-1:-1;;;12590:2:10;12575:18;;12568:38;12638:3;12623:19;;12244:404::o;13877:405::-;14079:2;14061:21;;;14118:2;14098:18;;;14091:30;14157:34;14152:2;14137:18;;14130:62;-1:-1:-1;;;14223:2:10;14208:18;;14201:39;14272:3;14257:19;;13877:405::o;14287:401::-;14489:2;14471:21;;;14528:2;14508:18;;;14501:30;14567:34;14562:2;14547:18;;14540:62;-1:-1:-1;;;14633:2:10;14618:18;;14611:35;14678:3;14663:19;;14287:401::o;15516:406::-;15718:2;15700:21;;;15757:2;15737:18;;;15730:30;15796:34;15791:2;15776:18;;15769:62;-1:-1:-1;;;15862:2:10;15847:18;;15840:40;15912:3;15897:19;;15516:406::o;15927:356::-;16129:2;16111:21;;;16148:18;;;16141:30;16207:34;16202:2;16187:18;;16180:62;16274:2;16259:18;;15927:356::o;17108:404::-;17310:2;17292:21;;;17349:2;17329:18;;;17322:30;17388:34;17383:2;17368:18;;17361:62;-1:-1:-1;;;17454:2:10;17439:18;;17432:38;17502:3;17487:19;;17108:404::o;18354:183::-;18414:4;-1:-1:-1;;;;;18439:6:10;18436:30;18433:56;;;18469:18;;:::i;:::-;-1:-1:-1;18514:1:10;18510:14;18526:4;18506:25;;18354:183::o;18542:128::-;18582:3;18613:1;18609:6;18606:1;18603:13;18600:39;;;18619:18;;:::i;:::-;-1:-1:-1;18655:9:10;;18542:128::o;18675:125::-;18715:4;18743:1;18740;18737:8;18734:34;;;18748:18;;:::i;:::-;-1:-1:-1;18785:9:10;;18675:125::o;18805:136::-;18844:3;18872:5;18862:39;;18881:18;;:::i;:::-;-1:-1:-1;;;18917:18:10;;18805:136::o;18946:380::-;19025:1;19021:12;;;;19068;;;19089:61;;19143:4;19135:6;19131:17;19121:27;;19089:61;19196:2;19188:6;19185:14;19165:18;19162:38;19159:161;;;19242:10;19237:3;19233:20;19230:1;19223:31;19277:4;19274:1;19267:15;19305:4;19302:1;19295:15;19159:161;;18946:380;;;:::o;19331:249::-;19441:2;19422:13;;-1:-1:-1;;19418:27:10;19406:40;;-1:-1:-1;;;;;19461:34:10;;19497:22;;;19458:62;19455:88;;;19523:18;;:::i;:::-;19559:2;19552:22;-1:-1:-1;;19331:249:10:o;19585:135::-;19624:3;-1:-1:-1;;19645:17:10;;19642:43;;;19665:18;;:::i;:::-;-1:-1:-1;19712:1:10;19701:13;;19585:135::o;19725:127::-;19786:10;19781:3;19777:20;19774:1;19767:31;19817:4;19814:1;19807:15;19841:4;19838:1;19831:15;19857:127;19918:10;19913:3;19909:20;19906:1;19899:31;19949:4;19946:1;19939:15;19973:4;19970:1;19963:15;19989:127;20050:10;20045:3;20041:20;20038:1;20031:31;20081:4;20078:1;20071:15;20105:4;20102:1;20095:15;20121:179;20156:3;20198:1;20180:16;20177:23;20174:120;;;20244:1;20241;20238;20223:23;-1:-1:-1;20281:1:10;20275:8;20270:3;20266:18;20174:120;20121:179;:::o;20305:671::-;20344:3;20386:4;20368:16;20365:26;20362:39;;;20305:671;:::o;20362:39::-;20428:2;20422:9;-1:-1:-1;;20493:16:10;20489:25;;20486:1;20422:9;20465:50;20544:4;20538:11;20568:16;-1:-1:-1;;;;;20674:2:10;20667:4;20659:6;20655:17;20652:25;20647:2;20639:6;20636:14;20633:45;20630:58;;;20681:5;;;;;20305:671;:::o;20630:58::-;20718:6;20712:4;20708:17;20697:28;;20754:3;20748:10;20781:2;20773:6;20770:14;20767:27;;;20787:5;;;;;;20305:671;:::o;20767:27::-;20871:2;20852:16;20846:4;20842:27;20838:36;20831:4;20822:6;20817:3;20813:16;20809:27;20806:69;20803:82;;;20878:5;;;;;;20305:671;:::o;20803:82::-;20894:57;20945:4;20936:6;20928;20924:19;20920:30;20914:4;20894:57;:::i;:::-;-1:-1:-1;20967:3:10;;20305:671;-1:-1:-1;;;;;20305:671:10:o;20981:131::-;-1:-1:-1;;;;;;21055:32:10;;21045:43;;21035:71;;21102:1;21099;21092:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1595800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2695",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"brun(address,uint256,uint256)": "infinite",
								"getTokenSupply()": "2325",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"mintBatchWithNumber(uint256)": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "28228",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "567",
								"tokenSupply()": "2329",
								"transferOwnership(address)": "28422",
								"transferWithNumber(uint256,uint256,address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH data",
									"source": 2,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220775d34866ffe9410ac6e08d93eb10739944d4e11b0e70c656dcdf374a641c2e264736f6c63430008070033",
									".code": [
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "AD974F4C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "7824407F"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "9416308E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "92F2DBF"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18065,
											"end": 18090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18065,
											"end": 18090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18065,
											"end": 18090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18053,
											"end": 18055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11572,
											"end": 11586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11537,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11407,
											"end": 11594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 9067,
											"end": 9270,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12855,
											"end": 12857,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12894,
											"end": 12896,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12967,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 12913,
											"end": 12931,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12913,
											"end": 12931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 12931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12977,
											"end": 13018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13054,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13035,
											"end": 13054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1564,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14895,
											"end": 14897,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14877,
											"end": 14898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 14936,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 14914,
											"end": 14932,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14914,
											"end": 14932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14914,
											"end": 14932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14973,
											"end": 15007,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14946,
											"end": 15008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15082,
											"end": 15101,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15082,
											"end": 15101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14693,
											"end": 15107,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16902,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16882,
											"end": 16903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 16941,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 16919,
											"end": 16937,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16919,
											"end": 16937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 16937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16912,
											"end": 16942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17012,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17029,
											"end": 17047,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17029,
											"end": 17047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17029,
											"end": 17047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17078,
											"end": 17097,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 17078,
											"end": 17097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 16698,
											"end": 17103,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 726,
											"end": 736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 738,
											"end": 741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 766,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1199,
											"end": 1209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13306,
											"end": 13308,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13286,
											"end": 13304,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13286,
											"end": 13304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13279,
											"end": 13309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13345,
											"end": 13379,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13325,
											"end": 13343,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13325,
											"end": 13343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13318,
											"end": 13380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13461,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13442,
											"end": 13461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13065,
											"end": 13467,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15314,
											"end": 15316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15296,
											"end": 15317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15353,
											"end": 15355,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 15333,
											"end": 15351,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15333,
											"end": 15351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15326,
											"end": 15356,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15392,
											"end": 15426,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15436,
											"end": 15469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15486,
											"end": 15505,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15486,
											"end": 15505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15112,
											"end": 15511,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10873,
											"end": 10875,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10921,
											"end": 10940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13656,
											"end": 13677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13715,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13686,
											"end": 13716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13752,
											"end": 13786,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 13732,
											"end": 13750,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13732,
											"end": 13750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13725,
											"end": 13787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13866,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13847,
											"end": 13866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 13472,
											"end": 13872,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18316,
											"end": 18334,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18316,
											"end": 18334,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18316,
											"end": 18334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17719,
											"end": 17721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17701,
											"end": 17722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17758,
											"end": 17760,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17731,
											"end": 17761,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17797,
											"end": 17831,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17770,
											"end": 17832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17848,
											"end": 17866,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17848,
											"end": 17866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17848,
											"end": 17866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17841,
											"end": 17872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17889,
											"end": 17908,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 17889,
											"end": 17908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 17517,
											"end": 17914,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10195,
											"end": 10197,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10173,
											"end": 10181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10211,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10261,
											"end": 10269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10283,
											"end": 10285,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16490,
											"end": 16492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16472,
											"end": 16493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16531,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 16509,
											"end": 16527,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16509,
											"end": 16527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16509,
											"end": 16527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16502,
											"end": 16532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16568,
											"end": 16602,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 16548,
											"end": 16566,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16548,
											"end": 16566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16548,
											"end": 16566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16619,
											"end": 16637,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16619,
											"end": 16637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 16637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16612,
											"end": 16651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16668,
											"end": 16687,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 16668,
											"end": 16687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 16288,
											"end": 16693,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11547,
											"end": 11588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18275,
											"end": 18300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18331,
											"end": 18333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18316,
											"end": 18334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18316,
											"end": 18334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12025,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12007,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12064,
											"end": 12066,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12103,
											"end": 12137,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12138,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 11823,
											"end": 12239,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 14,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 104,
											"end": 110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 101,
											"end": 131,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 98,
											"end": 154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 98,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 98,
											"end": 154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 183,
											"end": 185,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 186,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 195,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 231,
											"end": 246,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 231,
											"end": 246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 258,
											"end": 262,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 177,
											"end": 186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 195,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 273,
											"end": 288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 273,
											"end": 288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 312,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 343,
											"end": 349,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 338,
											"end": 341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 334,
											"end": 350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 331,
											"end": 356,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 328,
											"end": 373,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 359,
											"end": 371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 328,
											"end": 373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 414,
											"end": 417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 395,
											"end": 412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 382,
											"end": 426,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 446,
											"end": 465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 435,
											"end": 476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 435,
											"end": 476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 660,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 487,
											"end": 660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 555,
											"end": 575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 555,
											"end": 575,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 604,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 594,
											"end": 636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 594,
											"end": 636,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 584,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 584,
											"end": 654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 650,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 648,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 652,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 584,
											"end": 654,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 584,
											"end": 654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 1400,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 665,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 769,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 757,
											"end": 763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 753,
											"end": 770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 739,
											"end": 794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 780,
											"end": 792,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 794,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 739,
											"end": 794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 813,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 852,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 959,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1162,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1295,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1295,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1296,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1207,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 665,
											"end": 1400,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 665,
											"end": 1400,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1405,
											"end": 1625,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1405,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1504,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1467,
											"end": 1522,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1522,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1467,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1615,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1619,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1625,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1625,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1816,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1630,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1728,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1745,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 1781,
											"end": 1810,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1903,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 1953,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1970,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1918,
											"end": 1970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1968,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1970,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 1918,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 1989,
											"end": 2018,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 1989,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 2081,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2328,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2323,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2329,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2394,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 2447,
											"end": 2449,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2445,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2413,
											"end": 2451,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2451,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 2413,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2451,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2569,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2552,
											"end": 2586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2586,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2552,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2647,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2605,
											"end": 2666,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2666,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2605,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2666,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2723,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2751,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2732,
											"end": 2768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2766,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2768,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2732,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2787,
											"end": 2850,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2787,
											"end": 2850,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2787,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2850,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2936,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2972,
											"end": 3023,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2972,
											"end": 3023,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2972,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 3029,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3034,
											"end": 3640,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3034,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3227,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3244,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3191,
											"end": 3244,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3244,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3191,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3282,
											"end": 3291,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 3263,
											"end": 3292,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3292,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3263,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3345,
											"end": 3347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3349,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3400,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3505,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3507,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3549,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3566,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3516,
											"end": 3566,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3566,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3516,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3626,
											"end": 3633,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3615,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3585,
											"end": 3634,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3846,
											"end": 3853,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3888,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3835,
											"end": 3888,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 3886,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3888,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3835,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3907,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3907,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 3907,
											"end": 3936,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3936,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 3907,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3936,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4051,
											"end": 4053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4040,
											"end": 4054,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4069,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4143,
											"end": 4150,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4090,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4217,
											"end": 4253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4217,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4327,
											"end": 4334,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4314,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4335,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4435,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4473,
											"end": 4497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 4456,
											"end": 4507,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4507,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4456,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 4513,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4630,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4642,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4647,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4664,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4612,
											"end": 4664,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4660,
											"end": 4661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4662,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4664,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4612,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 4683,
											"end": 4712,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4683,
											"end": 4712,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4683,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4712,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4766,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4814,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4815,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4785,
											"end": 4817,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4775,
											"end": 4835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4835,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4775,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4865,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4870,
											"end": 5124,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4870,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4997,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5057,
											"end": 5066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5067,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5118,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5118,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4870,
											"end": 5124,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5129,
											"end": 5451,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 5129,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5277,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5261,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5278,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5295,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5243,
											"end": 5295,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5293,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5295,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5243,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5343,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5394,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5445,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5445,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5451,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5451,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5621,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5603,
											"end": 5655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5655,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5603,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5701,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5750,
											"end": 5764,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5779,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 5831,
											"end": 5886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5884,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5886,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 5831,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5921,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 5963,
											"end": 6006,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5963,
											"end": 6006,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 5963,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6193,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6193,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6225,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6236,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6246,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6202,
											"end": 6263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6263,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6202,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6282,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6362,
											"end": 6385,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6362,
											"end": 6385,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6362,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6418,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6450,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6291,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6661,
											"end": 6668,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6648,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 6675,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6680,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6680,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6770,
											"end": 6777,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6789,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6762,
											"end": 6794,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6759,
											"end": 6811,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6759,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 6759,
											"end": 6811,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6805,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6759,
											"end": 6811,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 6759,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6856,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 6889,
											"end": 6894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6930,
											"end": 7179,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6930,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6999,
											"end": 7005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7038,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7050,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7055,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7072,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7020,
											"end": 7072,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7072,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7020,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7094,
											"end": 7110,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7143,
											"end": 7148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7119,
											"end": 7149,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7184,
											"end": 7634,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 7184,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7281,
											"end": 7304,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7320,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7324,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7381,
											"end": 7431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7429,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7431,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7381,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7507,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7495,
											"end": 7508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7518,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7481,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7481,
											"end": 7536,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7532,
											"end": 7533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7534,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7536,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7481,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 7620,
											"end": 7627,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7555,
											"end": 7628,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7555,
											"end": 7628,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 7555,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 7628,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7634,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7184,
											"end": 7634,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7639,
											"end": 7819,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7639,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7751,
											"end": 7753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7737,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7749,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7754,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7771,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 7719,
											"end": 7771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7769,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7771,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 7719,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7790,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7790,
											"end": 7813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7639,
											"end": 7819,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7901,
											"end": 7907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7915,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7972,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7949,
											"end": 7956,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 7968,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7973,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 7938,
											"end": 7990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7988,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7990,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 7938,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8032,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8102,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8102,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8102,
											"end": 8140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8102,
											"end": 8140,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8102,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 8146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8151,
											"end": 8586,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 8151,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8204,
											"end": 8207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8276,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8319,
											"end": 8322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8308,
											"end": 8327,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8308,
											"end": 8327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8361,
											"end": 8363,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8359,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8406,
											"end": 8412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8403,
											"end": 8404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8481,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8421,
											"end": 8430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8392,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8586,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8151,
											"end": 8586,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8591,
											"end": 9062,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 8591,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8632,
											"end": 8635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8675,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 8676,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8685,
											"end": 8704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8743,
											"end": 8744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8753,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8877,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8877,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8883,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8825,
											"end": 8884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 8732,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8906,
											"end": 8919,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 8903,
											"end": 8990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8960,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8942,
											"end": 8980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8990,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 8903,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9048,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9006,
											"end": 9056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9056,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8591,
											"end": 9062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8591,
											"end": 9062,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9275,
											"end": 10101,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9275,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9672,
											"end": 9687,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9687,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9739,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9697,
											"end": 9740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9637,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9597,
											"end": 9601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9840,
											"end": 9859,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9840,
											"end": 9859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9838,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9803,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9893,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9880,
											"end": 9889,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9876,
											"end": 9894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 9919,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 9979,
											"end": 9985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9942,
											"end": 9986,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 9986,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 9942,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 9986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 9986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10035,
											"end": 10044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10027,
											"end": 10033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10020,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10002,
											"end": 10021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10080,
											"end": 10086,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 10063,
											"end": 10095,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10063,
											"end": 10095,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 10063,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10095,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 10101,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 10101,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10106,
											"end": 10666,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 10106,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10418,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10403,
											"end": 10418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10403,
											"end": 10418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10470,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10470,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10502,
											"end": 10504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10547,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10368,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10588,
											"end": 10591,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10573,
											"end": 10592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10573,
											"end": 10592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10598,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10598,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10659,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10638,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10615,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10607,
											"end": 10660,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 10106,
											"end": 10666,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10106,
											"end": 10666,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10671,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 10671,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10813,
											"end": 10817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 10922,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 10905,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10870,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 10870,
											"end": 10926,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10937,
											"end": 11402,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 10937,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11194,
											"end": 11196,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11272,
											"end": 11274,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11220,
											"end": 11276,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11220,
											"end": 11276,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11220,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11312,
											"end": 11334,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11307,
											"end": 11309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11296,
											"end": 11305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11285,
											"end": 11335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11352,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11381,
											"end": 11387,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11352,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11352,
											"end": 11396,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11352,
											"end": 11396,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11352,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11396,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 11402,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10937,
											"end": 11402,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11599,
											"end": 11818,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 11599,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11737,
											"end": 11746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11730,
											"end": 11751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11711,
											"end": 11715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 11808,
											"end": 11810,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 11811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 11768,
											"end": 11812,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12244,
											"end": 12648,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12244,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12448,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12485,
											"end": 12487,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 12465,
											"end": 12483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12524,
											"end": 12558,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 12519,
											"end": 12521,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12504,
											"end": 12522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12497,
											"end": 12559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12592,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12575,
											"end": 12593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12568,
											"end": 12606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12648,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13877,
											"end": 14282,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 13877,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14081,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14061,
											"end": 14082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14061,
											"end": 14082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14061,
											"end": 14082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14091,
											"end": 14121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14191,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 14152,
											"end": 14154,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14223,
											"end": 14225,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14201,
											"end": 14240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14275,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14257,
											"end": 14276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 14282,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14287,
											"end": 14688,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 14287,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14489,
											"end": 14491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14471,
											"end": 14492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14528,
											"end": 14530,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14508,
											"end": 14526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14501,
											"end": 14531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14567,
											"end": 14601,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 14562,
											"end": 14564,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14540,
											"end": 14602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14633,
											"end": 14635,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14611,
											"end": 14646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 14681,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14663,
											"end": 14682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14663,
											"end": 14682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14287,
											"end": 14688,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15516,
											"end": 15922,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 15516,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15718,
											"end": 15720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15721,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15700,
											"end": 15721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15700,
											"end": 15721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 15759,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 15737,
											"end": 15755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15737,
											"end": 15755,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15737,
											"end": 15755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15730,
											"end": 15760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15830,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 15791,
											"end": 15793,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15862,
											"end": 15864,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15847,
											"end": 15865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 15880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15915,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15897,
											"end": 15916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15897,
											"end": 15916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15927,
											"end": 16283,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 15927,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16111,
											"end": 16132,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16111,
											"end": 16132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16111,
											"end": 16132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16202,
											"end": 16204,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16187,
											"end": 16205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16180,
											"end": 16242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16274,
											"end": 16276,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15927,
											"end": 16283,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17108,
											"end": 17512,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 17108,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17310,
											"end": 17312,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17292,
											"end": 17313,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17292,
											"end": 17313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17292,
											"end": 17313,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17351,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17322,
											"end": 17352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17388,
											"end": 17422,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 17383,
											"end": 17385,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17368,
											"end": 17386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17368,
											"end": 17386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17423,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17454,
											"end": 17456,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17439,
											"end": 17457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17439,
											"end": 17457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17432,
											"end": 17470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17505,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17487,
											"end": 17506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17487,
											"end": 17506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17512,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18354,
											"end": 18537,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 18354,
											"end": 18537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18414,
											"end": 18418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18439,
											"end": 18445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18436,
											"end": 18466,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18433,
											"end": 18489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18433,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 18433,
											"end": 18489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18514,
											"end": 18515,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 18510,
											"end": 18524,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18506,
											"end": 18531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18354,
											"end": 18537,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18542,
											"end": 18670,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 18542,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18582,
											"end": 18585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18613,
											"end": 18614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18609,
											"end": 18615,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 18606,
											"end": 18607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 18639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 18639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 18600,
											"end": 18639,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18655,
											"end": 18664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18655,
											"end": 18664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18542,
											"end": 18670,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18675,
											"end": 18800,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 18675,
											"end": 18800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18715,
											"end": 18719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18743,
											"end": 18744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18740,
											"end": 18741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18737,
											"end": 18745,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 18734,
											"end": 18768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18785,
											"end": 18794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18785,
											"end": 18794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18675,
											"end": 18800,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18805,
											"end": 18941,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 18805,
											"end": 18941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18844,
											"end": 18847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18872,
											"end": 18877,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 18862,
											"end": 18901,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18917,
											"end": 18935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18917,
											"end": 18935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18805,
											"end": 18941,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19025,
											"end": 19026,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19021,
											"end": 19033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19033,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19080,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19080,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19089,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 19089,
											"end": 19150,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19147,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 19135,
											"end": 19141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19131,
											"end": 19148,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19148,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19089,
											"end": 19150,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 19089,
											"end": 19150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19196,
											"end": 19198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19185,
											"end": 19199,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19165,
											"end": 19183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19162,
											"end": 19200,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19242,
											"end": 19252,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19237,
											"end": 19240,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19233,
											"end": 19253,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19230,
											"end": 19231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19223,
											"end": 19254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19277,
											"end": 19281,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 19274,
											"end": 19275,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19267,
											"end": 19282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19305,
											"end": 19309,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19302,
											"end": 19303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19295,
											"end": 19310,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19159,
											"end": 19320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 19326,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19331,
											"end": 19580,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 19331,
											"end": 19580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19443,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19422,
											"end": 19435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19422,
											"end": 19435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19418,
											"end": 19445,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19406,
											"end": 19446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19461,
											"end": 19495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19461,
											"end": 19495,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19519,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19458,
											"end": 19520,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 19455,
											"end": 19543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19559,
											"end": 19561,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19552,
											"end": 19574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19331,
											"end": 19580,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19585,
											"end": 19720,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 19585,
											"end": 19720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19624,
											"end": 19627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19645,
											"end": 19662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19645,
											"end": 19662,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19642,
											"end": 19685,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19642,
											"end": 19685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 19642,
											"end": 19685,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19712,
											"end": 19713,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19701,
											"end": 19714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19701,
											"end": 19714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19585,
											"end": 19720,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19725,
											"end": 19852,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 19725,
											"end": 19852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19786,
											"end": 19796,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19781,
											"end": 19784,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19777,
											"end": 19797,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19774,
											"end": 19775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19817,
											"end": 19821,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 19814,
											"end": 19815,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19807,
											"end": 19822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19841,
											"end": 19845,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19838,
											"end": 19839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19831,
											"end": 19846,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19857,
											"end": 19984,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 19857,
											"end": 19984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19918,
											"end": 19928,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19913,
											"end": 19916,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19909,
											"end": 19929,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19899,
											"end": 19930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19949,
											"end": 19953,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 19946,
											"end": 19947,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19939,
											"end": 19954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19973,
											"end": 19977,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19970,
											"end": 19971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19963,
											"end": 19978,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19989,
											"end": 20116,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 19989,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20050,
											"end": 20060,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 20045,
											"end": 20048,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20041,
											"end": 20061,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20038,
											"end": 20039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20031,
											"end": 20062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20085,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 20078,
											"end": 20079,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20071,
											"end": 20086,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20105,
											"end": 20109,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20102,
											"end": 20103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20095,
											"end": 20110,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20300,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 20121,
											"end": 20300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20156,
											"end": 20159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20199,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 20180,
											"end": 20196,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20200,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20174,
											"end": 20294,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20174,
											"end": 20294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 20174,
											"end": 20294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20244,
											"end": 20245,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20241,
											"end": 20242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20238,
											"end": 20239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 20246,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20281,
											"end": 20282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20275,
											"end": 20283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20270,
											"end": 20273,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20266,
											"end": 20284,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 20174,
											"end": 20294,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 20174,
											"end": 20294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20300,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20386,
											"end": 20390,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20368,
											"end": 20384,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20391,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20401,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 20362,
											"end": 20401,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20362,
											"end": 20401,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 20362,
											"end": 20401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20428,
											"end": 20430,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20422,
											"end": 20431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20493,
											"end": 20509,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20489,
											"end": 20514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20489,
											"end": 20514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20486,
											"end": 20487,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20422,
											"end": 20431,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20465,
											"end": 20515,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 20544,
											"end": 20548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20538,
											"end": 20549,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20568,
											"end": 20584,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20674,
											"end": 20676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20667,
											"end": 20671,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20659,
											"end": 20665,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20655,
											"end": 20672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20652,
											"end": 20677,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20647,
											"end": 20649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20639,
											"end": 20645,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20636,
											"end": 20650,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20633,
											"end": 20678,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 20630,
											"end": 20688,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20630,
											"end": 20688,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 20630,
											"end": 20688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20718,
											"end": 20724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20712,
											"end": 20716,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20697,
											"end": 20725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20697,
											"end": 20725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20754,
											"end": 20757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20748,
											"end": 20758,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20781,
											"end": 20783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20773,
											"end": 20779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20770,
											"end": 20784,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20767,
											"end": 20794,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20767,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 20767,
											"end": 20794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20767,
											"end": 20794,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 20767,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20871,
											"end": 20873,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20868,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20846,
											"end": 20850,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20842,
											"end": 20869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20831,
											"end": 20835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20822,
											"end": 20828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20817,
											"end": 20820,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20813,
											"end": 20829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20809,
											"end": 20836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20806,
											"end": 20875,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20803,
											"end": 20885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20803,
											"end": 20885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 20803,
											"end": 20885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20803,
											"end": 20885,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 20803,
											"end": 20885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20894,
											"end": 20951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 20945,
											"end": 20949,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20936,
											"end": 20942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20928,
											"end": 20934,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20924,
											"end": 20943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20920,
											"end": 20950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20914,
											"end": 20918,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20894,
											"end": 20951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 20894,
											"end": 20951,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20894,
											"end": 20951,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 20894,
											"end": 20951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20967,
											"end": 20970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20967,
											"end": 20970,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20305,
											"end": 20976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20981,
											"end": 21112,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 20981,
											"end": 21112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21055,
											"end": 21087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21055,
											"end": 21087,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21088,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21035,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 21035,
											"end": 21106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21102,
											"end": 21103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21099,
											"end": 21100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "REVERT",
											"source": 10
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"brun(address,uint256,uint256)": "092f2dbf",
							"getTokenSupply()": "ad974f4c",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"mintBatchWithNumber(uint256)": "71ac14e6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply()": "7824407f",
							"transferOwnership(address)": "f2fde38b",
							"transferWithNumber(uint256,uint256,address)": "9416308e",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"brun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"mintBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/ERC1155.sol\":\"BeeItems\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/ERC1155.sol\":{\"keccak256\":\"0x7117e45629c307c5521b7e9963b578acde768535f98bd567357be6d387fa7dc5\",\"urls\":[\"bzz-raw://57b60b585a5e4389a1adddd037b9150d71df1c180b80ff74f10201a80429575c\",\"dweb:/ipfs/QmdLyFkkW79gLSxkkC7y6mSC5hYWTWJZaFB3eTqWhFX5MR\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 255,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 255,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {\r... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  jump(tag_23)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {\r... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1101   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_25:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_26:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_27:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_33:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_34:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_37:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_39:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_30:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_23:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":13567:13592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":9053:9067   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9046:9068   */\n      iszero\n        /* \"#utility.yul\":9028:9069   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      tag_16\n        /* \"#utility.yul\":8888:9075   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(\r... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10318:10339   */\n      mstore\n        /* \"#utility.yul\":10375:10377   */\n      0x2b\n        /* \"#utility.yul\":10355:10373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10348:10378   */\n      mstore\n        /* \"#utility.yul\":10414:10448   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10394:10412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10387:10449   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10465:10483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10458:10499   */\n      mstore\n        /* \"#utility.yul\":10516:10535   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||\r... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1381:1564  return\r... */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11564:11566   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11546:11567   */\n      mstore\n        /* \"#utility.yul\":11603:11605   */\n      0x32\n        /* \"#utility.yul\":11583:11601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11576:11606   */\n      mstore\n        /* \"#utility.yul\":11642:11676   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11622:11640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11615:11677   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11693:11711   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11686:11734   */\n      mstore\n        /* \"#utility.yul\":11751:11770   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n      tag_55\n        /* \"#utility.yul\":11362:11776   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(\r... */\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12804:12806   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12786:12807   */\n      mstore\n        /* \"#utility.yul\":12843:12845   */\n      0x29\n        /* \"#utility.yul\":12823:12841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12816:12846   */\n      mstore\n        /* \"#utility.yul\":12882:12916   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12862:12880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12855:12917   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12933:12951   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12926:12965   */\n      mstore\n        /* \"#utility.yul\":12982:13001   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":12602:13007   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_15\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_43:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(\r... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(\r... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10730:10751   */\n      mstore\n        /* \"#utility.yul\":10787:10789   */\n      0x29\n        /* \"#utility.yul\":10767:10785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10760:10790   */\n      mstore\n        /* \"#utility.yul\":10826:10860   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10806:10824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10799:10861   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10877:10895   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10870:10909   */\n      mstore\n        /* \"#utility.yul\":10926:10945   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(\r... */\n      tag_55\n        /* \"#utility.yul\":10546:10951   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(\r... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(\r... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13214:13216   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13196:13217   */\n      mstore\n        /* \"#utility.yul\":13253:13255   */\n      0x28\n        /* \"#utility.yul\":13233:13251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13226:13256   */\n      mstore\n        /* \"#utility.yul\":13292:13326   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13272:13290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13265:13327   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13343:13361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13336:13374   */\n      mstore\n        /* \"#utility.yul\":13391:13410   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":13012:13416   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      iszero\n      tag_129\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {\r... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {\r... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(\r... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12394:12396   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12376:12397   */\n      mstore\n        /* \"#utility.yul\":12433:12435   */\n      0x29\n        /* \"#utility.yul\":12413:12431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12406:12436   */\n      mstore\n        /* \"#utility.yul\":12472:12506   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12452:12470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12445:12507   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12523:12541   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12516:12555   */\n      mstore\n        /* \"#utility.yul\":12572:12591   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12192:12597   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9028:9069   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(\r... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_155\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13777:13802   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":13833:13835   */\n      0x20\n        /* \"#utility.yul\":13818:13836   */\n      dup2\n      add\n        /* \"#utility.yul\":13811:13845   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13750:13768   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {\r... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(\r... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {\r... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_174\n      swap2\n      dup2\n      add\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x01\n    tag_173:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n      tag_176\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_179\n      jumpi\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      tag_184\n      jumpi\n      pop\n      jump(tag_178)\n    tag_184:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_179:\n      pop\n    tag_178:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9506:9508   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9488:9509   */\n      mstore\n        /* \"#utility.yul\":9545:9547   */\n      0x34\n        /* \"#utility.yul\":9525:9543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9518:9548   */\n      mstore\n        /* \"#utility.yul\":9584:9618   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9564:9582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9557:9619   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9635:9653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9628:9678   */\n      mstore\n        /* \"#utility.yul\":9695:9714   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":9304:9720   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_176:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_191\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_94\n      jump\t// in\n    tag_197:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(\r... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {\r... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_201\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_202\n      jump\t// in\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_205\n      swap2\n      dup2\n      add\n      swap1\n      tag_175\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n      tag_206\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_206:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_191\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_220:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_222:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:927   */\n    tag_223:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_225:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:383   */\n      0x20\n        /* \"#utility.yul\":402:445   */\n      tag_226\n        /* \"#utility.yul\":442:444   */\n      dup3\n        /* \"#utility.yul\":402:445   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":474:476   */\n      0x40\n        /* \"#utility.yul\":468:477   */\n      mload\n        /* \"#utility.yul\":486:517   */\n      tag_228\n        /* \"#utility.yul\":514:516   */\n      dup3\n        /* \"#utility.yul\":506:512   */\n      dup3\n        /* \"#utility.yul\":486:517   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":552:570   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":586:601   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":621:636   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":671:672   */\n      0x05\n        /* \"#utility.yul\":667:677   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":655:678   */\n      dup8\n      add\n        /* \"#utility.yul\":651:683   */\n      dup5\n      add\n        /* \"#utility.yul\":648:689   */\n      dup9\n      lt\n        /* \"#utility.yul\":645:706   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":645:706   */\n    tag_230:\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":734:897   */\n    tag_231:\n        /* \"#utility.yul\":748:750   */\n      dup6\n        /* \"#utility.yul\":745:746   */\n      dup2\n        /* \"#utility.yul\":742:751   */\n      lt\n        /* \"#utility.yul\":734:897   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":805:822   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":793:823   */\n      dup5\n      mstore\n        /* \"#utility.yul\":843:855   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":875:887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":766:767   */\n      0x01\n        /* \"#utility.yul\":759:768   */\n      add\n        /* \"#utility.yul\":734:897   */\n      jump(tag_231)\n    tag_233:\n      pop\n        /* \"#utility.yul\":915:921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":192:927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1487   */\n    tag_234:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1027:1030   */\n      dup3\n        /* \"#utility.yul\":1020:1024   */\n      0x1f\n        /* \"#utility.yul\":1012:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1025   */\n      add\n        /* \"#utility.yul\":1004:1031   */\n      slt\n        /* \"#utility.yul\":994:1049   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1042:1043   */\n      dup1\n        /* \"#utility.yul\":1035:1047   */\n      revert\n        /* \"#utility.yul\":994:1049   */\n    tag_236:\n        /* \"#utility.yul\":1081:1087   */\n      dup2\n        /* \"#utility.yul\":1068:1088   */\n      calldataload\n        /* \"#utility.yul\":1107:1125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1103:1105   */\n      dup2\n        /* \"#utility.yul\":1100:1126   */\n      gt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_238\n      tag_86\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1172:1181   */\n      mload\n        /* \"#utility.yul\":1190:1257   */\n      tag_239\n        /* \"#utility.yul\":1245:1247   */\n      0x1f\n        /* \"#utility.yul\":1226:1239   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1222:1249   */\n      and\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1218:1256   */\n      add\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1190:1257   */\n      tag_229\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1281:1283   */\n      dup2\n        /* \"#utility.yul\":1273:1279   */\n      dup2\n        /* \"#utility.yul\":1266:1284   */\n      mstore\n        /* \"#utility.yul\":1327:1330   */\n      dup5\n        /* \"#utility.yul\":1320:1324   */\n      0x20\n        /* \"#utility.yul\":1315:1317   */\n      dup4\n        /* \"#utility.yul\":1307:1313   */\n      dup7\n        /* \"#utility.yul\":1303:1318   */\n      add\n        /* \"#utility.yul\":1299:1325   */\n      add\n        /* \"#utility.yul\":1296:1331   */\n      gt\n        /* \"#utility.yul\":1293:1348   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1341:1342   */\n      dup1\n        /* \"#utility.yul\":1334:1346   */\n      revert\n        /* \"#utility.yul\":1293:1348   */\n    tag_240:\n        /* \"#utility.yul\":1408:1410   */\n      dup2\n        /* \"#utility.yul\":1401:1405   */\n      0x20\n        /* \"#utility.yul\":1393:1399   */\n      dup6\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1374:1380   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1357:1411   */\n      calldatacopy\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1431:1446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1448:1452   */\n      0x20\n        /* \"#utility.yul\":1427:1453   */\n      add\n        /* \"#utility.yul\":1420:1457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1435:1441   */\n      swap4\n        /* \"#utility.yul\":932:1487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1752   */\n    tag_46:\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      dup1\n        /* \"#utility.yul\":1621:1623   */\n      0x40\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1600:1607   */\n      dup6\n        /* \"#utility.yul\":1596:1619   */\n      sub\n        /* \"#utility.yul\":1592:1624   */\n      slt\n        /* \"#utility.yul\":1589:1641   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1589:1641   */\n    tag_242:\n        /* \"#utility.yul\":1660:1689   */\n      tag_243\n        /* \"#utility.yul\":1679:1688   */\n      dup4\n        /* \"#utility.yul\":1660:1689   */\n      tag_220\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1650:1689   */\n      swap2\n      pop\n        /* \"#utility.yul\":1708:1746   */\n      tag_244\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup5\n        /* \"#utility.yul\":1727:1745   */\n      add\n        /* \"#utility.yul\":1708:1746   */\n      tag_220\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1698:1746   */\n      swap1\n      pop\n        /* \"#utility.yul\":1492:1752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2700   */\n    tag_32:\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup1\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1935:1941   */\n      dup1\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1996:1999   */\n      0xa0\n        /* \"#utility.yul\":1984:1993   */\n      dup7\n        /* \"#utility.yul\":1975:1982   */\n      dup9\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:2000   */\n      slt\n        /* \"#utility.yul\":1964:2017   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2010:2011   */\n      dup1\n        /* \"#utility.yul\":2003:2015   */\n      revert\n        /* \"#utility.yul\":1964:2017   */\n    tag_246:\n        /* \"#utility.yul\":2036:2065   */\n      tag_247\n        /* \"#utility.yul\":2055:2064   */\n      dup7\n        /* \"#utility.yul\":2036:2065   */\n      tag_220\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2026:2065   */\n      swap5\n      pop\n        /* \"#utility.yul\":2084:2122   */\n      tag_248\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup8\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2084:2122   */\n      tag_220\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2074:2122   */\n      swap4\n      pop\n        /* \"#utility.yul\":2173:2175   */\n      0x40\n        /* \"#utility.yul\":2162:2171   */\n      dup7\n        /* \"#utility.yul\":2158:2176   */\n      add\n        /* \"#utility.yul\":2145:2177   */\n      calldataload\n        /* \"#utility.yul\":2196:2214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2237:2239   */\n      dup1\n        /* \"#utility.yul\":2229:2235   */\n      dup3\n        /* \"#utility.yul\":2226:2240   */\n      gt\n        /* \"#utility.yul\":2223:2257   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2250:2251   */\n      dup1\n        /* \"#utility.yul\":2243:2255   */\n      revert\n        /* \"#utility.yul\":2223:2257   */\n    tag_249:\n        /* \"#utility.yul\":2276:2337   */\n      tag_250\n        /* \"#utility.yul\":2329:2336   */\n      dup10\n        /* \"#utility.yul\":2320:2326   */\n      dup4\n        /* \"#utility.yul\":2309:2318   */\n      dup11\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2276:2337   */\n      tag_223\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2266:2337   */\n      swap5\n      pop\n        /* \"#utility.yul\":2390:2392   */\n      0x60\n        /* \"#utility.yul\":2379:2388   */\n      dup9\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2362:2394   */\n      calldataload\n        /* \"#utility.yul\":2346:2394   */\n      swap2\n      pop\n        /* \"#utility.yul\":2419:2421   */\n      dup1\n        /* \"#utility.yul\":2409:2417   */\n      dup3\n        /* \"#utility.yul\":2406:2422   */\n      gt\n        /* \"#utility.yul\":2403:2439   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2432:2433   */\n      dup1\n        /* \"#utility.yul\":2425:2437   */\n      revert\n        /* \"#utility.yul\":2403:2439   */\n    tag_251:\n        /* \"#utility.yul\":2458:2521   */\n      tag_252\n        /* \"#utility.yul\":2513:2520   */\n      dup10\n        /* \"#utility.yul\":2502:2510   */\n      dup4\n        /* \"#utility.yul\":2491:2500   */\n      dup11\n        /* \"#utility.yul\":2487:2511   */\n      add\n        /* \"#utility.yul\":2458:2521   */\n      tag_223\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2448:2521   */\n      swap4\n      pop\n        /* \"#utility.yul\":2574:2577   */\n      0x80\n        /* \"#utility.yul\":2563:2572   */\n      dup9\n        /* \"#utility.yul\":2559:2578   */\n      add\n        /* \"#utility.yul\":2546:2579   */\n      calldataload\n        /* \"#utility.yul\":2530:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2606   */\n      dup1\n        /* \"#utility.yul\":2594:2602   */\n      dup3\n        /* \"#utility.yul\":2591:2607   */\n      gt\n        /* \"#utility.yul\":2588:2624   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      dup1\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2588:2624   */\n    tag_253:\n      pop\n        /* \"#utility.yul\":2643:2694   */\n      tag_254\n        /* \"#utility.yul\":2686:2693   */\n      dup9\n        /* \"#utility.yul\":2675:2683   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup10\n        /* \"#utility.yul\":2660:2684   */\n      add\n        /* \"#utility.yul\":2643:2694   */\n      tag_234\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2633:2694   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1757:2700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2705:3311   */\n    tag_51:\n        /* \"#utility.yul\":2809:2815   */\n      0x00\n        /* \"#utility.yul\":2817:2823   */\n      dup1\n        /* \"#utility.yul\":2825:2831   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2841:2847   */\n      0x00\n        /* \"#utility.yul\":2894:2897   */\n      0xa0\n        /* \"#utility.yul\":2882:2891   */\n      dup7\n        /* \"#utility.yul\":2873:2880   */\n      dup9\n        /* \"#utility.yul\":2869:2892   */\n      sub\n        /* \"#utility.yul\":2865:2898   */\n      slt\n        /* \"#utility.yul\":2862:2915   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2908:2909   */\n      dup1\n        /* \"#utility.yul\":2901:2913   */\n      revert\n        /* \"#utility.yul\":2862:2915   */\n    tag_256:\n        /* \"#utility.yul\":2934:2963   */\n      tag_257\n        /* \"#utility.yul\":2953:2962   */\n      dup7\n        /* \"#utility.yul\":2934:2963   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2924:2963   */\n      swap5\n      pop\n        /* \"#utility.yul\":2982:3020   */\n      tag_258\n        /* \"#utility.yul\":3016:3018   */\n      0x20\n        /* \"#utility.yul\":3005:3014   */\n      dup8\n        /* \"#utility.yul\":3001:3019   */\n      add\n        /* \"#utility.yul\":2982:3020   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2972:3020   */\n      swap4\n      pop\n        /* \"#utility.yul\":3067:3069   */\n      0x40\n        /* \"#utility.yul\":3056:3065   */\n      dup7\n        /* \"#utility.yul\":3052:3070   */\n      add\n        /* \"#utility.yul\":3039:3071   */\n      calldataload\n        /* \"#utility.yul\":3029:3071   */\n      swap3\n      pop\n        /* \"#utility.yul\":3118:3120   */\n      0x60\n        /* \"#utility.yul\":3107:3116   */\n      dup7\n        /* \"#utility.yul\":3103:3121   */\n      add\n        /* \"#utility.yul\":3090:3122   */\n      calldataload\n        /* \"#utility.yul\":3080:3122   */\n      swap2\n      pop\n        /* \"#utility.yul\":3173:3176   */\n      0x80\n        /* \"#utility.yul\":3162:3171   */\n      dup7\n        /* \"#utility.yul\":3158:3177   */\n      add\n        /* \"#utility.yul\":3145:3178   */\n      calldataload\n        /* \"#utility.yul\":3201:3219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3193:3199   */\n      dup2\n        /* \"#utility.yul\":3190:3220   */\n      gt\n        /* \"#utility.yul\":3187:3237   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3230:3231   */\n      dup1\n        /* \"#utility.yul\":3223:3235   */\n      revert\n        /* \"#utility.yul\":3187:3237   */\n    tag_259:\n        /* \"#utility.yul\":3256:3305   */\n      tag_254\n        /* \"#utility.yul\":3297:3304   */\n      dup9\n        /* \"#utility.yul\":3288:3294   */\n      dup3\n        /* \"#utility.yul\":3277:3286   */\n      dup10\n        /* \"#utility.yul\":3273:3295   */\n      add\n        /* \"#utility.yul\":3256:3305   */\n      tag_234\n      jump\t// in\n        /* \"#utility.yul\":3316:3663   */\n    tag_42:\n        /* \"#utility.yul\":3381:3387   */\n      0x00\n        /* \"#utility.yul\":3389:3395   */\n      dup1\n        /* \"#utility.yul\":3442:3444   */\n      0x40\n        /* \"#utility.yul\":3430:3439   */\n      dup4\n        /* \"#utility.yul\":3421:3428   */\n      dup6\n        /* \"#utility.yul\":3417:3440   */\n      sub\n        /* \"#utility.yul\":3413:3445   */\n      slt\n        /* \"#utility.yul\":3410:3462   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3458:3459   */\n      0x00\n        /* \"#utility.yul\":3455:3456   */\n      dup1\n        /* \"#utility.yul\":3448:3460   */\n      revert\n        /* \"#utility.yul\":3410:3462   */\n    tag_262:\n        /* \"#utility.yul\":3481:3510   */\n      tag_263\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3481:3510   */\n      tag_220\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3471:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3549:3558   */\n      dup4\n        /* \"#utility.yul\":3545:3563   */\n      add\n        /* \"#utility.yul\":3532:3564   */\n      calldataload\n        /* \"#utility.yul\":3607:3612   */\n      dup1\n        /* \"#utility.yul\":3600:3613   */\n      iszero\n        /* \"#utility.yul\":3593:3614   */\n      iszero\n        /* \"#utility.yul\":3586:3591   */\n      dup2\n        /* \"#utility.yul\":3583:3615   */\n      eq\n        /* \"#utility.yul\":3573:3633   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3573:3633   */\n    tag_264:\n        /* \"#utility.yul\":3652:3657   */\n      dup1\n        /* \"#utility.yul\":3642:3657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3316:3663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3922   */\n    tag_14:\n        /* \"#utility.yul\":3736:3742   */\n      0x00\n        /* \"#utility.yul\":3744:3750   */\n      dup1\n        /* \"#utility.yul\":3797:3799   */\n      0x40\n        /* \"#utility.yul\":3785:3794   */\n      dup4\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3772:3795   */\n      sub\n        /* \"#utility.yul\":3768:3800   */\n      slt\n        /* \"#utility.yul\":3765:3817   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3765:3817   */\n    tag_266:\n        /* \"#utility.yul\":3836:3865   */\n      tag_267\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3836:3865   */\n      tag_220\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3826:3865   */\n      swap5\n        /* \"#utility.yul\":3912:3914   */\n      0x20\n        /* \"#utility.yul\":3897:3915   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3884:3916   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3668:3922   */\n      jump\t// out\n        /* \"#utility.yul\":3927:5146   */\n    tag_36:\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4106:4108   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4085:4092   */\n      dup6\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4109   */\n      slt\n        /* \"#utility.yul\":4074:4126   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4119:4120   */\n      dup1\n        /* \"#utility.yul\":4112:4124   */\n      revert\n        /* \"#utility.yul\":4074:4126   */\n    tag_269:\n        /* \"#utility.yul\":4162:4171   */\n      dup3\n        /* \"#utility.yul\":4149:4172   */\n      calldataload\n        /* \"#utility.yul\":4191:4209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4232:4234   */\n      dup1\n        /* \"#utility.yul\":4224:4230   */\n      dup3\n        /* \"#utility.yul\":4221:4235   */\n      gt\n        /* \"#utility.yul\":4218:4252   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4245:4246   */\n      dup1\n        /* \"#utility.yul\":4238:4250   */\n      revert\n        /* \"#utility.yul\":4218:4252   */\n    tag_270:\n        /* \"#utility.yul\":4286:4292   */\n      dup2\n        /* \"#utility.yul\":4275:4284   */\n      dup6\n        /* \"#utility.yul\":4271:4293   */\n      add\n        /* \"#utility.yul\":4261:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4324:4328   */\n      0x1f\n        /* \"#utility.yul\":4320:4322   */\n      dup4\n        /* \"#utility.yul\":4316:4329   */\n      add\n        /* \"#utility.yul\":4312:4339   */\n      slt\n        /* \"#utility.yul\":4302:4357   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4302:4357   */\n    tag_271:\n        /* \"#utility.yul\":4389:4391   */\n      dup2\n        /* \"#utility.yul\":4376:4392   */\n      calldataload\n        /* \"#utility.yul\":4411:4415   */\n      0x20\n        /* \"#utility.yul\":4434:4477   */\n      tag_272\n        /* \"#utility.yul\":4474:4476   */\n      dup3\n        /* \"#utility.yul\":4434:4477   */\n      tag_227\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4506:4508   */\n      0x40\n        /* \"#utility.yul\":4500:4509   */\n      mload\n        /* \"#utility.yul\":4518:4549   */\n      tag_273\n        /* \"#utility.yul\":4546:4548   */\n      dup3\n        /* \"#utility.yul\":4538:4544   */\n      dup3\n        /* \"#utility.yul\":4518:4549   */\n      tag_229\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4584:4602   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4618:4633   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4664   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4695:4696   */\n      0x05\n        /* \"#utility.yul\":4691:4701   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4683:4702   */\n      dup8\n      add\n        /* \"#utility.yul\":4679:4707   */\n      dup5\n      add\n        /* \"#utility.yul\":4676:4717   */\n      dup12\n      lt\n        /* \"#utility.yul\":4673:4734   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4727:4728   */\n      dup1\n        /* \"#utility.yul\":4720:4732   */\n      revert\n        /* \"#utility.yul\":4673:4734   */\n    tag_274:\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4743:4753   */\n      swap7\n      pop\n        /* \"#utility.yul\":4762:4931   */\n    tag_275:\n        /* \"#utility.yul\":4776:4778   */\n      dup5\n        /* \"#utility.yul\":4773:4774   */\n      dup8\n        /* \"#utility.yul\":4770:4779   */\n      lt\n        /* \"#utility.yul\":4762:4931   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4833:4856   */\n      tag_278\n        /* \"#utility.yul\":4852:4855   */\n      dup2\n        /* \"#utility.yul\":4833:4856   */\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4821:4857   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4794:4795   */\n      0x01\n        /* \"#utility.yul\":4787:4796   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":4877:4889   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4909:4921   */\n      dup4\n      add\n        /* \"#utility.yul\":4762:4931   */\n      jump(tag_275)\n    tag_277:\n      pop\n        /* \"#utility.yul\":4950:4956   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":4994:5012   */\n      dup7\n      add\n        /* \"#utility.yul\":4981:5013   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5025:5041   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5022:5058   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5051:5052   */\n      dup1\n        /* \"#utility.yul\":5044:5056   */\n      revert\n        /* \"#utility.yul\":5022:5058   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":5077:5140   */\n      tag_280\n        /* \"#utility.yul\":5132:5139   */\n      dup6\n        /* \"#utility.yul\":5121:5129   */\n      dup3\n        /* \"#utility.yul\":5110:5119   */\n      dup7\n        /* \"#utility.yul\":5106:5130   */\n      add\n        /* \"#utility.yul\":5077:5140   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5067:5140   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3927:5146   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5396   */\n    tag_20:\n        /* \"#utility.yul\":5209:5215   */\n      0x00\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5250:5259   */\n      dup3\n        /* \"#utility.yul\":5241:5248   */\n      dup5\n        /* \"#utility.yul\":5237:5260   */\n      sub\n        /* \"#utility.yul\":5233:5265   */\n      slt\n        /* \"#utility.yul\":5230:5282   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5275:5276   */\n      dup1\n        /* \"#utility.yul\":5268:5280   */\n      revert\n        /* \"#utility.yul\":5230:5282   */\n    tag_282:\n        /* \"#utility.yul\":5317:5326   */\n      dup2\n        /* \"#utility.yul\":5304:5327   */\n      calldataload\n        /* \"#utility.yul\":5336:5366   */\n      tag_283\n        /* \"#utility.yul\":5360:5365   */\n      dup2\n        /* \"#utility.yul\":5336:5366   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5385:5390   */\n      swap4\n        /* \"#utility.yul\":5151:5396   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5401:5650   */\n    tag_175:\n        /* \"#utility.yul\":5470:5476   */\n      0x00\n        /* \"#utility.yul\":5523:5525   */\n      0x20\n        /* \"#utility.yul\":5511:5520   */\n      dup3\n        /* \"#utility.yul\":5502:5509   */\n      dup5\n        /* \"#utility.yul\":5498:5521   */\n      sub\n        /* \"#utility.yul\":5494:5526   */\n      slt\n        /* \"#utility.yul\":5491:5543   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5491:5543   */\n    tag_286:\n        /* \"#utility.yul\":5571:5580   */\n      dup2\n        /* \"#utility.yul\":5565:5581   */\n      mload\n        /* \"#utility.yul\":5590:5620   */\n      tag_283\n        /* \"#utility.yul\":5614:5619   */\n      dup2\n        /* \"#utility.yul\":5590:5620   */\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":5655:5835   */\n    tag_26:\n        /* \"#utility.yul\":5714:5720   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5787   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5783:5784   */\n      0x00\n        /* \"#utility.yul\":5780:5781   */\n      dup1\n        /* \"#utility.yul\":5773:5785   */\n      revert\n        /* \"#utility.yul\":5735:5787   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":5806:5829   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5655:5835   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5840:6275   */\n    tag_290:\n        /* \"#utility.yul\":5893:5896   */\n      0x00\n        /* \"#utility.yul\":5931:5936   */\n      dup2\n        /* \"#utility.yul\":5925:5937   */\n      mload\n        /* \"#utility.yul\":5958:5964   */\n      dup1\n        /* \"#utility.yul\":5953:5956   */\n      dup5\n        /* \"#utility.yul\":5946:5965   */\n      mstore\n        /* \"#utility.yul\":5984:5988   */\n      0x20\n        /* \"#utility.yul\":6013:6015   */\n      dup1\n        /* \"#utility.yul\":6008:6011   */\n      dup6\n        /* \"#utility.yul\":6004:6016   */\n      add\n        /* \"#utility.yul\":5997:6016   */\n      swap5\n      pop\n        /* \"#utility.yul\":6050:6052   */\n      dup1\n        /* \"#utility.yul\":6043:6048   */\n      dup5\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6071:6072   */\n      0x00\n        /* \"#utility.yul\":6081:6250   */\n    tag_292:\n        /* \"#utility.yul\":6095:6101   */\n      dup4\n        /* \"#utility.yul\":6092:6093   */\n      dup2\n        /* \"#utility.yul\":6089:6102   */\n      lt\n        /* \"#utility.yul\":6081:6250   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6156:6169   */\n      dup2\n      mload\n        /* \"#utility.yul\":6144:6170   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6190:6202   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6225:6240   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6117:6118   */\n      0x01\n        /* \"#utility.yul\":6110:6119   */\n      add\n        /* \"#utility.yul\":6081:6250   */\n      jump(tag_292)\n    tag_294:\n      pop\n        /* \"#utility.yul\":6266:6269   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5840:6275   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6280:6751   */\n    tag_295:\n        /* \"#utility.yul\":6321:6324   */\n      0x00\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6353:6365   */\n      mload\n        /* \"#utility.yul\":6386:6392   */\n      dup1\n        /* \"#utility.yul\":6381:6384   */\n      dup5\n        /* \"#utility.yul\":6374:6393   */\n      mstore\n        /* \"#utility.yul\":6411:6412   */\n      0x00\n        /* \"#utility.yul\":6421:6583   */\n    tag_297:\n        /* \"#utility.yul\":6435:6441   */\n      dup2\n        /* \"#utility.yul\":6432:6433   */\n      dup2\n        /* \"#utility.yul\":6429:6442   */\n      lt\n        /* \"#utility.yul\":6421:6583   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6497:6501   */\n      0x20\n        /* \"#utility.yul\":6553:6566   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6549:6571   */\n      dup2\n      add\n        /* \"#utility.yul\":6543:6572   */\n      mload\n        /* \"#utility.yul\":6525:6536   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6521:6541   */\n      dup3\n      add\n        /* \"#utility.yul\":6514:6573   */\n      mstore\n        /* \"#utility.yul\":6450:6462   */\n      add\n        /* \"#utility.yul\":6421:6583   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":6601:6607   */\n      dup2\n        /* \"#utility.yul\":6598:6599   */\n      dup2\n        /* \"#utility.yul\":6595:6608   */\n      gt\n        /* \"#utility.yul\":6592:6679   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6651:6657   */\n      dup4\n        /* \"#utility.yul\":6646:6649   */\n      dup8\n        /* \"#utility.yul\":6642:6658   */\n      add\n        /* \"#utility.yul\":6638:6665   */\n      add\n        /* \"#utility.yul\":6631:6669   */\n      mstore\n        /* \"#utility.yul\":6592:6679   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x1f\n        /* \"#utility.yul\":6712:6727   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6708:6737   */\n      and\n        /* \"#utility.yul\":6699:6738   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6740:6744   */\n      0x20\n        /* \"#utility.yul\":6695:6745   */\n      add\n      swap3\n        /* \"#utility.yul\":6280:6751   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6756:7582   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7153:7168   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7135:7169   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7205:7220   */\n      dup6\n      and\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7185:7203   */\n      dup3\n      add\n        /* \"#utility.yul\":7178:7221   */\n      mstore\n        /* \"#utility.yul\":7115:7118   */\n      0xa0\n        /* \"#utility.yul\":7252:7254   */\n      0x40\n        /* \"#utility.yul\":7237:7255   */\n      dup3\n      add\n        /* \"#utility.yul\":7230:7261   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7078:7082   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7284:7341   */\n      tag_302\n      swap1\n        /* \"#utility.yul\":7321:7340   */\n      dup4\n      add\n        /* \"#utility.yul\":7313:7319   */\n      dup7\n        /* \"#utility.yul\":7284:7341   */\n      tag_290\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7389:7398   */\n      dup3\n        /* \"#utility.yul\":7381:7387   */\n      dup2\n        /* \"#utility.yul\":7377:7399   */\n      sub\n        /* \"#utility.yul\":7372:7374   */\n      0x60\n        /* \"#utility.yul\":7361:7370   */\n      dup5\n        /* \"#utility.yul\":7357:7375   */\n      add\n        /* \"#utility.yul\":7350:7400   */\n      mstore\n        /* \"#utility.yul\":7423:7467   */\n      tag_303\n        /* \"#utility.yul\":7460:7466   */\n      dup2\n        /* \"#utility.yul\":7452:7458   */\n      dup7\n        /* \"#utility.yul\":7423:7467   */\n      tag_290\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7409:7467   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7525   */\n      dup3\n        /* \"#utility.yul\":7508:7514   */\n      dup2\n        /* \"#utility.yul\":7504:7526   */\n      sub\n        /* \"#utility.yul\":7498:7501   */\n      0x80\n        /* \"#utility.yul\":7487:7496   */\n      dup5\n        /* \"#utility.yul\":7483:7502   */\n      add\n        /* \"#utility.yul\":7476:7527   */\n      mstore\n        /* \"#utility.yul\":7544:7576   */\n      tag_304\n        /* \"#utility.yul\":7569:7575   */\n      dup2\n        /* \"#utility.yul\":7561:7567   */\n      dup6\n        /* \"#utility.yul\":7544:7576   */\n      tag_295\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7536:7576   */\n      swap9\n        /* \"#utility.yul\":6756:7582   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7587:8147   */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7884:7899   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7866:7900   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7936:7951   */\n      dup6\n      and\n        /* \"#utility.yul\":7931:7933   */\n      0x20\n        /* \"#utility.yul\":7916:7934   */\n      dup3\n      add\n        /* \"#utility.yul\":7909:7952   */\n      mstore\n        /* \"#utility.yul\":7983:7985   */\n      0x40\n        /* \"#utility.yul\":7968:7986   */\n      dup2\n      add\n        /* \"#utility.yul\":7961:7995   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8026:8028   */\n      0x60\n        /* \"#utility.yul\":8011:8029   */\n      dup2\n      add\n        /* \"#utility.yul\":8004:8038   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7846:7849   */\n      0xa0\n        /* \"#utility.yul\":8069:8072   */\n      0x80\n        /* \"#utility.yul\":8054:8073   */\n      dup3\n      add\n        /* \"#utility.yul\":8047:8079   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7809:7813   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8096:8141   */\n      tag_306\n      swap1\n        /* \"#utility.yul\":8121:8140   */\n      dup4\n      add\n        /* \"#utility.yul\":8113:8119   */\n      dup5\n        /* \"#utility.yul\":8096:8141   */\n      tag_295\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8088:8141   */\n      swap8\n        /* \"#utility.yul\":7587:8147   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8413   */\n    tag_39:\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8320:8329   */\n      dup2\n        /* \"#utility.yul\":8313:8334   */\n      mstore\n        /* \"#utility.yul\":8294:8298   */\n      0x00\n        /* \"#utility.yul\":8351:8407   */\n      tag_283\n        /* \"#utility.yul\":8403:8405   */\n      0x20\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8388:8406   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup5\n        /* \"#utility.yul\":8351:8407   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":8418:8883   */\n    tag_142:\n        /* \"#utility.yul\":8675:8677   */\n      0x40\n        /* \"#utility.yul\":8664:8673   */\n      dup2\n        /* \"#utility.yul\":8657:8678   */\n      mstore\n        /* \"#utility.yul\":8638:8642   */\n      0x00\n        /* \"#utility.yul\":8701:8757   */\n      tag_310\n        /* \"#utility.yul\":8753:8755   */\n      0x40\n        /* \"#utility.yul\":8742:8751   */\n      dup4\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"#utility.yul\":8730:8736   */\n      dup6\n        /* \"#utility.yul\":8701:8757   */\n      tag_290\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8805:8814   */\n      dup3\n        /* \"#utility.yul\":8797:8803   */\n      dup2\n        /* \"#utility.yul\":8793:8815   */\n      sub\n        /* \"#utility.yul\":8788:8790   */\n      0x20\n        /* \"#utility.yul\":8777:8786   */\n      dup5\n        /* \"#utility.yul\":8773:8791   */\n      add\n        /* \"#utility.yul\":8766:8816   */\n      mstore\n        /* \"#utility.yul\":8833:8877   */\n      tag_311\n        /* \"#utility.yul\":8870:8876   */\n      dup2\n        /* \"#utility.yul\":8862:8868   */\n      dup6\n        /* \"#utility.yul\":8833:8877   */\n      tag_290\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8825:8877   */\n      swap6\n        /* \"#utility.yul\":8418:8883   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9299   */\n    tag_29:\n        /* \"#utility.yul\":9229:9231   */\n      0x20\n        /* \"#utility.yul\":9218:9227   */\n      dup2\n        /* \"#utility.yul\":9211:9232   */\n      mstore\n        /* \"#utility.yul\":9192:9196   */\n      0x00\n        /* \"#utility.yul\":9249:9293   */\n      tag_283\n        /* \"#utility.yul\":9289:9291   */\n      0x20\n        /* \"#utility.yul\":9278:9287   */\n      dup4\n        /* \"#utility.yul\":9274:9292   */\n      add\n        /* \"#utility.yul\":9266:9272   */\n      dup5\n        /* \"#utility.yul\":9249:9293   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":9725:10129   */\n    tag_191:\n        /* \"#utility.yul\":9927:9929   */\n      0x20\n        /* \"#utility.yul\":9909:9930   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9966:9968   */\n      0x28\n        /* \"#utility.yul\":9946:9964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9939:9969   */\n      mstore\n        /* \"#utility.yul\":10005:10039   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10000:10002   */\n      0x40\n        /* \"#utility.yul\":9985:10003   */\n      dup3\n      add\n        /* \"#utility.yul\":9978:10040   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10071:10073   */\n      0x60\n        /* \"#utility.yul\":10056:10074   */\n      dup3\n      add\n        /* \"#utility.yul\":10049:10087   */\n      mstore\n        /* \"#utility.yul\":10119:10122   */\n      0x80\n        /* \"#utility.yul\":10104:10123   */\n      add\n      swap1\n        /* \"#utility.yul\":9725:10129   */\n      jump\t// out\n        /* \"#utility.yul\":10956:11357   */\n    tag_124:\n        /* \"#utility.yul\":11158:11160   */\n      0x20\n        /* \"#utility.yul\":11140:11161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11197:11199   */\n      0x25\n        /* \"#utility.yul\":11177:11195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11170:11200   */\n      mstore\n        /* \"#utility.yul\":11236:11270   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11216:11234   */\n      dup3\n      add\n        /* \"#utility.yul\":11209:11271   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11302:11304   */\n      0x60\n        /* \"#utility.yul\":11287:11305   */\n      dup3\n      add\n        /* \"#utility.yul\":11280:11315   */\n      mstore\n        /* \"#utility.yul\":11347:11350   */\n      0x80\n        /* \"#utility.yul\":11332:11351   */\n      add\n      swap1\n        /* \"#utility.yul\":10956:11357   */\n      jump\t// out\n        /* \"#utility.yul\":11781:12187   */\n    tag_137:\n        /* \"#utility.yul\":11983:11985   */\n      0x20\n        /* \"#utility.yul\":11965:11986   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12022:12024   */\n      0x2a\n        /* \"#utility.yul\":12002:12020   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11995:12025   */\n      mstore\n        /* \"#utility.yul\":12061:12095   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12056:12058   */\n      0x40\n        /* \"#utility.yul\":12041:12059   */\n      dup3\n      add\n        /* \"#utility.yul\":12034:12096   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12127:12129   */\n      0x60\n        /* \"#utility.yul\":12112:12130   */\n      dup3\n      add\n        /* \"#utility.yul\":12105:12145   */\n      mstore\n        /* \"#utility.yul\":12177:12180   */\n      0x80\n        /* \"#utility.yul\":12162:12181   */\n      add\n      swap1\n        /* \"#utility.yul\":11781:12187   */\n      jump\t// out\n        /* \"#utility.yul\":13856:14039   */\n    tag_227:\n        /* \"#utility.yul\":13916:13920   */\n      0x00\n        /* \"#utility.yul\":13949:13967   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13941:13947   */\n      dup3\n        /* \"#utility.yul\":13938:13968   */\n      gt\n        /* \"#utility.yul\":13935:13991   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":13971:13989   */\n      tag_329\n      tag_86\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":14016:14017   */\n      0x05\n        /* \"#utility.yul\":14012:14026   */\n      shl\n        /* \"#utility.yul\":14028:14032   */\n      0x20\n        /* \"#utility.yul\":14008:14033   */\n      add\n      swap1\n        /* \"#utility.yul\":13856:14039   */\n      jump\t// out\n        /* \"#utility.yul\":14044:14172   */\n    tag_139:\n        /* \"#utility.yul\":14084:14087   */\n      0x00\n        /* \"#utility.yul\":14115:14116   */\n      dup3\n        /* \"#utility.yul\":14111:14117   */\n      not\n        /* \"#utility.yul\":14108:14109   */\n      dup3\n        /* \"#utility.yul\":14105:14118   */\n      gt\n        /* \"#utility.yul\":14102:14141   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":14121:14139   */\n      tag_332\n      tag_333\n      jump\t// in\n    tag_332:\n      pop\n        /* \"#utility.yul\":14157:14166   */\n      add\n      swap1\n        /* \"#utility.yul\":14044:14172   */\n      jump\t// out\n        /* \"#utility.yul\":14177:14557   */\n    tag_64:\n        /* \"#utility.yul\":14256:14257   */\n      0x01\n        /* \"#utility.yul\":14252:14264   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14299:14311   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14320:14381   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":14374:14378   */\n      0x7f\n        /* \"#utility.yul\":14366:14372   */\n      dup3\n        /* \"#utility.yul\":14362:14379   */\n      and\n        /* \"#utility.yul\":14352:14379   */\n      swap2\n      pop\n        /* \"#utility.yul\":14320:14381   */\n    tag_335:\n        /* \"#utility.yul\":14427:14429   */\n      0x20\n        /* \"#utility.yul\":14419:14425   */\n      dup3\n        /* \"#utility.yul\":14416:14430   */\n      lt\n        /* \"#utility.yul\":14396:14414   */\n      dup2\n        /* \"#utility.yul\":14393:14431   */\n      eq\n        /* \"#utility.yul\":14390:14551   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":14473:14483   */\n      0x4e487b71\n        /* \"#utility.yul\":14468:14471   */\n      0xe0\n        /* \"#utility.yul\":14464:14484   */\n      shl\n        /* \"#utility.yul\":14461:14462   */\n      0x00\n        /* \"#utility.yul\":14454:14485   */\n      mstore\n        /* \"#utility.yul\":14508:14512   */\n      0x22\n        /* \"#utility.yul\":14505:14506   */\n      0x04\n        /* \"#utility.yul\":14498:14513   */\n      mstore\n        /* \"#utility.yul\":14536:14540   */\n      0x24\n        /* \"#utility.yul\":14533:14534   */\n      0x00\n        /* \"#utility.yul\":14526:14541   */\n      revert\n        /* \"#utility.yul\":14390:14551   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":14177:14557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14562:14811   */\n    tag_229:\n        /* \"#utility.yul\":14672:14674   */\n      0x1f\n        /* \"#utility.yul\":14653:14666   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14649:14676   */\n      and\n        /* \"#utility.yul\":14637:14677   */\n      dup2\n      add\n        /* \"#utility.yul\":14707:14725   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14692:14726   */\n      dup2\n      gt\n        /* \"#utility.yul\":14728:14750   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":14689:14751   */\n      or\n        /* \"#utility.yul\":14686:14774   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14754:14772   */\n      tag_339\n      tag_86\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14790:14792   */\n      0x40\n        /* \"#utility.yul\":14783:14805   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14562:14811   */\n      jump\t// out\n        /* \"#utility.yul\":14816:14951   */\n    tag_100:\n        /* \"#utility.yul\":14855:14858   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":14876:14893   */\n      dup3\n      eq\n        /* \"#utility.yul\":14873:14916   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":14896:14914   */\n      tag_342\n      tag_333\n      jump\t// in\n    tag_342:\n      pop\n        /* \"#utility.yul\":14943:14944   */\n      0x01\n        /* \"#utility.yul\":14932:14945   */\n      add\n      swap1\n        /* \"#utility.yul\":14816:14951   */\n      jump\t// out\n        /* \"#utility.yul\":14956:15083   */\n    tag_333:\n        /* \"#utility.yul\":15017:15027   */\n      0x4e487b71\n        /* \"#utility.yul\":15012:15015   */\n      0xe0\n        /* \"#utility.yul\":15008:15028   */\n      shl\n        /* \"#utility.yul\":15005:15006   */\n      0x00\n        /* \"#utility.yul\":14998:15029   */\n      mstore\n        /* \"#utility.yul\":15048:15052   */\n      0x11\n        /* \"#utility.yul\":15045:15046   */\n      0x04\n        /* \"#utility.yul\":15038:15053   */\n      mstore\n        /* \"#utility.yul\":15072:15076   */\n      0x24\n        /* \"#utility.yul\":15069:15070   */\n      0x00\n        /* \"#utility.yul\":15062:15077   */\n      revert\n        /* \"#utility.yul\":15088:15215   */\n    tag_94:\n        /* \"#utility.yul\":15149:15159   */\n      0x4e487b71\n        /* \"#utility.yul\":15144:15147   */\n      0xe0\n        /* \"#utility.yul\":15140:15160   */\n      shl\n        /* \"#utility.yul\":15137:15138   */\n      0x00\n        /* \"#utility.yul\":15130:15161   */\n      mstore\n        /* \"#utility.yul\":15180:15184   */\n      0x32\n        /* \"#utility.yul\":15177:15178   */\n      0x04\n        /* \"#utility.yul\":15170:15185   */\n      mstore\n        /* \"#utility.yul\":15204:15208   */\n      0x24\n        /* \"#utility.yul\":15201:15202   */\n      0x00\n        /* \"#utility.yul\":15194:15209   */\n      revert\n        /* \"#utility.yul\":15220:15347   */\n    tag_86:\n        /* \"#utility.yul\":15281:15291   */\n      0x4e487b71\n        /* \"#utility.yul\":15276:15279   */\n      0xe0\n        /* \"#utility.yul\":15272:15292   */\n      shl\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15262:15293   */\n      mstore\n        /* \"#utility.yul\":15312:15316   */\n      0x41\n        /* \"#utility.yul\":15309:15310   */\n      0x04\n        /* \"#utility.yul\":15302:15317   */\n      mstore\n        /* \"#utility.yul\":15336:15340   */\n      0x24\n        /* \"#utility.yul\":15333:15334   */\n      0x00\n        /* \"#utility.yul\":15326:15341   */\n      revert\n        /* \"#utility.yul\":15352:15531   */\n    tag_181:\n        /* \"#utility.yul\":15387:15390   */\n      0x00\n        /* \"#utility.yul\":15429:15430   */\n      0x03\n        /* \"#utility.yul\":15411:15427   */\n      returndatasize\n        /* \"#utility.yul\":15408:15431   */\n      gt\n        /* \"#utility.yul\":15405:15525   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":15475:15476   */\n      0x04\n        /* \"#utility.yul\":15472:15473   */\n      0x00\n        /* \"#utility.yul\":15469:15470   */\n      dup1\n        /* \"#utility.yul\":15454:15477   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":15512:15513   */\n      0x00\n        /* \"#utility.yul\":15506:15514   */\n      mload\n        /* \"#utility.yul\":15501:15504   */\n      0xe0\n        /* \"#utility.yul\":15497:15515   */\n      shr\n        /* \"#utility.yul\":15405:15525   */\n    tag_347:\n        /* \"#utility.yul\":15352:15531   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15536:16207   */\n    tag_183:\n        /* \"#utility.yul\":15575:15578   */\n      0x00\n        /* \"#utility.yul\":15617:15621   */\n      0x44\n        /* \"#utility.yul\":15599:15615   */\n      returndatasize\n        /* \"#utility.yul\":15596:15622   */\n      lt\n        /* \"#utility.yul\":15593:15632   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15593:15632   */\n    tag_349:\n        /* \"#utility.yul\":15659:15661   */\n      0x40\n        /* \"#utility.yul\":15653:15662   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15724:15740   */\n      returndatasize\n        /* \"#utility.yul\":15720:15745   */\n      dup2\n      add\n        /* \"#utility.yul\":15717:15718   */\n      0x04\n        /* \"#utility.yul\":15653:15662   */\n      dup4\n        /* \"#utility.yul\":15696:15746   */\n      returndatacopy\n        /* \"#utility.yul\":15775:15779   */\n      dup2\n        /* \"#utility.yul\":15769:15780   */\n      mload\n        /* \"#utility.yul\":15799:15815   */\n      returndatasize\n        /* \"#utility.yul\":15834:15852   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15905:15907   */\n      dup2\n        /* \"#utility.yul\":15898:15902   */\n      0x24\n        /* \"#utility.yul\":15890:15896   */\n      dup5\n        /* \"#utility.yul\":15886:15903   */\n      add\n        /* \"#utility.yul\":15883:15908   */\n      gt\n        /* \"#utility.yul\":15878:15880   */\n      dup2\n        /* \"#utility.yul\":15870:15876   */\n      dup5\n        /* \"#utility.yul\":15867:15881   */\n      gt\n        /* \"#utility.yul\":15864:15909   */\n      or\n        /* \"#utility.yul\":15861:15919   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":15912:15917   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15861:15919   */\n    tag_350:\n        /* \"#utility.yul\":15949:15955   */\n      dup3\n        /* \"#utility.yul\":15943:15947   */\n      dup6\n        /* \"#utility.yul\":15939:15956   */\n      add\n        /* \"#utility.yul\":15928:15956   */\n      swap2\n      pop\n        /* \"#utility.yul\":15985:15988   */\n      dup2\n        /* \"#utility.yul\":15979:15989   */\n      mload\n        /* \"#utility.yul\":16012:16014   */\n      dup2\n        /* \"#utility.yul\":16004:16010   */\n      dup2\n        /* \"#utility.yul\":16001:16015   */\n      gt\n        /* \"#utility.yul\":15998:16025   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":16018:16023   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15998:16025   */\n    tag_351:\n        /* \"#utility.yul\":16102:16104   */\n      dup5\n        /* \"#utility.yul\":16083:16099   */\n      returndatasize\n        /* \"#utility.yul\":16077:16081   */\n      dup8\n        /* \"#utility.yul\":16073:16100   */\n      add\n        /* \"#utility.yul\":16069:16105   */\n      add\n        /* \"#utility.yul\":16062:16066   */\n      0x20\n        /* \"#utility.yul\":16053:16059   */\n      dup3\n        /* \"#utility.yul\":16048:16051   */\n      dup6\n        /* \"#utility.yul\":16044:16060   */\n      add\n        /* \"#utility.yul\":16040:16067   */\n      add\n        /* \"#utility.yul\":16037:16106   */\n      gt\n        /* \"#utility.yul\":16034:16116   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":16109:16114   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16034:16116   */\n    tag_352:\n        /* \"#utility.yul\":16125:16182   */\n      tag_353\n        /* \"#utility.yul\":16176:16180   */\n      0x20\n        /* \"#utility.yul\":16167:16173   */\n      dup3\n        /* \"#utility.yul\":16159:16165   */\n      dup7\n        /* \"#utility.yul\":16155:16174   */\n      add\n        /* \"#utility.yul\":16151:16181   */\n      add\n        /* \"#utility.yul\":16145:16149   */\n      dup8\n        /* \"#utility.yul\":16125:16182   */\n      tag_229\n      jump\t// in\n    tag_353:\n      pop\n        /* \"#utility.yul\":16198:16201   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15536:16207   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16343   */\n    tag_284:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16286:16318   */\n      dup2\n      and\n        /* \"#utility.yul\":16276:16319   */\n      dup2\n      eq\n        /* \"#utility.yul\":16266:16337   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":16333:16334   */\n      0x00\n        /* \"#utility.yul\":16330:16331   */\n      dup1\n        /* \"#utility.yul\":16323:16335   */\n      revert\n        /* \"#utility.yul\":16266:16337   */\n    tag_355:\n        /* \"#utility.yul\":16212:16343   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122053e210980b4033ddc13506d230a4e4e55f68f3e9807ef593cf91d9d5b07c1b9964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 70,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:10"
															},
															"nodeType": "YulIf",
															"src": "136:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:10"
															},
															"nodeType": "YulIf",
															"src": "273:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:10"
															},
															"nodeType": "YulIf",
															"src": "357:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:10"
															},
															"nodeType": "YulIf",
															"src": "449:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:10"
															},
															"nodeType": "YulIf",
															"src": "632:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:10"
															},
															"nodeType": "YulIf",
															"src": "771:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:10",
																"statements": []
															},
															"src": "852:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:10"
															},
															"nodeType": "YulIf",
															"src": "990:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:10",
														"type": ""
													}
												],
												"src": "14:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:10"
															},
															"nodeType": "YulIf",
															"src": "1249:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:10"
															},
															"nodeType": "YulIf",
															"src": "1319:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:10",
														"type": ""
													}
												],
												"src": "1106:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200162e3803806200162e833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6113ea80620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e49565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f44565b610223565b60405190151581526020016100a9565b6100e86100e3366004610f85565b610275565b6040516100a9919061110a565b610108610103366004610cfe565b610309565b005b61011d610118366004610e73565b6103a0565b6040516100a991906110c9565b610108610138366004610e0d565b6104ca565b6100c561014b366004610ccb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610da8565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611230565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611230565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff811115610421576104216112df565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6112c9565b6020026020010151858381518110610488576104886112c9565b602002602001015161018c565b8282815181106104a7576104a76112c9565b60209081029190910101526104bb81611298565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081e565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611165565b3360005b84518110156106cf576000858281518110610609576106096112c9565b602002602001015190506000858381518110610627576106276112c9565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f4906111aa565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611218565b92505081905550505050806106c890611298565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906110dc565b60405180910390a4610735818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f490611165565b3361085d81878761085488610aaf565b61039988610aaf565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f4906111aa565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db908490611218565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610afa565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109889089908990889088908890600401611026565b602060405180830381600087803b1580156109a257600080fd5b505af19250505080156109d2575060408051601f3d908101601f191682019092526109cf91810190610f68565b60015b610a7f576109de6112f5565b806308c379a01415610a1857506109f3611311565b806109fe5750610a1a565b8060405162461bcd60e51b81526004016101f4919061110a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f49061111d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ae957610ae96112c9565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b3e9089908990889088908890600401611084565b602060405180830381600087803b158015610b5857600080fd5b505af1925050508015610b88575060408051601f3d908101601f19168201909252610b8591810190610f68565b60015b610b94576109de6112f5565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f49061111d565b80356001600160a01b0381168114610bdb57600080fd5b919050565b600082601f830112610bf157600080fd5b81356020610bfe826111f4565b604051610c0b828261126b565b8381528281019150858301600585901b87018401881015610c2b57600080fd5b60005b85811015610c4a57813584529284019290840190600101610c2e565b5090979650505050505050565b600082601f830112610c6857600080fd5b813567ffffffffffffffff811115610c8257610c826112df565b604051610c99601f8301601f19166020018261126b565b818152846020838601011115610cae57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610cde57600080fd5b610ce783610bc4565b9150610cf560208401610bc4565b90509250929050565b600080600080600060a08688031215610d1657600080fd5b610d1f86610bc4565b9450610d2d60208701610bc4565b9350604086013567ffffffffffffffff80821115610d4a57600080fd5b610d5689838a01610be0565b94506060880135915080821115610d6c57600080fd5b610d7889838a01610be0565b93506080880135915080821115610d8e57600080fd5b50610d9b88828901610c57565b9150509295509295909350565b600080600080600060a08688031215610dc057600080fd5b610dc986610bc4565b9450610dd760208701610bc4565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e0157600080fd5b610d9b88828901610c57565b60008060408385031215610e2057600080fd5b610e2983610bc4565b915060208301358015158114610e3e57600080fd5b809150509250929050565b60008060408385031215610e5c57600080fd5b610e6583610bc4565b946020939093013593505050565b60008060408385031215610e8657600080fd5b823567ffffffffffffffff80821115610e9e57600080fd5b818501915085601f830112610eb257600080fd5b81356020610ebf826111f4565b604051610ecc828261126b565b8381528281019150858301600585901b870184018b1015610eec57600080fd5b600096505b84871015610f1657610f0281610bc4565b835260019690960195918301918301610ef1565b5096505086013592505080821115610f2d57600080fd5b50610f3a85828601610be0565b9150509250929050565b600060208284031215610f5657600080fd5b8135610f618161139b565b9392505050565b600060208284031215610f7a57600080fd5b8151610f618161139b565b600060208284031215610f9757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610fce57815187529582019590820190600101610fb2565b509495945050505050565b6000815180845260005b81811015610fff57602081850181015186830182015201610fe3565b81811115611011576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061105290830186610f9e565b82810360608401526110648186610f9e565b905082810360808401526110788185610fd9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110be90830184610fd9565b979650505050505050565b602081526000610f616020830184610f9e565b6040815260006110ef6040830185610f9e565b82810360208401526111018185610f9e565b95945050505050565b602081526000610f616020830184610fd9565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561120e5761120e6112df565b5060051b60200190565b6000821982111561122b5761122b6112b3565b500190565b600181811c9082168061124457607f821691505b6020821081141561126557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611291576112916112df565b6040525050565b60006000198214156112ac576112ac6112b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561130e5760046000803e5060005160e01c5b90565b600060443d101561131f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561134f57505050505090565b82850191508151818111156113675750505050505090565b843d87010160208285010111156113815750505050505090565b6113906020828601018761126b565b509095945050505050565b6001600160e01b0319811681146113b157600080fd5b5056fea264697066735822122053e210980b4033ddc13506d230a4e4e55f68f3e9807ef593cf91d9d5b07c1b9964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162E CODESIZE SUB DUP1 PUSH3 0x162E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15B PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x186 JUMPI PUSH3 0x186 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1C3 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1A4 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x218 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13EA DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA7F JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA18 JUMPI POP PUSH2 0x9F3 PUSH2 0x1311 JUMP JUMPDEST DUP1 PUSH2 0x9FE JUMPI POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB85 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB94 JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBFE DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0B DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC4A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC2E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC99 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF5 PUSH1 0x20 DUP5 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD2D PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD56 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD78 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC9 DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xDD7 PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE29 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEBF DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xECC DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF02 DUP2 PUSH2 0xBC4 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEF1 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3A DUP6 DUP3 DUP7 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFB2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1052 SWAP1 DUP4 ADD DUP7 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1064 DUP2 DUP7 PUSH2 0xF9E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1078 DUP2 DUP6 PUSH2 0xFD9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10BE SWAP1 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1101 DUP2 DUP6 PUSH2 0xF9E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH2 0x120E PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122B PUSH2 0x12B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x12B3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x130E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x131F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x134F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1367 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1381 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1390 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x126B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xE2 LT SWAP9 SIGNEXTEND BLOCKHASH CALLER 0xDD 0xC1 CALLDATALOAD MOD 0xD2 ADDRESS LOG4 0xE4 0xE5 0x5F PUSH9 0xF3E9807EF593CF91D9 0xD5 0xB0 PUSH29 0x1B9964736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "574:15164:2:-:0;;;1126:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:13;1177:4;1169:7;:13::i;:::-;1126:64;574:15164;;8180:88;8247:13;;;;:4;;:13;;;;;:::i;:::-;;8180:88;:::o;574:15164::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;574:15164:2;;;-1:-1:-1;574:15164:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:10;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:10;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:10;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:10:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;574:15164:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 2735,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 2372,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 2810,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 1376,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 2078,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 1853,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 928,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 396,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 777,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 1241,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 1226,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 547,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_440": {
									"entryPoint": 629,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16345:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:10"
															},
															"nodeType": "YulIf",
															"src": "266:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "369:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "379:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "373:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "442:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "402:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "396:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "468:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "458:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "514:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "486:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "486:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "559:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "567:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "579:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "614:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "674:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "680:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "648:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:41:10"
															},
															"nodeType": "YulIf",
															"src": "645:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "724:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "719:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "800:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "805:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "805:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "793:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "793:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "836:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "852:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "868:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "742:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "752:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "754:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "763:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "759:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "759:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "754:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "738:3:10",
																"statements": []
															},
															"src": "734:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "906:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "915:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:10",
														"type": ""
													}
												],
												"src": "192:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1020:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:35:10"
															},
															"nodeType": "YulIf",
															"src": "994:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1081:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:26:10"
															},
															"nodeType": "YulIf",
															"src": "1097:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1230:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1234:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1226:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1226:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1241:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1222:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1222:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1190:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1281:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1315:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:35:10"
															},
															"nodeType": "YulIf",
															"src": "1293:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1443:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1448:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1475:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "966:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"src": "932:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1625:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:32:10"
															},
															"nodeType": "YulIf",
															"src": "1589:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1679:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1708:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1537:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1548:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1560:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1568:6:10",
														"type": ""
													}
												],
												"src": "1492:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:33:10"
															},
															"nodeType": "YulIf",
															"src": "1964:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2036:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2131:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2173:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2186:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2196:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2190:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2237:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2226:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:14:10"
															},
															"nodeType": "YulIf",
															"src": "2223:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2329:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2276:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2346:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2350:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2409:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:16:10"
															},
															"nodeType": "YulIf",
															"src": "2403:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2513:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2458:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2574:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2534:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:16:10"
															},
															"nodeType": "YulIf",
															"src": "2588:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2664:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2675:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2686:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2643:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1888:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1899:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1919:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1927:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1757:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2899:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2901:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2873:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2869:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:33:10"
															},
															"nodeType": "YulIf",
															"src": "2862:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2924:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2953:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2934:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2982:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3029:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3090:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3131:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3135:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3221:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:30:10"
															},
															"nodeType": "YulIf",
															"src": "3187:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3246:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3297:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3256:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2786:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2797:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2809:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2817:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2825:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2833:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2841:6:10",
														"type": ""
													}
												],
												"src": "2705:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3446:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3448:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3448:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3448:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3421:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:32:10"
															},
															"nodeType": "YulIf",
															"src": "3410:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3481:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3519:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3532:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3523:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3619:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3586:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3607:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3600:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3600:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3593:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3593:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3583:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:40:10"
															},
															"nodeType": "YulIf",
															"src": "3573:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3652:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3358:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3369:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3381:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3389:6:10",
														"type": ""
													}
												],
												"src": "3316:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:32:10"
															},
															"nodeType": "YulIf",
															"src": "3765:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3855:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3713:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3724:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3736:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3744:6:10",
														"type": ""
													}
												],
												"src": "3668:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4064:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:32:10"
															},
															"nodeType": "YulIf",
															"src": "4074:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4135:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4149:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4139:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4181:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4191:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4185:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4238:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4238:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4224:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4232:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4221:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:14:10"
															},
															"nodeType": "YulIf",
															"src": "4218:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4261:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4286:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4265:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4341:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4343:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4343:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4320:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4324:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4316:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4312:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:35:10"
															},
															"nodeType": "YulIf",
															"src": "4302:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4366:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4389:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4370:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4411:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4405:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4424:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4474:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4434:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4428:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4486:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4500:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4490:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4518:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4569:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4562:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4599:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4622:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4630:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4657:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4646:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4687:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4695:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4698:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4691:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4683:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4704:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4709:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4676:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:41:10"
															},
															"nodeType": "YulIf",
															"src": "4673:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4743:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4752:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4747:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4807:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4828:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4852:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4833:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4833:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4870:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4881:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4886:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4870:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4902:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4918:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4909:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4909:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4902:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4773:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4776:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4780:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4782:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4791:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4794:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4782:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4766:3:10",
																"statements": []
															},
															"src": "4762:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4950:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4965:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4981:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4969:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5042:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5051:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5054:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5044:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5044:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:16:10"
															},
															"nodeType": "YulIf",
															"src": "5022:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5067:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5132:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5077:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4022:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4033:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4045:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4053:6:10",
														"type": ""
													}
												],
												"src": "3927:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5220:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5275:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5241:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:32:10"
															},
															"nodeType": "YulIf",
															"src": "5230:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5291:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5304:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5295:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5360:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5336:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5385:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5186:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5197:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5209:6:10",
														"type": ""
													}
												],
												"src": "5151:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5481:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5527:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5502:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:32:10"
															},
															"nodeType": "YulIf",
															"src": "5491:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5565:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5556:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5614:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5590:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5639:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5447:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5458:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5470:6:10",
														"type": ""
													}
												],
												"src": "5401:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5725:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5771:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:32:10"
															},
															"nodeType": "YulIf",
															"src": "5735:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5806:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5702:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5714:6:10",
														"type": ""
													}
												],
												"src": "5655:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5931:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5925:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5915:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5974:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5978:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6008:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6013:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6025:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6043:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6050:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6029:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6062:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6071:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6066:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6130:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6151:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6162:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6156:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6156:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6144:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6183:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6194:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6199:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6190:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6190:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6183:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6215:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6229:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6237:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6225:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6225:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6095:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6089:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6103:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6105:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6114:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6117:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6110:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6110:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6105:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6085:3:10",
																"statements": []
															},
															"src": "6081:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6259:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6266:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5878:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5893:3:10",
														"type": ""
													}
												],
												"src": "5840:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6329:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6339:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6359:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6343:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6381:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6374:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6402:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6411:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6406:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6473:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6487:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6497:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6491:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6529:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6534:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6525:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6525:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6538:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6521:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6521:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6557:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6564:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6553:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6553:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6568:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6549:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6549:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6543:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6543:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6514:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6514:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6432:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6429:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6443:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6445:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6454:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6457:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6445:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6425:3:10",
																"statements": []
															},
															"src": "6421:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6617:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6646:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6651:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6642:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6660:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6638:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6667:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6598:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6595:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:13:10"
															},
															"nodeType": "YulIf",
															"src": "6592:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6688:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6703:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6716:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6724:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6712:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6712:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6733:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6729:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6729:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6708:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6699:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6699:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6740:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6306:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6313:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6321:3:10",
														"type": ""
													}
												],
												"src": "6280:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7097:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7115:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7120:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7111:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7101:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7165:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7135:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7135:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7209:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7217:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7237:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7270:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7313:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7336:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7321:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7284:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7274:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7409:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7452:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7460:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7423:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7413:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7508:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7561:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7544:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7024:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7035:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7043:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7051:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7059:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7067:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7078:4:10",
														"type": ""
													}
												],
												"src": "6756:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7828:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7851:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7832:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7873:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7888:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7896:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7940:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7948:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7936:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7972:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7983:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7988:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7961:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8058:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8069:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8054:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8088:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8113:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8096:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7755:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7766:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7774:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7782:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7790:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7809:4:10",
														"type": ""
													}
												],
												"src": "7587:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8303:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8313:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8351:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8343:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8272:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8283:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8294:4:10",
														"type": ""
													}
												],
												"src": "8152:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8687:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8730:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8701:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8691:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8797:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8793:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8766:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8766:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8825:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8862:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8870:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8833:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8833:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8608:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8619:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8638:4:10",
														"type": ""
													}
												],
												"src": "8418:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8993:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9005:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8993:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9035:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9060:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9053:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9053:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9046:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9046:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9028:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8952:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8963:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8974:4:10",
														"type": ""
													}
												],
												"src": "8888:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9201:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9218:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9229:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9211:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9249:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9170:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9181:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9192:4:10",
														"type": ""
													}
												],
												"src": "9080:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9495:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9506:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9529:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9540:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9525:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9525:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9518:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9518:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9584:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9650:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9635:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9635:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9655:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9628:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9628:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9687:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9699:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9710:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9687:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9455:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9469:4:10",
														"type": ""
													}
												],
												"src": "9304:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9916:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9946:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9966:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9939:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10000:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10005:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9978:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10071:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10076:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10049:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10096:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10119:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9876:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9890:4:10",
														"type": ""
													}
												],
												"src": "9725:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10308:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10325:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10318:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10370:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10355:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10375:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10348:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10348:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10409:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10394:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10414:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10387:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10480:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10465:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10485:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10458:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10508:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10520:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10516:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10516:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10508:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10285:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10299:4:10",
														"type": ""
													}
												],
												"src": "10134:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10720:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10737:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10730:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10782:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10760:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10821:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10806:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10826:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10799:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10881:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10892:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10897:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10870:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10918:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10930:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10941:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10926:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10918:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10697:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10711:4:10",
														"type": ""
													}
												],
												"src": "10546:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11130:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11192:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11177:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11197:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11170:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11236:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11307:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11280:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11324:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11336:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11347:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11324:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11107:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11121:4:10",
														"type": ""
													}
												],
												"src": "10956:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11553:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11587:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11598:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11583:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11576:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11637:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11622:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11642:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11697:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11708:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11693:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11713:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11743:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11513:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11527:4:10",
														"type": ""
													}
												],
												"src": "11362:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11955:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11972:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12017:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12056:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12041:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12061:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12034:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12116:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12127:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12112:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12132:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12105:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12154:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11932:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11946:4:10",
														"type": ""
													}
												],
												"src": "11781:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12366:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12383:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12394:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12376:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12376:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12417:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12428:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12413:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12406:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12456:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12467:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12452:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12452:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12472:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12445:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12445:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12538:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12523:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12543:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12516:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12564:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12576:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12587:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12572:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12564:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12343:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12357:4:10",
														"type": ""
													}
												],
												"src": "12192:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12776:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12793:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12786:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12838:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12843:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12866:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12877:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12862:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12882:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12855:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12937:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12948:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12933:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12953:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12926:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12986:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12974:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12753:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12767:4:10",
														"type": ""
													}
												],
												"src": "12602:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13186:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13203:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13196:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13196:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13196:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13248:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13233:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13253:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13226:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13292:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13265:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13265:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13347:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13358:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13363:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13336:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13383:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13395:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13406:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13391:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13391:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13383:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13163:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13177:4:10",
														"type": ""
													}
												],
												"src": "13012:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13522:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13532:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13574:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13585:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13491:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13502:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13513:4:10",
														"type": ""
													}
												],
												"src": "13421:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13732:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13742:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13754:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13750:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13742:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13784:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13795:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13777:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13777:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13777:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13818:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13838:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13811:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13811:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13693:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13704:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13712:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13723:4:10",
														"type": ""
													}
												],
												"src": "13603:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13969:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13971:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13971:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13971:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13941:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13949:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:30:10"
															},
															"nodeType": "YulIf",
															"src": "13935:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14000:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14016:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14019:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14012:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14028:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14000:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13905:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13916:4:10",
														"type": ""
													}
												],
												"src": "13856:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14092:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14119:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14121:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14121:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14108:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14115:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14111:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14105:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:13:10"
															},
															"nodeType": "YulIf",
															"src": "14102:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14150:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14161:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14164:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14075:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14078:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14084:3:10",
														"type": ""
													}
												],
												"src": "14044:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14232:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14242:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14256:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14259:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14252:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14242:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14273:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14303:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14309:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14299:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14299:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14277:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14350:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14352:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14366:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14374:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14362:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14362:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14352:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14330:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:26:10"
															},
															"nodeType": "YulIf",
															"src": "14320:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14440:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14461:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14468:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14473:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14464:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14464:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14454:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14454:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14454:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14505:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14508:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14498:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14498:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14533:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14536:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14526:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14526:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14526:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14396:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14419:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14427:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14416:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14416:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14393:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14393:38:10"
															},
															"nodeType": "YulIf",
															"src": "14390:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14212:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14221:6:10",
														"type": ""
													}
												],
												"src": "14177:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14609:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14619:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14641:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "14657:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14663:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14653:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14653:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14672:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14668:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14668:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14637:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14623:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14752:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14754:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14754:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14754:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14695:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14707:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14692:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14731:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14728:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14728:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14689:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14689:62:10"
															},
															"nodeType": "YulIf",
															"src": "14686:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14790:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14794:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14783:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14591:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14599:4:10",
														"type": ""
													}
												],
												"src": "14562:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14863:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14894:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14896:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14896:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14896:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14879:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14886:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14876:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:17:10"
															},
															"nodeType": "YulIf",
															"src": "14873:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14925:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14936:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14943:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14845:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14855:3:10",
														"type": ""
													}
												],
												"src": "14816:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14988:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15005:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15012:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15008:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15008:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14998:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14998:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15045:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15048:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15038:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15038:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15069:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15072:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15062:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15062:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15062:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14956:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15120:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15144:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15149:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15140:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15130:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15170:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15201:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15204:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15194:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15088:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15252:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15269:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15276:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15281:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15272:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15262:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15262:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15262:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15309:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15312:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15302:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15302:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15333:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15336:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15326:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15220:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15395:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15440:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15469:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15472:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15475:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15454:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15454:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15454:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15490:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15501:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15512:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15506:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15506:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15497:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15497:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15490:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15411:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15411:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15429:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:23:10"
															},
															"nodeType": "YulIf",
															"src": "15405:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15387:3:10",
														"type": ""
													}
												],
												"src": "15352:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15583:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15623:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15625:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15599:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15599:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15596:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:26:10"
															},
															"nodeType": "YulIf",
															"src": "15593:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15641:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15659:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15653:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15653:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15645:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15671:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15685:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15681:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15675:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15711:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15717:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15724:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15724:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15742:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15696:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15696:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15755:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15775:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15769:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15769:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15759:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15789:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15799:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15799:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15793:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15824:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15834:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15828:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15910:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15912:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15870:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15878:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15867:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15867:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15890:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15898:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15886:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15886:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15905:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15883:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15883:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15864:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:45:10"
															},
															"nodeType": "YulIf",
															"src": "15861:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15928:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15943:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15949:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15939:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15932:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15965:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15985:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15979:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15979:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15969:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16016:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16018:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16004:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16012:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16001:14:10"
															},
															"nodeType": "YulIf",
															"src": "15998:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16107:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16109:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16048:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16044:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16044:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16062:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16040:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16040:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16077:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16083:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16083:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16073:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16073:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16102:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16069:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16037:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16037:69:10"
															},
															"nodeType": "YulIf",
															"src": "16034:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16145:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16159:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16167:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16155:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16155:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16176:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16125:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16125:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16191:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16198:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15575:3:10",
														"type": ""
													}
												],
												"src": "15536:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16256:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16321:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16330:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16333:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16323:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16323:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16323:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16279:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16290:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16301:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16306:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16297:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16297:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16286:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16286:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16276:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16276:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:51:10"
															},
															"nodeType": "YulIf",
															"src": "16266:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16245:5:10",
														"type": ""
													}
												],
												"src": "16212:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA7F JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA18 JUMPI POP PUSH2 0x9F3 PUSH2 0x1311 JUMP JUMPDEST DUP1 PUSH2 0x9FE JUMPI POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB85 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB94 JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBFE DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0B DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC4A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC2E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC99 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF5 PUSH1 0x20 DUP5 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD2D PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD56 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD78 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC9 DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xDD7 PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE29 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEBF DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xECC DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF02 DUP2 PUSH2 0xBC4 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEF1 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3A DUP6 DUP3 DUP7 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFB2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1052 SWAP1 DUP4 ADD DUP7 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1064 DUP2 DUP7 PUSH2 0xF9E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1078 DUP2 DUP6 PUSH2 0xFD9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10BE SWAP1 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1101 DUP2 DUP6 PUSH2 0xF9E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH2 0x120E PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122B PUSH2 0x12B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x12B3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x130E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x131F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x134F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1367 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1381 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1390 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x126B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xE2 LT SWAP9 SIGNEXTEND BLOCKHASH CALLER 0xDD 0xC1 CALLDATALOAD MOD 0xD2 ADDRESS LOG4 0xE4 0xE5 0x5F PUSH9 0xF3E9807EF593CF91D9 0xD5 0xB0 PUSH29 0x1B9964736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "574:15164:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231;;;;;;:::i;:::-;;:::i;:::-;;;13567:25:10;;;13555:2;13540:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;9053:14:10;;9046:22;9028:41;;9016:2;9001:18;1262:310:2;8888:187:10;1983:105:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4178:442::-;;;;;;:::i;:::-;;:::i;:::-;;2636:524;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3233:155::-;;;;;;:::i;:::-;;:::i;3460:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;2239:231::-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;10336:2:10;2345:77:2;;;10318:21:10;10375:2;10355:18;;;10348:30;10414:34;10394:18;;;10387:62;-1:-1:-1;;;10465:18:10;;;10458:41;10516:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;;;2239:231::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;1381:183;1262:310;-1:-1:-1;;1262:310:2:o;1983:105::-;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;4178:442::-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;11564:2:10;4389:160:2;;;11546:21:10;11603:2;11583:18;;;11576:30;11642:34;11622:18;;;11615:62;-1:-1:-1;;;11693:18:10;;;11686:48;11751:19;;4389:160:2;11362:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;12804:2:10;2826:83:2;;;12786:21:10;12843:2;12823:18;;;12816:30;12882:34;12862:18;;;12855:62;-1:-1:-1;;;12933:18:10;;;12926:39;12982:19;;2826:83:2;12602:405:10;2826:83:2;2922:30;2969:8;:15;2955:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;3233:155::-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;10748:2:10;3886:151:2;;;10730:21:10;10787:2;10767:18;;;10760:30;10826:34;10806:18;;;10799:62;-1:-1:-1;;;10877:18:10;;;10870:39;10926:19;;3886:151:2;10546:405:10;3886:151:2;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;13214:2:10;6467:81:2;;;13196:21:10;13253:2;13233:18;;;13226:30;13292:34;13272:18;;;13265:62;-1:-1:-1;;;13343:18:10;;;13336:38;13391:19;;6467:81:2;13012:404:10;6467:81:2;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;12448:331::-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;;12586:71;;;;-1:-1:-1;;;12586:71:2;;12394:2:10;12586:71:2;;;12376:21:10;12433:2;12413:18;;;12406:30;12472:34;12452:18;;;12445:62;-1:-1:-1;;;12523:18:10;;;12516:39;12572:19;;12586:71:2;12192:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;9028::10;;;12730::2;;9001:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;13777:25:10;;;13833:2;13818:18;;13811:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;13750:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;9506:2:10;15433:62:2;;;9488:21:10;9545:2;9525:18;;;9518:30;9584:34;9564:18;;;9557:62;-1:-1:-1;;;9635:18:10;;;9628:50;9695:19;;15433:62:2;9304:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:735::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:10;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:10;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:10;;192:735;-1:-1:-1;;;;;;;192:735:10:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:10;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:10:o;1492:260::-;1560:6;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1660:29;1679:9;1660:29;:::i;:::-;1650:39;;1708:38;1742:2;1731:9;1727:18;1708:38;:::i;:::-;1698:48;;1492:260;;;;;:::o;1757:943::-;1911:6;1919;1927;1935;1943;1996:3;1984:9;1975:7;1971:23;1967:33;1964:53;;;2013:1;2010;2003:12;1964:53;2036:29;2055:9;2036:29;:::i;:::-;2026:39;;2084:38;2118:2;2107:9;2103:18;2084:38;:::i;:::-;2074:48;;2173:2;2162:9;2158:18;2145:32;2196:18;2237:2;2229:6;2226:14;2223:34;;;2253:1;2250;2243:12;2223:34;2276:61;2329:7;2320:6;2309:9;2305:22;2276:61;:::i;:::-;2266:71;;2390:2;2379:9;2375:18;2362:32;2346:48;;2419:2;2409:8;2406:16;2403:36;;;2435:1;2432;2425:12;2403:36;2458:63;2513:7;2502:8;2491:9;2487:24;2458:63;:::i;:::-;2448:73;;2574:3;2563:9;2559:19;2546:33;2530:49;;2604:2;2594:8;2591:16;2588:36;;;2620:1;2617;2610:12;2588:36;;2643:51;2686:7;2675:8;2664:9;2660:24;2643:51;:::i;:::-;2633:61;;;1757:943;;;;;;;;:::o;2705:606::-;2809:6;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3173:3;3162:9;3158:19;3145:33;3201:18;3193:6;3190:30;3187:50;;;3233:1;3230;3223:12;3187:50;3256:49;3297:7;3288:6;3277:9;3273:22;3256:49;:::i;3316:347::-;3381:6;3389;3442:2;3430:9;3421:7;3417:23;3413:32;3410:52;;;3458:1;3455;3448:12;3410:52;3481:29;3500:9;3481:29;:::i;:::-;3471:39;;3560:2;3549:9;3545:18;3532:32;3607:5;3600:13;3593:21;3586:5;3583:32;3573:60;;3629:1;3626;3619:12;3573:60;3652:5;3642:15;;;3316:347;;;;;:::o;3668:254::-;3736:6;3744;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3912:2;3897:18;;;;3884:32;;-1:-1:-1;;;3668:254:10:o;3927:1219::-;4045:6;4053;4106:2;4094:9;4085:7;4081:23;4077:32;4074:52;;;4122:1;4119;4112:12;4074:52;4162:9;4149:23;4191:18;4232:2;4224:6;4221:14;4218:34;;;4248:1;4245;4238:12;4218:34;4286:6;4275:9;4271:22;4261:32;;4331:7;4324:4;4320:2;4316:13;4312:27;4302:55;;4353:1;4350;4343:12;4302:55;4389:2;4376:16;4411:4;4434:43;4474:2;4434:43;:::i;:::-;4506:2;4500:9;4518:31;4546:2;4538:6;4518:31;:::i;:::-;4584:18;;;4618:15;;;;-1:-1:-1;4653:11:10;;;4695:1;4691:10;;;4683:19;;4679:28;;4676:41;-1:-1:-1;4673:61:10;;;4730:1;4727;4720:12;4673:61;4752:1;4743:10;;4762:169;4776:2;4773:1;4770:9;4762:169;;;4833:23;4852:3;4833:23;:::i;:::-;4821:36;;4794:1;4787:9;;;;;4877:12;;;;4909;;4762:169;;;-1:-1:-1;4950:6:10;-1:-1:-1;;4994:18:10;;4981:32;;-1:-1:-1;;5025:16:10;;;5022:36;;;5054:1;5051;5044:12;5022:36;;5077:63;5132:7;5121:8;5110:9;5106:24;5077:63;:::i;:::-;5067:73;;;3927:1219;;;;;:::o;5151:245::-;5209:6;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5317:9;5304:23;5336:30;5360:5;5336:30;:::i;:::-;5385:5;5151:245;-1:-1:-1;;;5151:245:10:o;5401:249::-;5470:6;5523:2;5511:9;5502:7;5498:23;5494:32;5491:52;;;5539:1;5536;5529:12;5491:52;5571:9;5565:16;5590:30;5614:5;5590:30;:::i;5655:180::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;-1:-1:-1;5806:23:10;;5655:180;-1:-1:-1;5655:180:10:o;5840:435::-;5893:3;5931:5;5925:12;5958:6;5953:3;5946:19;5984:4;6013:2;6008:3;6004:12;5997:19;;6050:2;6043:5;6039:14;6071:1;6081:169;6095:6;6092:1;6089:13;6081:169;;;6156:13;;6144:26;;6190:12;;;;6225:15;;;;6117:1;6110:9;6081:169;;;-1:-1:-1;6266:3:10;;5840:435;-1:-1:-1;;;;;5840:435:10:o;6280:471::-;6321:3;6359:5;6353:12;6386:6;6381:3;6374:19;6411:1;6421:162;6435:6;6432:1;6429:13;6421:162;;;6497:4;6553:13;;;6549:22;;6543:29;6525:11;;;6521:20;;6514:59;6450:12;6421:162;;;6601:6;6598:1;6595:13;6592:87;;;6667:1;6660:4;6651:6;6646:3;6642:16;6638:27;6631:38;6592:87;-1:-1:-1;6733:2:10;6712:15;-1:-1:-1;;6708:29:10;6699:39;;;;6740:4;6695:50;;6280:471;-1:-1:-1;;6280:471:10:o;6756:826::-;-1:-1:-1;;;;;7153:15:10;;;7135:34;;7205:15;;7200:2;7185:18;;7178:43;7115:3;7252:2;7237:18;;7230:31;;;7078:4;;7284:57;;7321:19;;7313:6;7284:57;:::i;:::-;7389:9;7381:6;7377:22;7372:2;7361:9;7357:18;7350:50;7423:44;7460:6;7452;7423:44;:::i;:::-;7409:58;;7516:9;7508:6;7504:22;7498:3;7487:9;7483:19;7476:51;7544:32;7569:6;7561;7544:32;:::i;:::-;7536:40;6756:826;-1:-1:-1;;;;;;;;6756:826:10:o;7587:560::-;-1:-1:-1;;;;;7884:15:10;;;7866:34;;7936:15;;7931:2;7916:18;;7909:43;7983:2;7968:18;;7961:34;;;8026:2;8011:18;;8004:34;;;7846:3;8069;8054:19;;8047:32;;;7809:4;;8096:45;;8121:19;;8113:6;8096:45;:::i;:::-;8088:53;7587:560;-1:-1:-1;;;;;;;7587:560:10:o;8152:261::-;8331:2;8320:9;8313:21;8294:4;8351:56;8403:2;8392:9;8388:18;8380:6;8351:56;:::i;8418:465::-;8675:2;8664:9;8657:21;8638:4;8701:56;8753:2;8742:9;8738:18;8730:6;8701:56;:::i;:::-;8805:9;8797:6;8793:22;8788:2;8777:9;8773:18;8766:50;8833:44;8870:6;8862;8833:44;:::i;:::-;8825:52;8418:465;-1:-1:-1;;;;;8418:465:10:o;9080:219::-;9229:2;9218:9;9211:21;9192:4;9249:44;9289:2;9278:9;9274:18;9266:6;9249:44;:::i;9725:404::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:34;10000:2;9985:18;;9978:62;-1:-1:-1;;;10071:2:10;10056:18;;10049:38;10119:3;10104:19;;9725:404::o;10956:401::-;11158:2;11140:21;;;11197:2;11177:18;;;11170:30;11236:34;11231:2;11216:18;;11209:62;-1:-1:-1;;;11302:2:10;11287:18;;11280:35;11347:3;11332:19;;10956:401::o;11781:406::-;11983:2;11965:21;;;12022:2;12002:18;;;11995:30;12061:34;12056:2;12041:18;;12034:62;-1:-1:-1;;;12127:2:10;12112:18;;12105:40;12177:3;12162:19;;11781:406::o;13856:183::-;13916:4;13949:18;13941:6;13938:30;13935:56;;;13971:18;;:::i;:::-;-1:-1:-1;14016:1:10;14012:14;14028:4;14008:25;;13856:183::o;14044:128::-;14084:3;14115:1;14111:6;14108:1;14105:13;14102:39;;;14121:18;;:::i;:::-;-1:-1:-1;14157:9:10;;14044:128::o;14177:380::-;14256:1;14252:12;;;;14299;;;14320:61;;14374:4;14366:6;14362:17;14352:27;;14320:61;14427:2;14419:6;14416:14;14396:18;14393:38;14390:161;;;14473:10;14468:3;14464:20;14461:1;14454:31;14508:4;14505:1;14498:15;14536:4;14533:1;14526:15;14390:161;;14177:380;;;:::o;14562:249::-;14672:2;14653:13;;-1:-1:-1;;14649:27:10;14637:40;;14707:18;14692:34;;14728:22;;;14689:62;14686:88;;;14754:18;;:::i;:::-;14790:2;14783:22;-1:-1:-1;;14562:249:10:o;14816:135::-;14855:3;-1:-1:-1;;14876:17:10;;14873:43;;;14896:18;;:::i;:::-;-1:-1:-1;14943:1:10;14932:13;;14816:135::o;14956:127::-;15017:10;15012:3;15008:20;15005:1;14998:31;15048:4;15045:1;15038:15;15072:4;15069:1;15062:15;15088:127;15149:10;15144:3;15140:20;15137:1;15130:31;15180:4;15177:1;15170:15;15204:4;15201:1;15194:15;15220:127;15281:10;15276:3;15272:20;15269:1;15262:31;15312:4;15309:1;15302:15;15336:4;15333:1;15326:15;15352:179;15387:3;15429:1;15411:16;15408:23;15405:120;;;15475:1;15472;15469;15454:23;-1:-1:-1;15512:1:10;15506:8;15501:3;15497:18;15405:120;15352:179;:::o;15536:671::-;15575:3;15617:4;15599:16;15596:26;15593:39;;;15536:671;:::o;15593:39::-;15659:2;15653:9;-1:-1:-1;;15724:16:10;15720:25;;15717:1;15653:9;15696:50;15775:4;15769:11;15799:16;15834:18;15905:2;15898:4;15890:6;15886:17;15883:25;15878:2;15870:6;15867:14;15864:45;15861:58;;;15912:5;;;;;15536:671;:::o;15861:58::-;15949:6;15943:4;15939:17;15928:28;;15985:3;15979:10;16012:2;16004:6;16001:14;15998:27;;;16018:5;;;;;;15536:671;:::o;15998:27::-;16102:2;16083:16;16077:4;16073:27;16069:36;16062:4;16053:6;16048:3;16044:16;16040:27;16037:69;16034:82;;;16109:5;;;;;;15536:671;:::o;16034:82::-;16125:57;16176:4;16167:6;16159;16155:19;16151:30;16145:4;16125:57;:::i;:::-;-1:-1:-1;16198:3:10;;15536:671;-1:-1:-1;;;;;15536:671:10:o;16212:131::-;-1:-1:-1;;;;;;16286:32:10;;16276:43;;16266:71;;16333:1;16330;16323:12;16266:71;16212:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1019600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053e210980b4033ddc13506d230a4e4e55f68f3e9807ef593cf91d9d5b07c1b9964736f6c63430008070033",
									".code": [
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9046,
											"end": 9068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 8888,
											"end": 9075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10318,
											"end": 10339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10377,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10448,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1564,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11546,
											"end": 11567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11576,
											"end": 11606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11676,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11686,
											"end": 11734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 11362,
											"end": 11776,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12786,
											"end": 12807,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12843,
											"end": 12845,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12816,
											"end": 12846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12882,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12855,
											"end": 12917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12926,
											"end": 12965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12602,
											"end": 13007,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10730,
											"end": 10751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10870,
											"end": 10909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10546,
											"end": 10951,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13196,
											"end": 13217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13255,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13226,
											"end": 13256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13326,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 13012,
											"end": 13416,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12394,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12376,
											"end": 12397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12506,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12445,
											"end": 12507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12192,
											"end": 12597,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13750,
											"end": 13768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9508,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9488,
											"end": 9509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9304,
											"end": 9720,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 645,
											"end": 706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 742,
											"end": 751,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1411,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2865,
											"end": 2898,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3593,
											"end": 3614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3865,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4696,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4717,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5248,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5265,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5390,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5526,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5614,
											"end": 5619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6095,
											"end": 6101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6442,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6572,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6642,
											"end": 6658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6708,
											"end": 6737,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7372,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7458,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7487,
											"end": 7496,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7567,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7576,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7849,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8141,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 8403,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8793,
											"end": 8815,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8825,
											"end": 8877,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9289,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10039,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10000,
											"end": 10002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9978,
											"end": 10040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10122,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11197,
											"end": 11199,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11170,
											"end": 11200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11270,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11302,
											"end": 11304,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11280,
											"end": 11315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 11985,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12024,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12061,
											"end": 12095,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12127,
											"end": 12129,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12105,
											"end": 12145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13941,
											"end": 13947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13938,
											"end": 13968,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14016,
											"end": 14017,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 14012,
											"end": 14026,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14084,
											"end": 14087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14117,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14118,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14256,
											"end": 14257,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14378,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 14366,
											"end": 14372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14362,
											"end": 14379,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14419,
											"end": 14425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14416,
											"end": 14430,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14483,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14464,
											"end": 14484,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14461,
											"end": 14462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14498,
											"end": 14513,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14533,
											"end": 14534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14649,
											"end": 14676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14689,
											"end": 14751,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 14858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15027,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15012,
											"end": 15015,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15008,
											"end": 15028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15048,
											"end": 15052,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15038,
											"end": 15053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15076,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15062,
											"end": 15077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15159,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15144,
											"end": 15147,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15140,
											"end": 15160,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15130,
											"end": 15161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15177,
											"end": 15178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15208,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15201,
											"end": 15202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15194,
											"end": 15209,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15281,
											"end": 15291,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15276,
											"end": 15279,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15272,
											"end": 15292,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 15309,
											"end": 15310,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15302,
											"end": 15317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15411,
											"end": 15427,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15431,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15476,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15472,
											"end": 15473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15477,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15512,
											"end": 15513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15514,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15504,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15599,
											"end": 15615,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15622,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15659,
											"end": 15661,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15724,
											"end": 15740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15718,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15746,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 15779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15905,
											"end": 15907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15902,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15890,
											"end": 15896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15883,
											"end": 15908,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15881,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15909,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 15956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 15988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15979,
											"end": 15989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16012,
											"end": 16014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16083,
											"end": 16099,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16073,
											"end": 16100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16062,
											"end": 16066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16053,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16048,
											"end": 16051,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16040,
											"end": 16067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16037,
											"end": 16106,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16176,
											"end": 16180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16167,
											"end": 16173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16165,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16330,
											"end": 16331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220814c82789e99481cf67bdbbe1fab9aa8f70f6206464d598f7d43af568c48740064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220814c82789e99481cf67bdbbe1fab9aa8f70f6206464d598f7d43af568c48740064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4C DUP3 PUSH25 0x9E99481CF67BDBBE1FAB9AA8F70F6206464D598F7D43AF568C BASEFEE PUSH21 0x64736F6C63430008070033000000000000000000 ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:7937:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220814c82789e99481cf67bdbbe1fab9aa8f70f6206464d598f7d43af568c48740064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4C DUP3 PUSH25 0x9E99481CF67BDBBE1FAB9AA8F70F6206464D598F7D43AF568C BASEFEE PUSH21 0x64736F6C63430008070033000000000000000000 ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220814c82789e99481cf67bdbbe1fab9aa8f70f6206464d598f7d43af568c48740064736f6c63430008070033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> nft/ERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "nft/ERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/ERC1155.sol": {
				"ast": {
					"absolutePath": "nft/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"BeeItems": [
							247
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						],
						"Ownable": [
							352
						]
					},
					"id": 248,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1449,
							"src": "31:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 353,
							"src": "108:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1448,
										"src": "206:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "216:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								352,
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "BeeItems",
							"nameLocation": "193:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7824407f",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "247:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 247,
									"src": "232:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "334:8:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "291:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 11,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1448,
												"src": "283:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "283:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 247,
									"src": "269:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "414:397:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "442:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "425:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 25,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 26,
															"nodeType": "ArrayTypeName",
															"src": "425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"id": 31,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "462:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "448:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 28,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 29,
															"nodeType": "ArrayTypeName",
															"src": "452:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:47:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "500:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "483:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 36,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ArrayTypeName",
															"src": "483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"id": 42,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 39,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 40,
															"nodeType": "ArrayTypeName",
															"src": "514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "483:51:0"
											},
											{
												"body": {
													"id": 74,
													"nodeType": "Block",
													"src": "611:94:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 58,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 62,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 59,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 60,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "634:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "630:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "626:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 63,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "626:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "626:24:0"
														},
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 66,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 70,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 67,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 68,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "677:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "673:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "665:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "665:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "665:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "575:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 51,
																	"name": "tokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "592:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "580:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "579:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"initializationExpression": {
													"assignments": [
														46
													],
													"declarations": [
														{
															"constant": false,
															"id": 46,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "558:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 75,
															"src": "550:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 45,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 48,
													"initialValue": {
														"id": 47,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "550:23:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "606:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "606:3:0"
												},
												"nodeType": "ForStatement",
												"src": "545:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "738:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 80,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 76,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "715:40:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "780:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 86,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "794:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "780:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "766:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "766:37:0"
											}
										]
									},
									"functionSelector": "71ac14e6",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:0"
										}
									],
									"name": "mintBatchWithNumber",
									"nameLocation": "359:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "387:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "379:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:19:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 247,
									"src": "350:461:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "900:340:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "928:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "911:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 103,
															"nodeType": "ArrayTypeName",
															"src": "911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"id": 108,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "948:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "934:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ArrayTypeName",
															"src": "938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:47:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "986:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "969:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 113,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ArrayTypeName",
															"src": "969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [
														{
															"id": 119,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "996:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ArrayTypeName",
															"src": "1000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:51:0"
											},
											{
												"body": {
													"id": 151,
													"nodeType": "Block",
													"src": "1085:82:0",
													"statements": [
														{
															"expression": {
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 135,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1100:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 139,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 136,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1104:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 137,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1108:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1104:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1100:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 140,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1100:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "1100:18:0"
														},
														{
															"expression": {
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 143,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 147,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1141:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 145,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1145:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1141:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1133:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1133:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1133:22:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 127,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1060:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 128,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1060:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"initializationExpression": {
													"assignments": [
														123
													],
													"declarations": [
														{
															"constant": false,
															"id": 123,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1044:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 152,
															"src": "1036:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 122,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1036:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 125,
													"initialValue": {
														"id": 124,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1048:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1036:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1080:3:0",
														"subExpression": {
															"id": 132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 134,
													"nodeType": "ExpressionStatement",
													"src": "1080:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1031:136:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1199:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1199:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 158,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 153,
														"name": "safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1177:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1177:55:0"
											}
										]
									},
									"functionSelector": "9416308e",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithNumber",
									"nameLocation": "828:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "855:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "870:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:46:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:0"
									},
									"scope": 247,
									"src": "819:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1304:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 170,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1315:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1295:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:9:0"
										}
									],
									"name": "setURI",
									"nameLocation": "1259:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "1280:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 247,
									"src": "1250:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1484:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 193,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 190,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1495:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1495:34:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1554:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 199,
																"name": "ids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1568:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1554:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1540:38:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1469:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1469:9:0"
										}
									],
									"name": "mintBatch",
									"nameLocation": "1355:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1373:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1394:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1377:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 178,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ArrayTypeName",
													"src": "1377:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1399:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:79:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:0"
									},
									"scope": 247,
									"src": "1346:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1650:37:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"name": "tokenSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "1668:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "1661:18:0"
											}
										]
									},
									"functionSelector": "ad974f4c",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenSupply",
									"nameLocation": "1603:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:9:0"
									},
									"scope": 247,
									"src": "1594:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1788:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 224,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "1834:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1834:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1823:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 229,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1876:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1876:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 227,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1850:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1850:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1823:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1801:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1986:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1971:25:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": true,
													"src": "2007:13:0",
													"subExpression": {
														"id": 242,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2007:13:0"
											}
										]
									},
									"functionSelector": "092f2dbf",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brun",
									"nameLocation": "1704:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1727:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:72:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:0:0"
									},
									"scope": 247,
									"src": "1695:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "184:1847:0",
							"usedErrors": []
						}
					],
					"src": "2:2029:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1945
						],
						"Ownable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 1946,
							"src": "117:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "687:7:1"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "151:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								1945
							],
							"name": "Ownable",
							"nameLocation": "676:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "718:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "702:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 261,
									"name": "OwnershipTransferred",
									"nameLocation": "739:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "776:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "760:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "807:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "791:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:57:1"
									},
									"src": "733:84:1"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "938:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "968:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 265,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "949:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "949:32:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "825:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:0:1"
									},
									"scope": 352,
									"src": "924:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1125:32:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "1143:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "1136:13:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "997:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1079:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:9:1"
									},
									"scope": 352,
									"src": "1070:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1271:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1290:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1301:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1290:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:1"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "1361:1:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1165:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 294,
									"name": "onlyOwner",
									"nameLocation": "1259:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:1"
									},
									"src": "1250:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1775:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1786:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1786:30:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1378:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1765:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1765:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1730:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:0:1"
									},
									"scope": 352,
									"src": "1721:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2049:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2068:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2080:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2080:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2068:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2060:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2163:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2144:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2144:28:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1832:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "2039:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2039:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2014:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2006:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:18:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:1"
									},
									"scope": 352,
									"src": "1979:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2403:128:1",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2422:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "2414:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2414:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"id": 339,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2414:25:1"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2450:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2459:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2450:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2450:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 346,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2504:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 345,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2483:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "2478:45:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2188:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2349:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2376:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2368:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:18:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:1"
									},
									"scope": 352,
									"src": "2340:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 353,
							"src": "658:1876:1",
							"usedErrors": []
						}
					],
					"src": "90:2446:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1571,
							"src": "124:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1612,
							"src": "150:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1627,
							"src": "184:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1924,
							"src": "232:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1946,
							"src": "267:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1970,
							"src": "302:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "594:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "594:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1969,
										"src": "603:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "603:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "611:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "611:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "621:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "621:19:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "352:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "ERC1155",
							"nameLocation": "583:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "654:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "648:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "788:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "732:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "732:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 376,
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "751:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "910:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "857:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "857:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 382,
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "876:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "895:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1067:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "1052:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 385,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1052:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1158:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1177:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1169:13:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1080:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1152:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1138:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:20:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:2"
									},
									"scope": 1448,
									"src": "1126:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1968,
										1980
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1370:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1401:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "1421:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1416:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1416:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1570",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1416:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1401:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1459:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1479:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1474:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1474:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1626",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1474:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1459:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1401:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1552:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1528:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1448_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1968,
															"src": "1528:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1528:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1401:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1381:183:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1198:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1271:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1969,
												"src": "1338:6:2"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1981,
												"src": "1346:7:2"
											}
										],
										"src": "1329:25:2"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1296:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1289:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:2"
									},
									"scope": 1448,
									"src": "1262:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1625
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2058:30:2",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2076:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2069:11:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1580:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1992:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2025:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1996:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:9:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:15:2"
									},
									"scope": 1448,
									"src": "1983:105:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1508
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2334:136:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2353:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2372:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2364:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2353:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2376:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2345:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2440:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 463,
														"indexExpression": {
															"id": 462,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2440:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2440:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 466,
												"nodeType": "Return",
												"src": "2433:29:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2096:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2248:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2307:8:2"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2283:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2275:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:29:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:9:2"
									},
									"scope": 1448,
									"src": "2239:231:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2815:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 483,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "2834:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2834:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2853:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2853:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2834:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2865:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2826:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2826:83:2"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2939:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2922:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2922:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2969:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2969:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2955:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2959:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"nodeType": "ArrayTypeName",
															"src": "2959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2922:63:2"
											},
											{
												"body": {
													"id": 527,
													"nodeType": "Block",
													"src": "3044:76:2",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3059:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "3073:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3059:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 518,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 472,
																				"src": "3088:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 520,
																			"indexExpression": {
																				"id": 519,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3097:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3088:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 521,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "3101:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3105:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3101:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 517,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3078:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3078:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "3059:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3018:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3022:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3022:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3018:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3011:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 528,
															"src": "3003:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3003:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3015:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3003:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3039:3:2",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3041:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "3039:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2998:122:2"
											},
											{
												"expression": {
													"id": 529,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3139:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 530,
												"nodeType": "Return",
												"src": "3132:20:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2478:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2645:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2765:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2677:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2660:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 471,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2704:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2687:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2687:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "2687:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:49:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2792:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2792:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "2792:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:18:2"
									},
									"scope": 1448,
									"src": "2636:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1529
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3317:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "3347:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3347:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3328:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3328:52:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3168:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3242:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3308:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3268:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3260:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3283:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:0:2"
									},
									"scope": 1448,
									"src": "3233:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3565:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 560,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3583:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3583:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 564,
													"indexExpression": {
														"id": 563,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3611:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3583:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "3576:44:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3396:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3469:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3541:8:2"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3494:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3486:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3511:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3503:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3485:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3559:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3559:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:6:2"
									},
									"scope": 1448,
									"src": "3460:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1553
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3875:226:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3908:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 584,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "3916:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3916:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3908:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "3949:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 589,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "3955:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3955:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3932:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3932:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3908:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3983:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3886:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3886:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3886:151:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4066:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4072:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4076:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4080:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4088:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "4048:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4048:45:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3636:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3709:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3866:8:2"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3744:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3736:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3767:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3759:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3801:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3839:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3826:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3826:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:125:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 1448,
									"src": "3700:401:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4378:242:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4411:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 624,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "4419:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4419:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4411:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4452:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 629,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "4458:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4458:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "4435:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4435:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4411:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4486:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4389:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4389:160:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4389:160:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4583:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4589:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4593:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4607:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4560:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4560:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4560:52:2"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4109:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4187:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4369:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4219:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4250:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4242:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4280:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4263:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "4263:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4311:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4294:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ArrayTypeName",
													"src": "4294:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4342:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4329:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4329:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:145:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4378:0:2"
									},
									"scope": 1448,
									"src": "4178:442:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5253:651:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5272:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5286:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5278:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5278:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5278:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5272:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5264:66:2"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5351:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5343:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5343:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5362:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5343:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5408:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5418:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5424:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 679,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5446:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 678,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5428:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5428:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 682,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5469:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5451:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5451:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5478:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 674,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5387:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5387:96:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5504:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5496:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5496:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 689,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5518:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 691,
														"indexExpression": {
															"id": 690,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5528:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5518:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 693,
													"indexExpression": {
														"id": 692,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5532:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5518:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5496:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "5556:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5571:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5556:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5579:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5548:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5548:76:2"
											},
											{
												"id": 712,
												"nodeType": "UncheckedBlock",
												"src": "5635:79:2",
												"statements": [
													{
														"expression": {
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 702,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5660:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 705,
																	"indexExpression": {
																		"id": 703,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5670:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5660:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"id": 704,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5674:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5660:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5682:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5696:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5682:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5660:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "5660:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5724:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5734:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5724:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5738:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5724:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 718,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "5745:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5724:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "5724:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5784:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5794:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5800:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5804:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5808:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "5769:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "5764:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5869:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5875:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5883:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 735,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5891:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 729,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "5828:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5828:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "5828:68:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4628:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5093:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5129:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5121:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5152:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5144:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5173:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5165:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5194:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5186:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:125:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:2"
									},
									"scope": 1448,
									"src": "5084:820:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "6456:880:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 756,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6475:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6475:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 758,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6489:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6489:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6475:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6505:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6467:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "6567:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6581:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6573:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6573:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6573:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6567:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6585:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "6559:66:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6646:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "6638:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6638:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "6657:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6638:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6703:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6719:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6723:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 784,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6728:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6737:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 779,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "6682:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6682:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "6682:60:2"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "6796:380:2",
													"statements": [
														{
															"assignments": [
																800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 800,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6819:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6811:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6811:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 804,
															"initialValue": {
																"baseExpression": {
																	"id": 801,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6824:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"id": 802,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6828:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6824:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6811:19:2"
														},
														{
															"assignments": [
																806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6853:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6845:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6845:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"baseExpression": {
																	"id": 807,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6862:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6862:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6845:27:2"
														},
														{
															"assignments": [
																812
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6897:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6889:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6889:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 818,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 813,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "6911:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"id": 814,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6921:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6911:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"id": 816,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6925:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6911:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6889:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 820,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "6953:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 821,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6968:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6953:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6976:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 819,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6945:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6945:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6945:76:2"
														},
														{
															"id": 836,
															"nodeType": "UncheckedBlock",
															"src": "7036:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 826,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "7065:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 829,
																				"indexExpression": {
																					"id": 827,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "7075:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7065:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 830,
																			"indexExpression": {
																				"id": 828,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "7079:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7065:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 831,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "7087:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 832,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7101:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7087:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7065:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 835,
																	"nodeType": "ExpressionStatement",
																	"src": "7065:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 837,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "7137:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 840,
																		"indexExpression": {
																			"id": 838,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "7147:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7137:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 839,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "7151:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7137:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "7158:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7137:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "7137:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "6775:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6779:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6779:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6775:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														789
													],
													"declarations": [
														{
															"constant": false,
															"id": 789,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6768:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "6760:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6760:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 791,
													"initialValue": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6772:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6760:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6791:3:2",
														"subExpression": {
															"id": 796,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6793:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ExpressionStatement",
													"src": "6791:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6755:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7207:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7217:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7223:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7227:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "7193:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "7188:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7289:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7299:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7305:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7309:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7314:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "7323:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7253:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7253:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "7253:75:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "5912:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6271:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6312:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6304:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6335:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6327:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6365:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6348:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6348:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "6348:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6396:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6379:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6379:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "6379:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6427:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6414:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6414:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:145:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6456:0:2"
									},
									"scope": 1448,
									"src": "6262:1074:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "8236:32:2",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "8247:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "8254:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8247:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8247:13:2"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "7344:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8189:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8211:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "8197:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8196:22:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8236:0:2"
									},
									"scope": 1448,
									"src": "8180:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "8788:435:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8807:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8821:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8813:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8813:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8813:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8807:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8825:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8799:62:2"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8882:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8874:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8874:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "8893:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8893:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8874:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8939:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8961:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8983:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8965:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8965:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "9006:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8988:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8988:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9015:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "8918:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "8918:102:2"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9033:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "9043:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9033:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9047:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9033:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9054:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9033:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "9033:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9091:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9109:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9101:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9101:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9101:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9113:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "9076:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "EmitStatement",
												"src": "9071:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9172:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9190:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9182:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9182:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9182:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9194:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9198:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9210:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "9141:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9141:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "9141:74:2"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "8276:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8663:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8687:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8679:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8708:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8700:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8729:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8721:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8759:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8746:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8746:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8668:102:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8788:0:2"
									},
									"scope": 1448,
									"src": "8654:569:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "9738:576:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "9757:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9771:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9763:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9763:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9763:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9757:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9775:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9749:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "9749:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "9830:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9830:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 978,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "9844:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9844:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9830:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9860:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9822:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9822:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "9822:81:2"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9924:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "9916:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9916:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "9935:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9935:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9916:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9981:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9999:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9991:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9991:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9991:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10007:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 997,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10021:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 989,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "9960:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9960:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "9960:66:2"
											},
											{
												"body": {
													"id": 1024,
													"nodeType": "Block",
													"src": "10080:62:2",
													"statements": [
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1012,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "10095:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1017,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1013,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "10105:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1015,
																			"indexExpression": {
																				"id": 1014,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "10109:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10105:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10095:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1018,
																	"indexExpression": {
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "10113:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10095:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1019,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "10120:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"id": 1020,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "10128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10120:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10095:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "10095:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "10059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1006,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10063:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10063:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10059:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"initializationExpression": {
													"assignments": [
														1002
													],
													"declarations": [
														{
															"constant": false,
															"id": 1002,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10052:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1025,
															"src": "10044:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10044:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1004,
													"initialValue": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10056:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10044:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10075:3:2",
														"subExpression": {
															"id": 1009,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "10075:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1011,
													"nodeType": "ExpressionStatement",
													"src": "10075:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10039:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10173:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10191:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10183:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10183:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10195:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10199:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1034,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1026,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "10159:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10159:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "EmitStatement",
												"src": "10154:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10261:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10283:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10287:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1045,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "10225:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "10225:81:2"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "9231:342:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9588:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9617:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9609:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9647:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9630:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 955,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9630:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"nodeType": "ArrayTypeName",
													"src": "9630:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9661:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 958,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 959,
													"nodeType": "ArrayTypeName",
													"src": "9661:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9709:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9696:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9696:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9598:122:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:2"
									},
									"scope": 1448,
									"src": "9579:735:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10672:540:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "10691:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10707:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10699:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10699:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10691:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10711:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10683:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10683:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "10683:66:2"
											},
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10770:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10762:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "10781:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10781:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10827:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "10837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10851:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10843:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10843:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10843:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "10873:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10855:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10855:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10896:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1085,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10878:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10878:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10905:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1075,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "10806:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10806:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "10806:102:2"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10929:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10921:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1093,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "10943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "10953:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10943:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "10957:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10943:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10921:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "10981:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1101,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "10996:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10981:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11004:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10973:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10973:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "10973:70:2"
											},
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "11054:79:2",
												"statements": [
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "11079:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"id": 1107,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "11089:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11079:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1108,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "11093:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11079:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1111,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "11101:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1112,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "11115:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11101:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11079:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "11079:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "11165:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "11175:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11189:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11181:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11181:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11181:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "11193:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11197:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "11150:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11150:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "11145:59:2"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "10322:236:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10573:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10597:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10589:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10620:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10612:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10641:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10633:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10578:76:2"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10672:0:2"
									},
									"scope": 1448,
									"src": "10564:648:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "11548:758:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11567:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11583:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11575:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11575:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11575:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11567:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11587:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "11559:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1152,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11644:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11644:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1154,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11658:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11658:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11644:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11674:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11636:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11636:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "11636:81:2"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11738:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "11730:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11730:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1162,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "11749:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11749:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11730:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11795:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "11805:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11819:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11811:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11811:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11811:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11823:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1173,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11837:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1165,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "11774:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11774:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "11774:66:2"
											},
											{
												"body": {
													"id": 1226,
													"nodeType": "Block",
													"src": "11894:332:2",
													"statements": [
														{
															"assignments": [
																1189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1189,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11917:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11909:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11909:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1193,
															"initialValue": {
																"baseExpression": {
																	"id": 1190,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11922:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1192,
																"indexExpression": {
																	"id": 1191,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11926:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11909:19:2"
														},
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11951:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11943:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11943:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"baseExpression": {
																	"id": 1196,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11960:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1198,
																"indexExpression": {
																	"id": 1197,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11968:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11960:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11943:27:2"
														},
														{
															"assignments": [
																1201
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1201,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11995:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11987:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1200,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11987:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1207,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1202,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "12009:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"id": 1203,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "12019:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12009:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1206,
																"indexExpression": {
																	"id": 1205,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "12023:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12009:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11987:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "12051:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1210,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "12066:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12051:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12074:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1208,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12043:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12043:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1214,
															"nodeType": "ExpressionStatement",
															"src": "12043:70:2"
														},
														{
															"id": 1225,
															"nodeType": "UncheckedBlock",
															"src": "12128:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1215,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "12157:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1218,
																				"indexExpression": {
																					"id": 1216,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "12167:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12157:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1219,
																			"indexExpression": {
																				"id": 1217,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "12171:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12157:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "12179:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1221,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "12193:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12179:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12157:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "12157:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11873:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1182,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11877:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11877:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11873:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"initializationExpression": {
													"assignments": [
														1178
													],
													"declarations": [
														{
															"constant": false,
															"id": 1178,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11866:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1227,
															"src": "11858:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11858:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1180,
													"initialValue": {
														"hexValue": "30",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11870:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11858:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11889:3:2",
														"subExpression": {
															"id": 1185,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11889:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"nodeType": "ExpressionStatement",
													"src": "11889:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11853:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "12257:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "12267:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12273:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12273:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12273:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "12285:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1236,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "12290:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1228,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "12243:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12243:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "12238:60:2"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "11220:189:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11424:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11445:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11485:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11468:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1133,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1134,
													"nodeType": "ArrayTypeName",
													"src": "11468:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11516:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11499:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "11499:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11434:96:2"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11548:0:2"
									},
									"scope": 1448,
									"src": "11415:891:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "12575:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12594:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1252,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "12603:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12594:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12613:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12586:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "12586:71:2"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1257,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "12668:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1260,
															"indexExpression": {
																"id": 1258,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12687:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12668:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1259,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12694:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12668:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1262,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "12706:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12668:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "12668:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "12745:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12752:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12762:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1265,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12730:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12730:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "12725:46:2"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "12314:128:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12457:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12494:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12486:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12518:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12510:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12542:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12475:82:2"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12575:0:2"
									},
									"scope": 1448,
									"src": "12448:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "13954:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "12787:942:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13744:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13802:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13833:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13825:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13863:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13846:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "13846:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13877:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13877:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1284,
													"nodeType": "ArrayTypeName",
													"src": "13877:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13912:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13764:172:2"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13954:0:2"
									},
									"scope": 1448,
									"src": "13735:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "14164:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "14179:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14179:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14179:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "14175:526:2",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "14196:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1333,
																		"nodeType": "Block",
																		"src": "14314:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1322,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "14337:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1323,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "14349:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1592,
																							"src": "14349:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14349:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14337:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1332,
																				"nodeType": "IfStatement",
																				"src": "14333:154:2",
																				"trueBody": {
																					"id": 1331,
																					"nodeType": "Block",
																					"src": "14394:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1328,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14424:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1327,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14417:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1329,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14417:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1330,
																							"nodeType": "ExpressionStatement",
																							"src": "14417:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1334,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1321,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1320,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1334,
																				"src": "14297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1319,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14296:17:2"
																	},
																	"src": "14288:214:2"
																},
																{
																	"block": {
																		"id": 1342,
																		"nodeType": "Block",
																		"src": "14537:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1339,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "14563:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1338,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14556:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14556:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1341,
																				"nodeType": "ExpressionStatement",
																				"src": "14556:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1343,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1337,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1336,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14529:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1343,
																				"src": "14515:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1335,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14515:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14514:22:2"
																	},
																	"src": "14503:83:2"
																},
																{
																	"block": {
																		"id": 1348,
																		"nodeType": "Block",
																		"src": "14593:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14619:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1344,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14612:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14612:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1347,
																				"nodeType": "ExpressionStatement",
																				"src": "14612:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1349,
																	"nodeType": "TryCatchClause",
																	"src": "14587:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "14254:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "14264:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "14270:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "14274:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "14282:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "14232:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1309,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14215:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14215:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1592,
																	"src": "14215:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14215:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1350,
															"nodeType": "TryStatement",
															"src": "14211:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13973:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14022:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14014:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14014:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14049:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14041:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14072:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14064:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "14093:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14085:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14114:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14106:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14106:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14144:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14131:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14131:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14003:152:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14164:0:2"
									},
									"scope": 1448,
									"src": "13964:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "14941:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "14956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14956:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14956:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "IfStatement",
												"src": "14952:570:2",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "14973:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1398,
																		"nodeType": "Block",
																		"src": "15130:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1387,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "15153:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1388,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "15165:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1610,
																							"src": "15165:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15165:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15153:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1397,
																				"nodeType": "IfStatement",
																				"src": "15149:159:2",
																				"trueBody": {
																					"id": 1396,
																					"nodeType": "Block",
																					"src": "15215:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1393,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15245:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1392,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15238:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1394,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15238:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1395,
																							"nodeType": "ExpressionStatement",
																							"src": "15238:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1399,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1386,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1385,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15106:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1399,
																				"src": "15099:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1384,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15099:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15080:49:2"
																	},
																	"src": "15072:251:2"
																},
																{
																	"block": {
																		"id": 1407,
																		"nodeType": "Block",
																		"src": "15358:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1404,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1401,
																							"src": "15384:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1403,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15377:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15377:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1406,
																				"nodeType": "ExpressionStatement",
																				"src": "15377:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1408,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1402,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15350:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1408,
																				"src": "15336:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15336:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15335:22:2"
																	},
																	"src": "15324:83:2"
																},
																{
																	"block": {
																		"id": 1413,
																		"nodeType": "Block",
																		"src": "15414:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1410,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15440:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1409,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15433:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15433:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1412,
																				"nodeType": "ExpressionStatement",
																				"src": "15433:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1414,
																	"nodeType": "TryCatchClause",
																	"src": "15408:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1378,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "15036:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "15046:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "15052:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1381,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "15057:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "15066:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1375,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "15009:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1374,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14992:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14992:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "14992:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14992:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1415,
															"nodeType": "TryStatement",
															"src": "14988:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14725:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14779:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14771:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14829:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14821:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14859:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14842:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1361,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14842:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1362,
													"nodeType": "ArrayTypeName",
													"src": "14842:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14873:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1364,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1365,
													"nodeType": "ArrayTypeName",
													"src": "14873:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14921:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14908:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14908:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14760:172:2"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14941:0:2"
									},
									"scope": 1448,
									"src": "14716:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "15621:114:2",
										"statements": [
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15649:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "15632:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1430,
															"nodeType": "ArrayTypeName",
															"src": "15632:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15671:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15657:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15661:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "15661:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15657:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15632:41:2"
											},
											{
												"expression": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1438,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "15684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1440,
														"indexExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15690:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15684:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1441,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "15695:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15684:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "15684:18:2"
											},
											{
												"expression": {
													"id": 1444,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1431,
													"src": "15722:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1445,
												"nodeType": "Return",
												"src": "15715:12:2"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15546:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15563:17:2"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15603:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15603:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ArrayTypeName",
													"src": "15603:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15602:18:2"
									},
									"scope": 1448,
									"src": "15537:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1449,
							"src": "574:15164:2",
							"usedErrors": []
						}
					],
					"src": "97:15643:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC165": [
							1981
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 1982,
							"src": "125:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1453,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "370:7:3"
									},
									"id": 1454,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1452,
								"nodeType": "StructuredDocumentation",
								"src": "176:170:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1570,
							"linearizedBaseContracts": [
								1570,
								1981
							],
							"name": "IERC1155",
							"nameLocation": "358:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "385:123:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1467,
									"name": "TransferSingle",
									"nameLocation": "520:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "551:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "535:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "611:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "603:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "623:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "615:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:95:3"
									},
									"src": "514:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "638:147:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1482,
									"name": "TransferBatch",
									"nameLocation": "797:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "837:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "821:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "872:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "856:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "887:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "916:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1475,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1476,
													"nodeType": "ArrayTypeName",
													"src": "916:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "950:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "940:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1479,
													"nodeType": "ArrayTypeName",
													"src": "940:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:153:3"
									},
									"src": "791:173:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "972:150:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1491,
									"name": "ApprovalForAll",
									"nameLocation": "1134:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1165:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1149:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1190:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1174:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1205:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1200:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1200:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:66:3"
									},
									"src": "1128:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1223:349:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1498,
									"name": "URI",
									"nameLocation": "1584:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1588:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1618:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1602:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:34:3"
									},
									"src": "1578:44:3"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1630:179:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1824:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1842:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1834:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1859:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1851:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:29:3"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1886:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:9:3"
									},
									"scope": 1570,
									"src": "1815:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1903:194:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2112:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2146:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2127:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2127:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1511,
													"nodeType": "ArrayTypeName",
													"src": "2127:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2175:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2156:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:53:3"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2230:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2230:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2230:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:18:3"
									},
									"scope": 1570,
									"src": "2103:145:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2256:256:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2527:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2545:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2563:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:33:3"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:3"
									},
									"scope": 1570,
									"src": "2518:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2595:139:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2774:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2766:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2791:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2783:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:35:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2824:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:6:3"
									},
									"scope": 1570,
									"src": "2740:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2838:571:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3424:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3459:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3451:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3474:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3503:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3495:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3524:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3516:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3556:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3541:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:127:3"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:3"
									},
									"scope": 1570,
									"src": "3415:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "3585:400:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4000:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4063:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4055:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4095:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4076:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4076:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1560,
													"nodeType": "ArrayTypeName",
													"src": "4076:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4128:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4109:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "4109:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4161:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4146:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:151:3"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:3"
									},
									"scope": 1570,
									"src": "3991:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1571,
							"src": "348:3837:3",
							"usedErrors": []
						}
					],
					"src": "98:4089:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 1982,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "257:7:4"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "184:41:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1981
							],
							"name": "IERC1155Receiver",
							"nameLocation": "237:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "272:828:4",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1115:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1178:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1170:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1201:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1193:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1222:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1214:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1253:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1238:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1238:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:132:4"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1283:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:8:4"
									},
									"scope": 1611,
									"src": "1106:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1299:989:4",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2303:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2344:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2336:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2371:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2363:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2405:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2386:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2386:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2438:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2419:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2419:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ArrayTypeName",
													"src": "2419:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2470:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2455:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2455:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:156:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2500:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2500:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:8:4"
									},
									"scope": 1611,
									"src": "2294:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1612,
							"src": "227:2284:4",
							"usedErrors": []
						}
					],
					"src": "106:2407:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC165": [
							1981
						]
					},
					"id": 1627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1627,
							"sourceUnit": 1571,
							"src": "147:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1616,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "410:8:5"
									},
									"id": 1617,
									"nodeType": "InheritanceSpecifier",
									"src": "410:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1615,
								"nodeType": "StructuredDocumentation",
								"src": "176:199:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1626,
							"linearizedBaseContracts": [
								1626,
								1570,
								1981
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "387:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "426:197:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "638:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "650:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "642:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:12:5"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "677:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:15:5"
									},
									"scope": 1626,
									"src": "629:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1627,
							"src": "377:318:5",
							"usedErrors": []
						}
					],
					"src": "120:577:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1923
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923
							],
							"name": "Address",
							"nameLocation": "195:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "863:321:6",
										"statements": [
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1065:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:6",
														"valueSize": 1
													}
												],
												"id": 1640,
												"nodeType": "InlineAssembly",
												"src": "1088:63:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1168:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1644,
												"nodeType": "Return",
												"src": "1161:15:6"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "817:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "857:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:6"
									},
									"scope": 1923,
									"src": "797:387:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "2190:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1657,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1655,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2234:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:6"
											},
											{
												"assignments": [
													1666,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "2288:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1667,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "2306:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2328:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "2358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:6"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2138:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2165:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:6"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:6"
									},
									"scope": 1923,
									"src": "2119:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3287:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "3318:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3326:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1690,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1697,
															1717
														],
														"referencedDeclaration": 1717,
														"src": "3305:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1695,
												"nodeType": "Return",
												"src": "3298:67:6"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3220:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3273:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:6"
									},
									"scope": 1923,
									"src": "3198:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3754:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3794:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3802:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "3811:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "3772:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1715,
												"nodeType": "Return",
												"src": "3765:59:6"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3635:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3660:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3688:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3740:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:6"
									},
									"scope": 1923,
									"src": "3603:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4354:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4394:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "4402:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4408:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "4372:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1735,
												"nodeType": "Return",
												"src": "4365:94:6"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4248:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4273:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4301:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4340:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:6"
									},
									"scope": 1923,
									"src": "4207:260:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "4907:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4951:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1764,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "5029:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1763,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5018:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:6"
											},
											{
												"assignments": [
													1770,
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5084:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5098:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "5151:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1773,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5125:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "5144:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5191:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1782,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5200:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1783,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5212:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1780,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5174:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1785,
												"nodeType": "Return",
												"src": "5167:58:6"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4789:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4817:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4841:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4893:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:6"
									},
									"scope": 1923,
									"src": "4723:510:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "5518:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "5555:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5563:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1797,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1804,
															1839
														],
														"referencedDeclaration": 1839,
														"src": "5536:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "5529:80:6"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5446:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5462:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5504:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:6"
									},
									"scope": 1923,
									"src": "5418:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "5971:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1818,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "6001:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5990:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:6"
											},
											{
												"assignments": [
													1824,
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6063:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6077:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1825,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"id": 1829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6104:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "6162:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1834,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "6171:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1835,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6183:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1832,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6145:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1837,
												"nodeType": "Return",
												"src": "6138:58:6"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5847:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5872:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5900:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5957:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:6"
									},
									"scope": 1923,
									"src": "5809:395:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "6488:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6527:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "6535:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1849,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1856,
															1891
														],
														"referencedDeclaration": 1891,
														"src": "6506:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1854,
												"nodeType": "Return",
												"src": "6499:84:6"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6421:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6437:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:6"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6474:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:6"
									},
									"scope": 1923,
									"src": "6391:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "6944:237:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1870,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "6974:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1869,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "6963:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:6"
											},
											{
												"assignments": [
													1876,
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7038:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1875,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7052:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"arguments": [
														{
															"id": 1881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "7099:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1879,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "7079:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "7139:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1886,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "7148:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1887,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "7160:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1884,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "7122:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1889,
												"nodeType": "Return",
												"src": "7115:58:6"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6825:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6850:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6878:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:6"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6930:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:6"
									},
									"scope": 1923,
									"src": "6785:396:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "7573:548:6",
										"statements": [
											{
												"condition": {
													"id": 1903,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1894,
													"src": "7588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "7647:467:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1907,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "7733:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1917,
																"nodeType": "Block",
																"src": "8048:55:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1914,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "8074:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1913,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1916,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:6"
																	}
																]
															},
															"id": 1918,
															"nodeType": "IfStatement",
															"src": "7729:374:6",
															"trueBody": {
																"id": 1912,
																"nodeType": "Block",
																"src": "7756:286:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1911,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "7584:530:6",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "7597:44:6",
													"statements": [
														{
															"expression": {
																"id": 1904,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "7619:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1902,
															"id": 1905,
															"nodeType": "Return",
															"src": "7612:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7445:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7468:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7502:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:6"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:6"
									},
									"scope": 1923,
									"src": "7409:712:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1924,
							"src": "187:7937:6",
							"usedErrors": []
						}
					],
					"src": "89:8037:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1945
						]
					},
					"id": 1946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1945,
							"linearizedBaseContracts": [
								1945
							],
							"name": "Context",
							"nameLocation": "641:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "718:36:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1931,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1933,
												"nodeType": "Return",
												"src": "729:17:7"
											}
										]
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1945,
									"src": "656:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "829:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1940,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1942,
												"nodeType": "Return",
												"src": "840:15:7"
											}
										]
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:7"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "813:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:7"
									},
									"scope": 1945,
									"src": "762:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1946,
							"src": "623:243:7",
							"usedErrors": []
						}
					],
					"src": "89:779:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1969
						],
						"IERC165": [
							1981
						]
					},
					"id": 1970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 1982,
							"src": "129:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1950,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "775:7:8"
									},
									"id": 1951,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1949,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969,
								1981
							],
							"name": "ERC165",
							"nameLocation": "765:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "945:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "963:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1962,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "983:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1961,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1981",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1966,
												"nodeType": "Return",
												"src": "956:47:8"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:8"
									},
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "881:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:8"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "939:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:8"
									},
									"scope": 1969,
									"src": "854:157:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1970,
							"src": "747:267:8",
							"usedErrors": []
						}
					],
					"src": "102:914:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1981
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1981,
							"linearizedBaseContracts": [
								1981
							],
							"name": "IERC165",
							"nameLocation": "429:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "824:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "867:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:9"
									},
									"scope": 1981,
									"src": "797:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1982,
							"src": "419:457:9",
							"usedErrors": []
						}
					],
					"src": "103:775:9"
				},
				"id": 9
			}
		}
	}
}